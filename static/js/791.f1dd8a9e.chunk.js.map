{"version":3,"file":"static/js/791.f1dd8a9e.chunk.js","mappings":"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","sources":["../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","../node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js","../node_modules/@babel/runtime/helpers/esm/typeof.js","../node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","../node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","../node_modules/@babel/runtime/helpers/esm/toPropertyKey.js","../node_modules/@babel/runtime/helpers/esm/toPrimitive.js","../node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/@babel/runtime/helpers/esm/objectSpread2.js","../node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js","../node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","../node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","../node_modules/@babel/runtime/helpers/esm/isNativeReflectConstruct.js","../node_modules/@babel/runtime/helpers/esm/construct.js","../node_modules/@babel/runtime/helpers/esm/createClass.js","../node_modules/@babel/runtime/helpers/esm/classCallCheck.js","../node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js","../node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","../node_modules/@babel/runtime/helpers/esm/inherits.js","../node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js","../node_modules/@babel/runtime/helpers/esm/createSuper.js","../node_modules/@babel/runtime/helpers/esm/wrapNativeSuper.js","../node_modules/@babel/runtime/helpers/esm/isNativeFunction.js","../node_modules/@babel/runtime/helpers/esm/asyncIterator.js","../node_modules/@sqlite.org/sqlite-wasm/sqlite-wasm/jswasm/sqlite3-bundler-friendly.mjs","../node_modules/@sqlite.org/sqlite-wasm/index.mjs"],"sourcesContent":["function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n      args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n      _next(undefined);\n    });\n  };\n}","import _typeof from \"./typeof.js\";\nexport default function _regeneratorRuntime() {\n  \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */\n  _regeneratorRuntime = function _regeneratorRuntime() {\n    return exports;\n  };\n  var exports = {},\n    Op = Object.prototype,\n    hasOwn = Op.hasOwnProperty,\n    defineProperty = Object.defineProperty || function (obj, key, desc) {\n      obj[key] = desc.value;\n    },\n    $Symbol = \"function\" == typeof Symbol ? Symbol : {},\n    iteratorSymbol = $Symbol.iterator || \"@@iterator\",\n    asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\",\n    toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n  function define(obj, key, value) {\n    return Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: !0,\n      configurable: !0,\n      writable: !0\n    }), obj[key];\n  }\n  try {\n    define({}, \"\");\n  } catch (err) {\n    define = function define(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator,\n      generator = Object.create(protoGenerator.prototype),\n      context = new Context(tryLocsList || []);\n    return defineProperty(generator, \"_invoke\", {\n      value: makeInvokeMethod(innerFn, self, context)\n    }), generator;\n  }\n  function tryCatch(fn, obj, arg) {\n    try {\n      return {\n        type: \"normal\",\n        arg: fn.call(obj, arg)\n      };\n    } catch (err) {\n      return {\n        type: \"throw\",\n        arg: err\n      };\n    }\n  }\n  exports.wrap = wrap;\n  var ContinueSentinel = {};\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n  var IteratorPrototype = {};\n  define(IteratorPrototype, iteratorSymbol, function () {\n    return this;\n  });\n  var getProto = Object.getPrototypeOf,\n    NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype);\n  var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype);\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function (method) {\n      define(prototype, method, function (arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (\"throw\" !== record.type) {\n        var result = record.arg,\n          value = result.value;\n        return value && \"object\" == _typeof(value) && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) {\n          invoke(\"next\", value, resolve, reject);\n        }, function (err) {\n          invoke(\"throw\", err, resolve, reject);\n        }) : PromiseImpl.resolve(value).then(function (unwrapped) {\n          result.value = unwrapped, resolve(result);\n        }, function (error) {\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n      reject(record.arg);\n    }\n    var previousPromise;\n    defineProperty(this, \"_invoke\", {\n      value: function value(method, arg) {\n        function callInvokeWithMethodAndArg() {\n          return new PromiseImpl(function (resolve, reject) {\n            invoke(method, arg, resolve, reject);\n          });\n        }\n        return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();\n      }\n    });\n  }\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = \"suspendedStart\";\n    return function (method, arg) {\n      if (\"executing\" === state) throw new Error(\"Generator is already running\");\n      if (\"completed\" === state) {\n        if (\"throw\" === method) throw arg;\n        return doneResult();\n      }\n      for (context.method = method, context.arg = arg;;) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n        if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) {\n          if (\"suspendedStart\" === state) throw state = \"completed\", context.arg;\n          context.dispatchException(context.arg);\n        } else \"return\" === context.method && context.abrupt(\"return\", context.arg);\n        state = \"executing\";\n        var record = tryCatch(innerFn, self, context);\n        if (\"normal\" === record.type) {\n          if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue;\n          return {\n            value: record.arg,\n            done: context.done\n          };\n        }\n        \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg);\n      }\n    };\n  }\n  function maybeInvokeDelegate(delegate, context) {\n    var methodName = context.method,\n      method = delegate.iterator[methodName];\n    if (undefined === method) return context.delegate = null, \"throw\" === methodName && delegate.iterator[\"return\"] && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method) || \"return\" !== methodName && (context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a '\" + methodName + \"' method\")), ContinueSentinel;\n    var record = tryCatch(method, delegate.iterator, context.arg);\n    if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel;\n    var info = record.arg;\n    return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel);\n  }\n  function pushTryEntry(locs) {\n    var entry = {\n      tryLoc: locs[0]\n    };\n    1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry);\n  }\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\", delete record.arg, entry.completion = record;\n  }\n  function Context(tryLocsList) {\n    this.tryEntries = [{\n      tryLoc: \"root\"\n    }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0);\n  }\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) return iteratorMethod.call(iterable);\n      if (\"function\" == typeof iterable.next) return iterable;\n      if (!isNaN(iterable.length)) {\n        var i = -1,\n          next = function next() {\n            for (; ++i < iterable.length;) if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next;\n            return next.value = undefined, next.done = !0, next;\n          };\n        return next.next = next;\n      }\n    }\n    return {\n      next: doneResult\n    };\n  }\n  function doneResult() {\n    return {\n      value: undefined,\n      done: !0\n    };\n  }\n  return GeneratorFunction.prototype = GeneratorFunctionPrototype, defineProperty(Gp, \"constructor\", {\n    value: GeneratorFunctionPrototype,\n    configurable: !0\n  }), defineProperty(GeneratorFunctionPrototype, \"constructor\", {\n    value: GeneratorFunction,\n    configurable: !0\n  }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) {\n    var ctor = \"function\" == typeof genFun && genFun.constructor;\n    return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name));\n  }, exports.mark = function (genFun) {\n    return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun;\n  }, exports.awrap = function (arg) {\n    return {\n      __await: arg\n    };\n  }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () {\n    return this;\n  }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    void 0 === PromiseImpl && (PromiseImpl = Promise);\n    var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl);\n    return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) {\n      return result.done ? result.value : iter.next();\n    });\n  }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () {\n    return this;\n  }), define(Gp, \"toString\", function () {\n    return \"[object Generator]\";\n  }), exports.keys = function (val) {\n    var object = Object(val),\n      keys = [];\n    for (var key in object) keys.push(key);\n    return keys.reverse(), function next() {\n      for (; keys.length;) {\n        var key = keys.pop();\n        if (key in object) return next.value = key, next.done = !1, next;\n      }\n      return next.done = !0, next;\n    };\n  }, exports.values = values, Context.prototype = {\n    constructor: Context,\n    reset: function reset(skipTempReset) {\n      if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined);\n    },\n    stop: function stop() {\n      this.done = !0;\n      var rootRecord = this.tryEntries[0].completion;\n      if (\"throw\" === rootRecord.type) throw rootRecord.arg;\n      return this.rval;\n    },\n    dispatchException: function dispatchException(exception) {\n      if (this.done) throw exception;\n      var context = this;\n      function handle(loc, caught) {\n        return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught;\n      }\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i],\n          record = entry.completion;\n        if (\"root\" === entry.tryLoc) return handle(\"end\");\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\"),\n            hasFinally = hasOwn.call(entry, \"finallyLoc\");\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0);\n            if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc);\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0);\n          } else {\n            if (!hasFinally) throw new Error(\"try statement without catch or finally\");\n            if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc);\n          }\n        }\n      }\n    },\n    abrupt: function abrupt(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n      finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null);\n      var record = finallyEntry ? finallyEntry.completion : {};\n      return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record);\n    },\n    complete: function complete(record, afterLoc) {\n      if (\"throw\" === record.type) throw record.arg;\n      return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel;\n    },\n    finish: function finish(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel;\n      }\n    },\n    \"catch\": function _catch(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (\"throw\" === record.type) {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n      throw new Error(\"illegal catch attempt\");\n    },\n    delegateYield: function delegateYield(iterable, resultName, nextLoc) {\n      return this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel;\n    }\n  }, exports;\n}","export default function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, _typeof(obj);\n}","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n  return arr2;\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","import arrayWithoutHoles from \"./arrayWithoutHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableSpread from \"./nonIterableSpread.js\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import _typeof from \"./typeof.js\";\nimport toPrimitive from \"./toPrimitive.js\";\nexport default function _toPropertyKey(arg) {\n  var key = toPrimitive(arg, \"string\");\n  return _typeof(key) === \"symbol\" ? key : String(key);\n}","import _typeof from \"./typeof.js\";\nexport default function _toPrimitive(input, hint) {\n  if (_typeof(input) !== \"object\" || input === null) return input;\n  var prim = input[Symbol.toPrimitive];\n  if (prim !== undefined) {\n    var res = prim.call(input, hint || \"default\");\n    if (_typeof(res) !== \"object\") return res;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (hint === \"string\" ? String : Number)(input);\n}","import toPropertyKey from \"./toPropertyKey.js\";\nexport default function _defineProperty(obj, key, value) {\n  key = toPropertyKey(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}","import defineProperty from \"./defineProperty.js\";\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n  return target;\n}","import unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nexport default function _createForOfIteratorHelper(o, allowArrayLike) {\n  var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n  if (!it) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n      var F = function F() {};\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n  var normalCompletion = true,\n    didErr = false,\n    err;\n  return {\n    s: function s() {\n      it = it.call(o);\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}","import arrayWithHoles from \"./arrayWithHoles.js\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableRest from \"./nonIterableRest.js\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  var _i = null == arr ? null : \"undefined\" != typeof Symbol && arr[Symbol.iterator] || arr[\"@@iterator\"];\n  if (null != _i) {\n    var _s,\n      _e,\n      _x,\n      _r,\n      _arr = [],\n      _n = !0,\n      _d = !1;\n    try {\n      if (_x = (_i = _i.call(arr)).next, 0 === i) {\n        if (Object(_i) !== _i) return;\n        _n = !1;\n      } else for (; !(_n = (_s = _x.call(_i)).done) && (_arr.push(_s.value), _arr.length !== i); _n = !0);\n    } catch (err) {\n      _d = !0, _e = err;\n    } finally {\n      try {\n        if (!_n && null != _i[\"return\"] && (_r = _i[\"return\"](), Object(_r) !== _r)) return;\n      } finally {\n        if (_d) throw _e;\n      }\n    }\n    return _arr;\n  }\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n  return _setPrototypeOf(o, p);\n}","export default function _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}","import setPrototypeOf from \"./setPrototypeOf.js\";\nimport isNativeReflectConstruct from \"./isNativeReflectConstruct.js\";\nexport default function _construct(Parent, args, Class) {\n  if (isNativeReflectConstruct()) {\n    _construct = Reflect.construct.bind();\n  } else {\n    _construct = function _construct(Parent, args, Class) {\n      var a = [null];\n      a.push.apply(a, args);\n      var Constructor = Function.bind.apply(Parent, a);\n      var instance = new Constructor();\n      if (Class) setPrototypeOf(instance, Class.prototype);\n      return instance;\n    };\n  }\n  return _construct.apply(null, arguments);\n}","import toPropertyKey from \"./toPropertyKey.js\";\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, toPropertyKey(descriptor.key), descriptor);\n  }\n}\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}","export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","import _typeof from \"./typeof.js\";\nimport assertThisInitialized from \"./assertThisInitialized.js\";\nexport default function _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  } else if (call !== void 0) {\n    throw new TypeError(\"Derived constructors may only return object or undefined\");\n  }\n  return assertThisInitialized(self);\n}","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return self;\n}","import setPrototypeOf from \"./setPrototypeOf.js\";\nexport default function _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  Object.defineProperty(subClass, \"prototype\", {\n    writable: false\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}","export default function _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}","import getPrototypeOf from \"./getPrototypeOf.js\";\nimport isNativeReflectConstruct from \"./isNativeReflectConstruct.js\";\nimport possibleConstructorReturn from \"./possibleConstructorReturn.js\";\nexport default function _createSuper(Derived) {\n  var hasNativeReflectConstruct = isNativeReflectConstruct();\n  return function _createSuperInternal() {\n    var Super = getPrototypeOf(Derived),\n      result;\n    if (hasNativeReflectConstruct) {\n      var NewTarget = getPrototypeOf(this).constructor;\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n    return possibleConstructorReturn(this, result);\n  };\n}","import getPrototypeOf from \"./getPrototypeOf.js\";\nimport setPrototypeOf from \"./setPrototypeOf.js\";\nimport isNativeFunction from \"./isNativeFunction.js\";\nimport construct from \"./construct.js\";\nexport default function _wrapNativeSuper(Class) {\n  var _cache = typeof Map === \"function\" ? new Map() : undefined;\n  _wrapNativeSuper = function _wrapNativeSuper(Class) {\n    if (Class === null || !isNativeFunction(Class)) return Class;\n    if (typeof Class !== \"function\") {\n      throw new TypeError(\"Super expression must either be null or a function\");\n    }\n    if (typeof _cache !== \"undefined\") {\n      if (_cache.has(Class)) return _cache.get(Class);\n      _cache.set(Class, Wrapper);\n    }\n    function Wrapper() {\n      return construct(Class, arguments, getPrototypeOf(this).constructor);\n    }\n    Wrapper.prototype = Object.create(Class.prototype, {\n      constructor: {\n        value: Wrapper,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n    return setPrototypeOf(Wrapper, Class);\n  };\n  return _wrapNativeSuper(Class);\n}","export default function _isNativeFunction(fn) {\n  return Function.toString.call(fn).indexOf(\"[native code]\") !== -1;\n}","export default function _asyncIterator(iterable) {\n  var method,\n    async,\n    sync,\n    retry = 2;\n  for (\"undefined\" != typeof Symbol && (async = Symbol.asyncIterator, sync = Symbol.iterator); retry--;) {\n    if (async && null != (method = iterable[async])) return method.call(iterable);\n    if (sync && null != (method = iterable[sync])) return new AsyncFromSyncIterator(method.call(iterable));\n    async = \"@@asyncIterator\", sync = \"@@iterator\";\n  }\n  throw new TypeError(\"Object is not async iterable\");\n}\nfunction AsyncFromSyncIterator(s) {\n  function AsyncFromSyncIteratorContinuation(r) {\n    if (Object(r) !== r) return Promise.reject(new TypeError(r + \" is not an object.\"));\n    var done = r.done;\n    return Promise.resolve(r.value).then(function (value) {\n      return {\n        value: value,\n        done: done\n      };\n    });\n  }\n  return AsyncFromSyncIterator = function AsyncFromSyncIterator(s) {\n    this.s = s, this.n = s.next;\n  }, AsyncFromSyncIterator.prototype = {\n    s: null,\n    n: null,\n    next: function next() {\n      return AsyncFromSyncIteratorContinuation(this.n.apply(this.s, arguments));\n    },\n    \"return\": function _return(value) {\n      var ret = this.s[\"return\"];\n      return void 0 === ret ? Promise.resolve({\n        value: value,\n        done: !0\n      }) : AsyncFromSyncIteratorContinuation(ret.apply(this.s, arguments));\n    },\n    \"throw\": function _throw(value) {\n      var thr = this.s[\"return\"];\n      return void 0 === thr ? Promise.reject(value) : AsyncFromSyncIteratorContinuation(thr.apply(this.s, arguments));\n    }\n  }, new AsyncFromSyncIterator(s);\n}","/*\n ** LICENSE for the sqlite3 WebAssembly/JavaScript APIs.\n **\n ** This bundle (typically released as sqlite3.js or sqlite3.mjs)\n ** is an amalgamation of JavaScript source code from two projects:\n **\n ** 1) https://emscripten.org: the Emscripten \"glue code\" is covered by\n **    the terms of the MIT license and University of Illinois/NCSA\n **    Open Source License, as described at:\n **\n **    https://emscripten.org/docs/introducing_emscripten/emscripten_license.html\n **\n ** 2) https://sqlite.org: all code and documentation labeled as being\n **    from this source are released under the same terms as the sqlite3\n **    C library:\n **\n ** 2022-10-16\n **\n ** The author disclaims copyright to this source code.  In place of a\n ** legal notice, here is a blessing:\n **\n ** *   May you do good and not evil.\n ** *   May you find forgiveness for yourself and forgive others.\n ** *   May you share freely, never taking more than you give.\n */\n/*\n ** This code was built from sqlite3 version...\n **\n **\n ** Using the Emscripten SDK version 3.1.30.\n */\n\nvar sqlite3InitModule = (() => {\n  var _scriptDir = import.meta.url;\n\n  return function (config) {\n    var sqlite3InitModule = config || {};\n\n    ('use strict');\n\n    var Module =\n      typeof sqlite3InitModule != 'undefined' ? sqlite3InitModule : {};\n\n    var readyPromiseResolve, readyPromiseReject;\n    Module['ready'] = new Promise(function (resolve, reject) {\n      readyPromiseResolve = resolve;\n      readyPromiseReject = reject;\n    });\n\n    const sqlite3InitModuleState =\n      self.sqlite3InitModuleState ||\n      Object.assign(Object.create(null), {\n        debugModule: () => {},\n      });\n    delete self.sqlite3InitModuleState;\n    sqlite3InitModuleState.debugModule('self.location =', self.location);\n\n    const xNameOfInstantiateWasm = false\n      ? 'instantiateWasm'\n      : 'emscripten-bug-17951';\n    Module[xNameOfInstantiateWasm] = function callee(imports, onSuccess) {\n      imports.env.foo = function () {};\n      const uri = Module.locateFile(\n        callee.uri,\n        'undefined' === typeof scriptDirectory ? '' : scriptDirectory,\n      );\n      sqlite3InitModuleState.debugModule('instantiateWasm() uri =', uri);\n      const wfetch = () => fetch(uri, { credentials: 'same-origin' });\n      const loadWasm = WebAssembly.instantiateStreaming\n        ? async () => {\n            return WebAssembly.instantiateStreaming(wfetch(), imports).then(\n              (arg) => onSuccess(arg.instance, arg.module),\n            );\n          }\n        : async () => {\n            return wfetch()\n              .then((response) => response.arrayBuffer())\n              .then((bytes) => WebAssembly.instantiate(bytes, imports))\n              .then((arg) => onSuccess(arg.instance, arg.module));\n          };\n      loadWasm();\n      return {};\n    };\n\n    Module[xNameOfInstantiateWasm].uri = 'sqlite3.wasm';\n\n    var moduleOverrides = Object.assign({}, Module);\n\n    var arguments_ = [];\n    var thisProgram = './this.program';\n    var quit_ = (status, toThrow) => {\n      throw toThrow;\n    };\n\n    var ENVIRONMENT_IS_WEB = typeof window == 'object';\n    var ENVIRONMENT_IS_WORKER = typeof importScripts == 'function';\n\n    var ENVIRONMENT_IS_NODE =\n      typeof process == 'object' &&\n      typeof process.versions == 'object' &&\n      typeof process.versions.node == 'string';\n    var ENVIRONMENT_IS_SHELL =\n      !ENVIRONMENT_IS_WEB && !ENVIRONMENT_IS_NODE && !ENVIRONMENT_IS_WORKER;\n\n    var scriptDirectory = '';\n    function locateFile(path) {\n      if (Module['locateFile']) {\n        return Module['locateFile'](path, scriptDirectory);\n      }\n      return scriptDirectory + path;\n    }\n\n    var read_, readAsync, readBinary, setWindowTitle;\n\n    if (ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER) {\n      if (ENVIRONMENT_IS_WORKER) {\n        scriptDirectory = self.location.href;\n      } else if (typeof document != 'undefined' && document.currentScript) {\n        scriptDirectory = document.currentScript.src;\n      }\n\n      if (_scriptDir) {\n        scriptDirectory = _scriptDir;\n      }\n\n      if (scriptDirectory.indexOf('blob:') !== 0) {\n        scriptDirectory = scriptDirectory.substr(\n          0,\n          scriptDirectory.replace(/[?#].*/, '').lastIndexOf('/') + 1,\n        );\n      } else {\n        scriptDirectory = '';\n      }\n\n      {\n        read_ = (url) => {\n          var xhr = new XMLHttpRequest();\n          xhr.open('GET', url, false);\n          xhr.send(null);\n          return xhr.responseText;\n        };\n\n        if (ENVIRONMENT_IS_WORKER) {\n          readBinary = (url) => {\n            var xhr = new XMLHttpRequest();\n            xhr.open('GET', url, false);\n            xhr.responseType = 'arraybuffer';\n            xhr.send(null);\n            return new Uint8Array(xhr.response);\n          };\n        }\n\n        readAsync = (url, onload, onerror) => {\n          var xhr = new XMLHttpRequest();\n          xhr.open('GET', url, true);\n          xhr.responseType = 'arraybuffer';\n          xhr.onload = () => {\n            if (xhr.status == 200 || (xhr.status == 0 && xhr.response)) {\n              onload(xhr.response);\n              return;\n            }\n            onerror();\n          };\n          xhr.onerror = onerror;\n          xhr.send(null);\n        };\n      }\n\n      setWindowTitle = (title) => (document.title = title);\n    } else {\n    }\n\n    var out = Module['print'] || console.log.bind(console);\n    var err = Module['printErr'] || console.warn.bind(console);\n\n    Object.assign(Module, moduleOverrides);\n\n    moduleOverrides = null;\n\n    if (Module['arguments']) arguments_ = Module['arguments'];\n\n    if (Module['thisProgram']) thisProgram = Module['thisProgram'];\n\n    if (Module['quit']) quit_ = Module['quit'];\n\n    var STACK_ALIGN = 16;\n    var POINTER_SIZE = 4;\n\n    function getNativeTypeSize(type) {\n      switch (type) {\n        case 'i1':\n        case 'i8':\n        case 'u8':\n          return 1;\n        case 'i16':\n        case 'u16':\n          return 2;\n        case 'i32':\n        case 'u32':\n          return 4;\n        case 'i64':\n        case 'u64':\n          return 8;\n        case 'float':\n          return 4;\n        case 'double':\n          return 8;\n        default: {\n          if (type[type.length - 1] === '*') {\n            return POINTER_SIZE;\n          }\n          if (type[0] === 'i') {\n            const bits = Number(type.substr(1));\n            assert(\n              bits % 8 === 0,\n              'getNativeTypeSize invalid bits ' + bits + ', type ' + type,\n            );\n            return bits / 8;\n          }\n          return 0;\n        }\n      }\n    }\n\n    var wasmBinary;\n    if (Module['wasmBinary']) wasmBinary = Module['wasmBinary'];\n    var noExitRuntime = Module['noExitRuntime'] || true;\n\n    if (typeof WebAssembly != 'object') {\n      abort('no native wasm support detected');\n    }\n\n    var wasmMemory;\n\n    var ABORT = false;\n\n    var EXITSTATUS;\n\n    function assert(condition, text) {\n      if (!condition) {\n        abort(text);\n      }\n    }\n\n    var UTF8Decoder =\n      typeof TextDecoder != 'undefined' ? new TextDecoder('utf8') : undefined;\n\n    function UTF8ArrayToString(heapOrArray, idx, maxBytesToRead) {\n      var endIdx = idx + maxBytesToRead;\n      var endPtr = idx;\n\n      while (heapOrArray[endPtr] && !(endPtr >= endIdx)) ++endPtr;\n\n      if (endPtr - idx > 16 && heapOrArray.buffer && UTF8Decoder) {\n        return UTF8Decoder.decode(heapOrArray.subarray(idx, endPtr));\n      }\n      var str = '';\n\n      while (idx < endPtr) {\n        var u0 = heapOrArray[idx++];\n        if (!(u0 & 0x80)) {\n          str += String.fromCharCode(u0);\n          continue;\n        }\n        var u1 = heapOrArray[idx++] & 63;\n        if ((u0 & 0xe0) == 0xc0) {\n          str += String.fromCharCode(((u0 & 31) << 6) | u1);\n          continue;\n        }\n        var u2 = heapOrArray[idx++] & 63;\n        if ((u0 & 0xf0) == 0xe0) {\n          u0 = ((u0 & 15) << 12) | (u1 << 6) | u2;\n        } else {\n          u0 =\n            ((u0 & 7) << 18) |\n            (u1 << 12) |\n            (u2 << 6) |\n            (heapOrArray[idx++] & 63);\n        }\n\n        if (u0 < 0x10000) {\n          str += String.fromCharCode(u0);\n        } else {\n          var ch = u0 - 0x10000;\n          str += String.fromCharCode(\n            0xd800 | (ch >> 10),\n            0xdc00 | (ch & 0x3ff),\n          );\n        }\n      }\n      return str;\n    }\n\n    function UTF8ToString(ptr, maxBytesToRead) {\n      return ptr ? UTF8ArrayToString(HEAPU8, ptr, maxBytesToRead) : '';\n    }\n\n    function stringToUTF8Array(str, heap, outIdx, maxBytesToWrite) {\n      if (!(maxBytesToWrite > 0)) return 0;\n\n      var startIdx = outIdx;\n      var endIdx = outIdx + maxBytesToWrite - 1;\n      for (var i = 0; i < str.length; ++i) {\n        var u = str.charCodeAt(i);\n        if (u >= 0xd800 && u <= 0xdfff) {\n          var u1 = str.charCodeAt(++i);\n          u = (0x10000 + ((u & 0x3ff) << 10)) | (u1 & 0x3ff);\n        }\n        if (u <= 0x7f) {\n          if (outIdx >= endIdx) break;\n          heap[outIdx++] = u;\n        } else if (u <= 0x7ff) {\n          if (outIdx + 1 >= endIdx) break;\n          heap[outIdx++] = 0xc0 | (u >> 6);\n          heap[outIdx++] = 0x80 | (u & 63);\n        } else if (u <= 0xffff) {\n          if (outIdx + 2 >= endIdx) break;\n          heap[outIdx++] = 0xe0 | (u >> 12);\n          heap[outIdx++] = 0x80 | ((u >> 6) & 63);\n          heap[outIdx++] = 0x80 | (u & 63);\n        } else {\n          if (outIdx + 3 >= endIdx) break;\n          heap[outIdx++] = 0xf0 | (u >> 18);\n          heap[outIdx++] = 0x80 | ((u >> 12) & 63);\n          heap[outIdx++] = 0x80 | ((u >> 6) & 63);\n          heap[outIdx++] = 0x80 | (u & 63);\n        }\n      }\n\n      heap[outIdx] = 0;\n      return outIdx - startIdx;\n    }\n\n    function stringToUTF8(str, outPtr, maxBytesToWrite) {\n      return stringToUTF8Array(str, HEAPU8, outPtr, maxBytesToWrite);\n    }\n\n    function lengthBytesUTF8(str) {\n      var len = 0;\n      for (var i = 0; i < str.length; ++i) {\n        var c = str.charCodeAt(i);\n        if (c <= 0x7f) {\n          len++;\n        } else if (c <= 0x7ff) {\n          len += 2;\n        } else if (c >= 0xd800 && c <= 0xdfff) {\n          len += 4;\n          ++i;\n        } else {\n          len += 3;\n        }\n      }\n      return len;\n    }\n\n    var HEAP,\n      HEAP8,\n      HEAPU8,\n      HEAP16,\n      HEAPU16,\n      HEAP32,\n      HEAPU32,\n      HEAPF32,\n      HEAP64,\n      HEAPU64,\n      HEAPF64;\n\n    function updateMemoryViews() {\n      var b = wasmMemory.buffer;\n      Module['HEAP8'] = HEAP8 = new Int8Array(b);\n      Module['HEAP16'] = HEAP16 = new Int16Array(b);\n      Module['HEAP32'] = HEAP32 = new Int32Array(b);\n      Module['HEAPU8'] = HEAPU8 = new Uint8Array(b);\n      Module['HEAPU16'] = HEAPU16 = new Uint16Array(b);\n      Module['HEAPU32'] = HEAPU32 = new Uint32Array(b);\n      Module['HEAPF32'] = HEAPF32 = new Float32Array(b);\n      Module['HEAPF64'] = HEAPF64 = new Float64Array(b);\n      Module['HEAP64'] = HEAP64 = new BigInt64Array(b);\n      Module['HEAPU64'] = HEAPU64 = new BigUint64Array(b);\n    }\n\n    var STACK_SIZE = 524288;\n\n    var INITIAL_MEMORY = Module['INITIAL_MEMORY'] || 16777216;\n\n    if (Module['wasmMemory']) {\n      wasmMemory = Module['wasmMemory'];\n    } else {\n      wasmMemory = new WebAssembly.Memory({\n        initial: INITIAL_MEMORY / 65536,\n\n        maximum: 2147483648 / 65536,\n      });\n    }\n\n    updateMemoryViews();\n\n    INITIAL_MEMORY = wasmMemory.buffer.byteLength;\n\n    var wasmTable;\n\n    var __ATPRERUN__ = [];\n    var __ATINIT__ = [];\n    var __ATEXIT__ = [];\n    var __ATPOSTRUN__ = [];\n\n    var runtimeInitialized = false;\n\n    function keepRuntimeAlive() {\n      return noExitRuntime;\n    }\n\n    function preRun() {\n      if (Module['preRun']) {\n        if (typeof Module['preRun'] == 'function')\n          Module['preRun'] = [Module['preRun']];\n        while (Module['preRun'].length) {\n          addOnPreRun(Module['preRun'].shift());\n        }\n      }\n\n      callRuntimeCallbacks(__ATPRERUN__);\n    }\n\n    function initRuntime() {\n      runtimeInitialized = true;\n\n      if (!Module['noFSInit'] && !FS.init.initialized) FS.init();\n      FS.ignorePermissions = false;\n\n      TTY.init();\n      callRuntimeCallbacks(__ATINIT__);\n    }\n\n    function postRun() {\n      if (Module['postRun']) {\n        if (typeof Module['postRun'] == 'function')\n          Module['postRun'] = [Module['postRun']];\n        while (Module['postRun'].length) {\n          addOnPostRun(Module['postRun'].shift());\n        }\n      }\n\n      callRuntimeCallbacks(__ATPOSTRUN__);\n    }\n\n    function addOnPreRun(cb) {\n      __ATPRERUN__.unshift(cb);\n    }\n\n    function addOnInit(cb) {\n      __ATINIT__.unshift(cb);\n    }\n\n    function addOnExit(cb) {}\n\n    function addOnPostRun(cb) {\n      __ATPOSTRUN__.unshift(cb);\n    }\n\n    var runDependencies = 0;\n    var runDependencyWatcher = null;\n    var dependenciesFulfilled = null;\n\n    function getUniqueRunDependency(id) {\n      return id;\n    }\n\n    function addRunDependency(id) {\n      runDependencies++;\n\n      if (Module['monitorRunDependencies']) {\n        Module['monitorRunDependencies'](runDependencies);\n      }\n    }\n\n    function removeRunDependency(id) {\n      runDependencies--;\n\n      if (Module['monitorRunDependencies']) {\n        Module['monitorRunDependencies'](runDependencies);\n      }\n\n      if (runDependencies == 0) {\n        if (runDependencyWatcher !== null) {\n          clearInterval(runDependencyWatcher);\n          runDependencyWatcher = null;\n        }\n        if (dependenciesFulfilled) {\n          var callback = dependenciesFulfilled;\n          dependenciesFulfilled = null;\n          callback();\n        }\n      }\n    }\n\n    function abort(what) {\n      if (Module['onAbort']) {\n        Module['onAbort'](what);\n      }\n\n      what = 'Aborted(' + what + ')';\n\n      err(what);\n\n      ABORT = true;\n      EXITSTATUS = 1;\n\n      what += '. Build with -sASSERTIONS for more info.';\n\n      var e = new WebAssembly.RuntimeError(what);\n\n      readyPromiseReject(e);\n\n      throw e;\n    }\n\n    var dataURIPrefix = 'data:application/octet-stream;base64,';\n\n    function isDataURI(filename) {\n      return filename.startsWith(dataURIPrefix);\n    }\n\n    function isFileURI(filename) {\n      return filename.startsWith('file://');\n    }\n\n    var wasmBinaryFile;\n    if (Module['locateFile']) {\n      wasmBinaryFile = 'sqlite3.wasm';\n      if (!isDataURI(wasmBinaryFile)) {\n        wasmBinaryFile = locateFile(wasmBinaryFile);\n      }\n    } else {\n      wasmBinaryFile = new URL('sqlite3.wasm', import.meta.url).href;\n    }\n\n    function getBinary(file) {\n      try {\n        if (file == wasmBinaryFile && wasmBinary) {\n          return new Uint8Array(wasmBinary);\n        }\n        if (readBinary) {\n          return readBinary(file);\n        }\n        throw 'both async and sync fetching of the wasm failed';\n      } catch (err) {\n        abort(err);\n      }\n    }\n\n    function getBinaryPromise() {\n      if (!wasmBinary && (ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER)) {\n        if (typeof fetch == 'function') {\n          return fetch(wasmBinaryFile, { credentials: 'same-origin' })\n            .then(function (response) {\n              if (!response['ok']) {\n                throw (\n                  \"failed to load wasm binary file at '\" + wasmBinaryFile + \"'\"\n                );\n              }\n              return response['arrayBuffer']();\n            })\n            .catch(function () {\n              return getBinary(wasmBinaryFile);\n            });\n        }\n      }\n\n      return Promise.resolve().then(function () {\n        return getBinary(wasmBinaryFile);\n      });\n    }\n\n    function createWasm() {\n      var info = {\n        env: asmLibraryArg,\n        wasi_snapshot_preview1: asmLibraryArg,\n      };\n\n      function receiveInstance(instance, module) {\n        var exports = instance.exports;\n\n        Module['asm'] = exports;\n\n        wasmTable = Module['asm']['__indirect_function_table'];\n\n        addOnInit(Module['asm']['__wasm_call_ctors']);\n\n        removeRunDependency('wasm-instantiate');\n      }\n\n      addRunDependency('wasm-instantiate');\n\n      function receiveInstantiationResult(result) {\n        receiveInstance(result['instance']);\n      }\n\n      function instantiateArrayBuffer(receiver) {\n        return getBinaryPromise()\n          .then(function (binary) {\n            return WebAssembly.instantiate(binary, info);\n          })\n          .then(function (instance) {\n            return instance;\n          })\n          .then(receiver, function (reason) {\n            err('failed to asynchronously prepare wasm: ' + reason);\n\n            abort(reason);\n          });\n      }\n\n      function instantiateAsync() {\n        if (\n          !wasmBinary &&\n          typeof WebAssembly.instantiateStreaming == 'function' &&\n          !isDataURI(wasmBinaryFile) &&\n          typeof fetch == 'function'\n        ) {\n          return fetch(wasmBinaryFile, { credentials: 'same-origin' }).then(\n            function (response) {\n              var result = WebAssembly.instantiateStreaming(response, info);\n\n              return result.then(receiveInstantiationResult, function (reason) {\n                err('wasm streaming compile failed: ' + reason);\n                err('falling back to ArrayBuffer instantiation');\n                return instantiateArrayBuffer(receiveInstantiationResult);\n              });\n            },\n          );\n        } else {\n          return instantiateArrayBuffer(receiveInstantiationResult);\n        }\n      }\n\n      if (Module['instantiateWasm']) {\n        try {\n          var exports = Module['instantiateWasm'](info, receiveInstance);\n          return exports;\n        } catch (e) {\n          err('Module.instantiateWasm callback failed with error: ' + e);\n\n          readyPromiseReject(e);\n        }\n      }\n\n      instantiateAsync().catch(readyPromiseReject);\n      return {};\n    }\n\n    var tempDouble;\n    var tempI64;\n\n    var ASM_CONSTS = {};\n\n    function ExitStatus(status) {\n      this.name = 'ExitStatus';\n      this.message = 'Program terminated with exit(' + status + ')';\n      this.status = status;\n    }\n\n    function callRuntimeCallbacks(callbacks) {\n      while (callbacks.length > 0) {\n        callbacks.shift()(Module);\n      }\n    }\n\n    function getValue(ptr, type = 'i8') {\n      if (type.endsWith('*')) type = '*';\n      switch (type) {\n        case 'i1':\n          return HEAP8[ptr >> 0];\n        case 'i8':\n          return HEAP8[ptr >> 0];\n        case 'i16':\n          return HEAP16[ptr >> 1];\n        case 'i32':\n          return HEAP32[ptr >> 2];\n        case 'i64':\n          return HEAP64[ptr >> 3];\n        case 'float':\n          return HEAPF32[ptr >> 2];\n        case 'double':\n          return HEAPF64[ptr >> 3];\n        case '*':\n          return HEAPU32[ptr >> 2];\n        default:\n          abort('invalid type for getValue: ' + type);\n      }\n      return null;\n    }\n\n    function setValue(ptr, value, type = 'i8') {\n      if (type.endsWith('*')) type = '*';\n      switch (type) {\n        case 'i1':\n          HEAP8[ptr >> 0] = value;\n          break;\n        case 'i8':\n          HEAP8[ptr >> 0] = value;\n          break;\n        case 'i16':\n          HEAP16[ptr >> 1] = value;\n          break;\n        case 'i32':\n          HEAP32[ptr >> 2] = value;\n          break;\n        case 'i64':\n          (tempI64 = [\n            value >>> 0,\n            ((tempDouble = value),\n            +Math.abs(tempDouble) >= 1.0\n              ? tempDouble > 0.0\n                ? (Math.min(\n                    +Math.floor(tempDouble / 4294967296.0),\n                    4294967295.0,\n                  ) |\n                    0) >>>\n                  0\n                : ~~+Math.ceil(\n                    (tempDouble - +(~~tempDouble >>> 0)) / 4294967296.0,\n                  ) >>> 0\n              : 0),\n          ]),\n            (HEAP32[ptr >> 2] = tempI64[0]),\n            (HEAP32[(ptr + 4) >> 2] = tempI64[1]);\n          break;\n        case 'float':\n          HEAPF32[ptr >> 2] = value;\n          break;\n        case 'double':\n          HEAPF64[ptr >> 3] = value;\n          break;\n        case '*':\n          HEAPU32[ptr >> 2] = value;\n          break;\n        default:\n          abort('invalid type for setValue: ' + type);\n      }\n    }\n\n    var PATH = {\n      isAbs: (path) => path.charAt(0) === '/',\n      splitPath: (filename) => {\n        var splitPathRe =\n          /^(\\/?|)([\\s\\S]*?)((?:\\.{1,2}|[^\\/]+?|)(\\.[^.\\/]*|))(?:[\\/]*)$/;\n        return splitPathRe.exec(filename).slice(1);\n      },\n      normalizeArray: (parts, allowAboveRoot) => {\n        var up = 0;\n        for (var i = parts.length - 1; i >= 0; i--) {\n          var last = parts[i];\n          if (last === '.') {\n            parts.splice(i, 1);\n          } else if (last === '..') {\n            parts.splice(i, 1);\n            up++;\n          } else if (up) {\n            parts.splice(i, 1);\n            up--;\n          }\n        }\n\n        if (allowAboveRoot) {\n          for (; up; up--) {\n            parts.unshift('..');\n          }\n        }\n        return parts;\n      },\n      normalize: (path) => {\n        var isAbsolute = PATH.isAbs(path),\n          trailingSlash = path.substr(-1) === '/';\n\n        path = PATH.normalizeArray(\n          path.split('/').filter((p) => !!p),\n          !isAbsolute,\n        ).join('/');\n        if (!path && !isAbsolute) {\n          path = '.';\n        }\n        if (path && trailingSlash) {\n          path += '/';\n        }\n        return (isAbsolute ? '/' : '') + path;\n      },\n      dirname: (path) => {\n        var result = PATH.splitPath(path),\n          root = result[0],\n          dir = result[1];\n        if (!root && !dir) {\n          return '.';\n        }\n        if (dir) {\n          dir = dir.substr(0, dir.length - 1);\n        }\n        return root + dir;\n      },\n      basename: (path) => {\n        if (path === '/') return '/';\n        path = PATH.normalize(path);\n        path = path.replace(/\\/$/, '');\n        var lastSlash = path.lastIndexOf('/');\n        if (lastSlash === -1) return path;\n        return path.substr(lastSlash + 1);\n      },\n      join: function () {\n        var paths = Array.prototype.slice.call(arguments);\n        return PATH.normalize(paths.join('/'));\n      },\n      join2: (l, r) => {\n        return PATH.normalize(l + '/' + r);\n      },\n    };\n\n    function getRandomDevice() {\n      if (\n        typeof crypto == 'object' &&\n        typeof crypto['getRandomValues'] == 'function'\n      ) {\n        var randomBuffer = new Uint8Array(1);\n        return () => {\n          crypto.getRandomValues(randomBuffer);\n          return randomBuffer[0];\n        };\n      } else return () => abort('randomDevice');\n    }\n\n    var PATH_FS = {\n      resolve: function () {\n        var resolvedPath = '',\n          resolvedAbsolute = false;\n        for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n          var path = i >= 0 ? arguments[i] : FS.cwd();\n\n          if (typeof path != 'string') {\n            throw new TypeError('Arguments to path.resolve must be strings');\n          } else if (!path) {\n            return '';\n          }\n          resolvedPath = path + '/' + resolvedPath;\n          resolvedAbsolute = PATH.isAbs(path);\n        }\n\n        resolvedPath = PATH.normalizeArray(\n          resolvedPath.split('/').filter((p) => !!p),\n          !resolvedAbsolute,\n        ).join('/');\n        return (resolvedAbsolute ? '/' : '') + resolvedPath || '.';\n      },\n      relative: (from, to) => {\n        from = PATH_FS.resolve(from).substr(1);\n        to = PATH_FS.resolve(to).substr(1);\n        function trim(arr) {\n          var start = 0;\n          for (; start < arr.length; start++) {\n            if (arr[start] !== '') break;\n          }\n          var end = arr.length - 1;\n          for (; end >= 0; end--) {\n            if (arr[end] !== '') break;\n          }\n          if (start > end) return [];\n          return arr.slice(start, end - start + 1);\n        }\n        var fromParts = trim(from.split('/'));\n        var toParts = trim(to.split('/'));\n        var length = Math.min(fromParts.length, toParts.length);\n        var samePartsLength = length;\n        for (var i = 0; i < length; i++) {\n          if (fromParts[i] !== toParts[i]) {\n            samePartsLength = i;\n            break;\n          }\n        }\n        var outputParts = [];\n        for (var i = samePartsLength; i < fromParts.length; i++) {\n          outputParts.push('..');\n        }\n        outputParts = outputParts.concat(toParts.slice(samePartsLength));\n        return outputParts.join('/');\n      },\n    };\n\n    function intArrayFromString(stringy, dontAddNull, length) {\n      var len = length > 0 ? length : lengthBytesUTF8(stringy) + 1;\n      var u8array = new Array(len);\n      var numBytesWritten = stringToUTF8Array(\n        stringy,\n        u8array,\n        0,\n        u8array.length,\n      );\n      if (dontAddNull) u8array.length = numBytesWritten;\n      return u8array;\n    }\n    var TTY = {\n      ttys: [],\n      init: function () {},\n      shutdown: function () {},\n      register: function (dev, ops) {\n        TTY.ttys[dev] = { input: [], output: [], ops: ops };\n        FS.registerDevice(dev, TTY.stream_ops);\n      },\n      stream_ops: {\n        open: function (stream) {\n          var tty = TTY.ttys[stream.node.rdev];\n          if (!tty) {\n            throw new FS.ErrnoError(43);\n          }\n          stream.tty = tty;\n          stream.seekable = false;\n        },\n        close: function (stream) {\n          stream.tty.ops.fsync(stream.tty);\n        },\n        fsync: function (stream) {\n          stream.tty.ops.fsync(stream.tty);\n        },\n        read: function (stream, buffer, offset, length, pos) {\n          if (!stream.tty || !stream.tty.ops.get_char) {\n            throw new FS.ErrnoError(60);\n          }\n          var bytesRead = 0;\n          for (var i = 0; i < length; i++) {\n            var result;\n            try {\n              result = stream.tty.ops.get_char(stream.tty);\n            } catch (e) {\n              throw new FS.ErrnoError(29);\n            }\n            if (result === undefined && bytesRead === 0) {\n              throw new FS.ErrnoError(6);\n            }\n            if (result === null || result === undefined) break;\n            bytesRead++;\n            buffer[offset + i] = result;\n          }\n          if (bytesRead) {\n            stream.node.timestamp = Date.now();\n          }\n          return bytesRead;\n        },\n        write: function (stream, buffer, offset, length, pos) {\n          if (!stream.tty || !stream.tty.ops.put_char) {\n            throw new FS.ErrnoError(60);\n          }\n          try {\n            for (var i = 0; i < length; i++) {\n              stream.tty.ops.put_char(stream.tty, buffer[offset + i]);\n            }\n          } catch (e) {\n            throw new FS.ErrnoError(29);\n          }\n          if (length) {\n            stream.node.timestamp = Date.now();\n          }\n          return i;\n        },\n      },\n      default_tty_ops: {\n        get_char: function (tty) {\n          if (!tty.input.length) {\n            var result = null;\n            if (\n              typeof window != 'undefined' &&\n              typeof window.prompt == 'function'\n            ) {\n              result = window.prompt('Input: ');\n              if (result !== null) {\n                result += '\\n';\n              }\n            } else if (typeof readline == 'function') {\n              result = readline();\n              if (result !== null) {\n                result += '\\n';\n              }\n            }\n            if (!result) {\n              return null;\n            }\n            tty.input = intArrayFromString(result, true);\n          }\n          return tty.input.shift();\n        },\n        put_char: function (tty, val) {\n          if (val === null || val === 10) {\n            out(UTF8ArrayToString(tty.output, 0));\n            tty.output = [];\n          } else {\n            if (val != 0) tty.output.push(val);\n          }\n        },\n        fsync: function (tty) {\n          if (tty.output && tty.output.length > 0) {\n            out(UTF8ArrayToString(tty.output, 0));\n            tty.output = [];\n          }\n        },\n      },\n      default_tty1_ops: {\n        put_char: function (tty, val) {\n          if (val === null || val === 10) {\n            err(UTF8ArrayToString(tty.output, 0));\n            tty.output = [];\n          } else {\n            if (val != 0) tty.output.push(val);\n          }\n        },\n        fsync: function (tty) {\n          if (tty.output && tty.output.length > 0) {\n            err(UTF8ArrayToString(tty.output, 0));\n            tty.output = [];\n          }\n        },\n      },\n    };\n\n    function zeroMemory(address, size) {\n      HEAPU8.fill(0, address, address + size);\n      return address;\n    }\n\n    function alignMemory(size, alignment) {\n      return Math.ceil(size / alignment) * alignment;\n    }\n    function mmapAlloc(size) {\n      abort();\n    }\n    var MEMFS = {\n      ops_table: null,\n      mount: function (mount) {\n        return MEMFS.createNode(null, '/', 16384 | 511, 0);\n      },\n      createNode: function (parent, name, mode, dev) {\n        if (FS.isBlkdev(mode) || FS.isFIFO(mode)) {\n          throw new FS.ErrnoError(63);\n        }\n        if (!MEMFS.ops_table) {\n          MEMFS.ops_table = {\n            dir: {\n              node: {\n                getattr: MEMFS.node_ops.getattr,\n                setattr: MEMFS.node_ops.setattr,\n                lookup: MEMFS.node_ops.lookup,\n                mknod: MEMFS.node_ops.mknod,\n                rename: MEMFS.node_ops.rename,\n                unlink: MEMFS.node_ops.unlink,\n                rmdir: MEMFS.node_ops.rmdir,\n                readdir: MEMFS.node_ops.readdir,\n                symlink: MEMFS.node_ops.symlink,\n              },\n              stream: {\n                llseek: MEMFS.stream_ops.llseek,\n              },\n            },\n            file: {\n              node: {\n                getattr: MEMFS.node_ops.getattr,\n                setattr: MEMFS.node_ops.setattr,\n              },\n              stream: {\n                llseek: MEMFS.stream_ops.llseek,\n                read: MEMFS.stream_ops.read,\n                write: MEMFS.stream_ops.write,\n                allocate: MEMFS.stream_ops.allocate,\n                mmap: MEMFS.stream_ops.mmap,\n                msync: MEMFS.stream_ops.msync,\n              },\n            },\n            link: {\n              node: {\n                getattr: MEMFS.node_ops.getattr,\n                setattr: MEMFS.node_ops.setattr,\n                readlink: MEMFS.node_ops.readlink,\n              },\n              stream: {},\n            },\n            chrdev: {\n              node: {\n                getattr: MEMFS.node_ops.getattr,\n                setattr: MEMFS.node_ops.setattr,\n              },\n              stream: FS.chrdev_stream_ops,\n            },\n          };\n        }\n        var node = FS.createNode(parent, name, mode, dev);\n        if (FS.isDir(node.mode)) {\n          node.node_ops = MEMFS.ops_table.dir.node;\n          node.stream_ops = MEMFS.ops_table.dir.stream;\n          node.contents = {};\n        } else if (FS.isFile(node.mode)) {\n          node.node_ops = MEMFS.ops_table.file.node;\n          node.stream_ops = MEMFS.ops_table.file.stream;\n          node.usedBytes = 0;\n\n          node.contents = null;\n        } else if (FS.isLink(node.mode)) {\n          node.node_ops = MEMFS.ops_table.link.node;\n          node.stream_ops = MEMFS.ops_table.link.stream;\n        } else if (FS.isChrdev(node.mode)) {\n          node.node_ops = MEMFS.ops_table.chrdev.node;\n          node.stream_ops = MEMFS.ops_table.chrdev.stream;\n        }\n        node.timestamp = Date.now();\n\n        if (parent) {\n          parent.contents[name] = node;\n          parent.timestamp = node.timestamp;\n        }\n        return node;\n      },\n      getFileDataAsTypedArray: function (node) {\n        if (!node.contents) return new Uint8Array(0);\n        if (node.contents.subarray)\n          return node.contents.subarray(0, node.usedBytes);\n        return new Uint8Array(node.contents);\n      },\n      expandFileStorage: function (node, newCapacity) {\n        var prevCapacity = node.contents ? node.contents.length : 0;\n        if (prevCapacity >= newCapacity) return;\n\n        var CAPACITY_DOUBLING_MAX = 1024 * 1024;\n        newCapacity = Math.max(\n          newCapacity,\n          (prevCapacity *\n            (prevCapacity < CAPACITY_DOUBLING_MAX ? 2.0 : 1.125)) >>>\n            0,\n        );\n        if (prevCapacity != 0) newCapacity = Math.max(newCapacity, 256);\n        var oldContents = node.contents;\n        node.contents = new Uint8Array(newCapacity);\n        if (node.usedBytes > 0)\n          node.contents.set(oldContents.subarray(0, node.usedBytes), 0);\n      },\n      resizeFileStorage: function (node, newSize) {\n        if (node.usedBytes == newSize) return;\n        if (newSize == 0) {\n          node.contents = null;\n          node.usedBytes = 0;\n        } else {\n          var oldContents = node.contents;\n          node.contents = new Uint8Array(newSize);\n          if (oldContents) {\n            node.contents.set(\n              oldContents.subarray(0, Math.min(newSize, node.usedBytes)),\n            );\n          }\n          node.usedBytes = newSize;\n        }\n      },\n      node_ops: {\n        getattr: function (node) {\n          var attr = {};\n\n          attr.dev = FS.isChrdev(node.mode) ? node.id : 1;\n          attr.ino = node.id;\n          attr.mode = node.mode;\n          attr.nlink = 1;\n          attr.uid = 0;\n          attr.gid = 0;\n          attr.rdev = node.rdev;\n          if (FS.isDir(node.mode)) {\n            attr.size = 4096;\n          } else if (FS.isFile(node.mode)) {\n            attr.size = node.usedBytes;\n          } else if (FS.isLink(node.mode)) {\n            attr.size = node.link.length;\n          } else {\n            attr.size = 0;\n          }\n          attr.atime = new Date(node.timestamp);\n          attr.mtime = new Date(node.timestamp);\n          attr.ctime = new Date(node.timestamp);\n\n          attr.blksize = 4096;\n          attr.blocks = Math.ceil(attr.size / attr.blksize);\n          return attr;\n        },\n        setattr: function (node, attr) {\n          if (attr.mode !== undefined) {\n            node.mode = attr.mode;\n          }\n          if (attr.timestamp !== undefined) {\n            node.timestamp = attr.timestamp;\n          }\n          if (attr.size !== undefined) {\n            MEMFS.resizeFileStorage(node, attr.size);\n          }\n        },\n        lookup: function (parent, name) {\n          throw FS.genericErrors[44];\n        },\n        mknod: function (parent, name, mode, dev) {\n          return MEMFS.createNode(parent, name, mode, dev);\n        },\n        rename: function (old_node, new_dir, new_name) {\n          if (FS.isDir(old_node.mode)) {\n            var new_node;\n            try {\n              new_node = FS.lookupNode(new_dir, new_name);\n            } catch (e) {}\n            if (new_node) {\n              for (var i in new_node.contents) {\n                throw new FS.ErrnoError(55);\n              }\n            }\n          }\n\n          delete old_node.parent.contents[old_node.name];\n          old_node.parent.timestamp = Date.now();\n          old_node.name = new_name;\n          new_dir.contents[new_name] = old_node;\n          new_dir.timestamp = old_node.parent.timestamp;\n          old_node.parent = new_dir;\n        },\n        unlink: function (parent, name) {\n          delete parent.contents[name];\n          parent.timestamp = Date.now();\n        },\n        rmdir: function (parent, name) {\n          var node = FS.lookupNode(parent, name);\n          for (var i in node.contents) {\n            throw new FS.ErrnoError(55);\n          }\n          delete parent.contents[name];\n          parent.timestamp = Date.now();\n        },\n        readdir: function (node) {\n          var entries = ['.', '..'];\n          for (var key in node.contents) {\n            if (!node.contents.hasOwnProperty(key)) {\n              continue;\n            }\n            entries.push(key);\n          }\n          return entries;\n        },\n        symlink: function (parent, newname, oldpath) {\n          var node = MEMFS.createNode(parent, newname, 511 | 40960, 0);\n          node.link = oldpath;\n          return node;\n        },\n        readlink: function (node) {\n          if (!FS.isLink(node.mode)) {\n            throw new FS.ErrnoError(28);\n          }\n          return node.link;\n        },\n      },\n      stream_ops: {\n        read: function (stream, buffer, offset, length, position) {\n          var contents = stream.node.contents;\n          if (position >= stream.node.usedBytes) return 0;\n          var size = Math.min(stream.node.usedBytes - position, length);\n          if (size > 8 && contents.subarray) {\n            buffer.set(contents.subarray(position, position + size), offset);\n          } else {\n            for (var i = 0; i < size; i++)\n              buffer[offset + i] = contents[position + i];\n          }\n          return size;\n        },\n        write: function (stream, buffer, offset, length, position, canOwn) {\n          if (buffer.buffer === HEAP8.buffer) {\n            canOwn = false;\n          }\n\n          if (!length) return 0;\n          var node = stream.node;\n          node.timestamp = Date.now();\n\n          if (buffer.subarray && (!node.contents || node.contents.subarray)) {\n            if (canOwn) {\n              node.contents = buffer.subarray(offset, offset + length);\n              node.usedBytes = length;\n              return length;\n            } else if (node.usedBytes === 0 && position === 0) {\n              node.contents = buffer.slice(offset, offset + length);\n              node.usedBytes = length;\n              return length;\n            } else if (position + length <= node.usedBytes) {\n              node.contents.set(\n                buffer.subarray(offset, offset + length),\n                position,\n              );\n              return length;\n            }\n          }\n\n          MEMFS.expandFileStorage(node, position + length);\n          if (node.contents.subarray && buffer.subarray) {\n            node.contents.set(\n              buffer.subarray(offset, offset + length),\n              position,\n            );\n          } else {\n            for (var i = 0; i < length; i++) {\n              node.contents[position + i] = buffer[offset + i];\n            }\n          }\n          node.usedBytes = Math.max(node.usedBytes, position + length);\n          return length;\n        },\n        llseek: function (stream, offset, whence) {\n          var position = offset;\n          if (whence === 1) {\n            position += stream.position;\n          } else if (whence === 2) {\n            if (FS.isFile(stream.node.mode)) {\n              position += stream.node.usedBytes;\n            }\n          }\n          if (position < 0) {\n            throw new FS.ErrnoError(28);\n          }\n          return position;\n        },\n        allocate: function (stream, offset, length) {\n          MEMFS.expandFileStorage(stream.node, offset + length);\n          stream.node.usedBytes = Math.max(\n            stream.node.usedBytes,\n            offset + length,\n          );\n        },\n        mmap: function (stream, length, position, prot, flags) {\n          if (!FS.isFile(stream.node.mode)) {\n            throw new FS.ErrnoError(43);\n          }\n          var ptr;\n          var allocated;\n          var contents = stream.node.contents;\n\n          if (!(flags & 2) && contents.buffer === HEAP8.buffer) {\n            allocated = false;\n            ptr = contents.byteOffset;\n          } else {\n            if (position > 0 || position + length < contents.length) {\n              if (contents.subarray) {\n                contents = contents.subarray(position, position + length);\n              } else {\n                contents = Array.prototype.slice.call(\n                  contents,\n                  position,\n                  position + length,\n                );\n              }\n            }\n            allocated = true;\n            ptr = mmapAlloc(length);\n            if (!ptr) {\n              throw new FS.ErrnoError(48);\n            }\n            HEAP8.set(contents, ptr);\n          }\n          return { ptr: ptr, allocated: allocated };\n        },\n        msync: function (stream, buffer, offset, length, mmapFlags) {\n          MEMFS.stream_ops.write(stream, buffer, 0, length, offset, false);\n\n          return 0;\n        },\n      },\n    };\n\n    function asyncLoad(url, onload, onerror, noRunDep) {\n      var dep = !noRunDep ? getUniqueRunDependency('al ' + url) : '';\n      readAsync(\n        url,\n        (arrayBuffer) => {\n          assert(\n            arrayBuffer,\n            'Loading data file \"' + url + '\" failed (no arrayBuffer).',\n          );\n          onload(new Uint8Array(arrayBuffer));\n          if (dep) removeRunDependency(dep);\n        },\n        (event) => {\n          if (onerror) {\n            onerror();\n          } else {\n            throw 'Loading data file \"' + url + '\" failed.';\n          }\n        },\n      );\n      if (dep) addRunDependency(dep);\n    }\n\n    var FS = {\n      root: null,\n      mounts: [],\n      devices: {},\n      streams: [],\n      nextInode: 1,\n      nameTable: null,\n      currentPath: '/',\n      initialized: false,\n      ignorePermissions: true,\n      ErrnoError: null,\n      genericErrors: {},\n      filesystems: null,\n      syncFSRequests: 0,\n      lookupPath: (path, opts = {}) => {\n        path = PATH_FS.resolve(path);\n\n        if (!path) return { path: '', node: null };\n\n        var defaults = {\n          follow_mount: true,\n          recurse_count: 0,\n        };\n        opts = Object.assign(defaults, opts);\n\n        if (opts.recurse_count > 8) {\n          throw new FS.ErrnoError(32);\n        }\n\n        var parts = path.split('/').filter((p) => !!p);\n\n        var current = FS.root;\n        var current_path = '/';\n\n        for (var i = 0; i < parts.length; i++) {\n          var islast = i === parts.length - 1;\n          if (islast && opts.parent) {\n            break;\n          }\n\n          current = FS.lookupNode(current, parts[i]);\n          current_path = PATH.join2(current_path, parts[i]);\n\n          if (FS.isMountpoint(current)) {\n            if (!islast || (islast && opts.follow_mount)) {\n              current = current.mounted.root;\n            }\n          }\n\n          if (!islast || opts.follow) {\n            var count = 0;\n            while (FS.isLink(current.mode)) {\n              var link = FS.readlink(current_path);\n              current_path = PATH_FS.resolve(PATH.dirname(current_path), link);\n\n              var lookup = FS.lookupPath(current_path, {\n                recurse_count: opts.recurse_count + 1,\n              });\n              current = lookup.node;\n\n              if (count++ > 40) {\n                throw new FS.ErrnoError(32);\n              }\n            }\n          }\n        }\n\n        return { path: current_path, node: current };\n      },\n      getPath: (node) => {\n        var path;\n        while (true) {\n          if (FS.isRoot(node)) {\n            var mount = node.mount.mountpoint;\n            if (!path) return mount;\n            return mount[mount.length - 1] !== '/'\n              ? mount + '/' + path\n              : mount + path;\n          }\n          path = path ? node.name + '/' + path : node.name;\n          node = node.parent;\n        }\n      },\n      hashName: (parentid, name) => {\n        var hash = 0;\n\n        for (var i = 0; i < name.length; i++) {\n          hash = ((hash << 5) - hash + name.charCodeAt(i)) | 0;\n        }\n        return ((parentid + hash) >>> 0) % FS.nameTable.length;\n      },\n      hashAddNode: (node) => {\n        var hash = FS.hashName(node.parent.id, node.name);\n        node.name_next = FS.nameTable[hash];\n        FS.nameTable[hash] = node;\n      },\n      hashRemoveNode: (node) => {\n        var hash = FS.hashName(node.parent.id, node.name);\n        if (FS.nameTable[hash] === node) {\n          FS.nameTable[hash] = node.name_next;\n        } else {\n          var current = FS.nameTable[hash];\n          while (current) {\n            if (current.name_next === node) {\n              current.name_next = node.name_next;\n              break;\n            }\n            current = current.name_next;\n          }\n        }\n      },\n      lookupNode: (parent, name) => {\n        var errCode = FS.mayLookup(parent);\n        if (errCode) {\n          throw new FS.ErrnoError(errCode, parent);\n        }\n        var hash = FS.hashName(parent.id, name);\n        for (var node = FS.nameTable[hash]; node; node = node.name_next) {\n          var nodeName = node.name;\n          if (node.parent.id === parent.id && nodeName === name) {\n            return node;\n          }\n        }\n\n        return FS.lookup(parent, name);\n      },\n      createNode: (parent, name, mode, rdev) => {\n        var node = new FS.FSNode(parent, name, mode, rdev);\n\n        FS.hashAddNode(node);\n\n        return node;\n      },\n      destroyNode: (node) => {\n        FS.hashRemoveNode(node);\n      },\n      isRoot: (node) => {\n        return node === node.parent;\n      },\n      isMountpoint: (node) => {\n        return !!node.mounted;\n      },\n      isFile: (mode) => {\n        return (mode & 61440) === 32768;\n      },\n      isDir: (mode) => {\n        return (mode & 61440) === 16384;\n      },\n      isLink: (mode) => {\n        return (mode & 61440) === 40960;\n      },\n      isChrdev: (mode) => {\n        return (mode & 61440) === 8192;\n      },\n      isBlkdev: (mode) => {\n        return (mode & 61440) === 24576;\n      },\n      isFIFO: (mode) => {\n        return (mode & 61440) === 4096;\n      },\n      isSocket: (mode) => {\n        return (mode & 49152) === 49152;\n      },\n      flagModes: { r: 0, 'r+': 2, w: 577, 'w+': 578, a: 1089, 'a+': 1090 },\n      modeStringToFlags: (str) => {\n        var flags = FS.flagModes[str];\n        if (typeof flags == 'undefined') {\n          throw new Error('Unknown file open mode: ' + str);\n        }\n        return flags;\n      },\n      flagsToPermissionString: (flag) => {\n        var perms = ['r', 'w', 'rw'][flag & 3];\n        if (flag & 512) {\n          perms += 'w';\n        }\n        return perms;\n      },\n      nodePermissions: (node, perms) => {\n        if (FS.ignorePermissions) {\n          return 0;\n        }\n\n        if (perms.includes('r') && !(node.mode & 292)) {\n          return 2;\n        } else if (perms.includes('w') && !(node.mode & 146)) {\n          return 2;\n        } else if (perms.includes('x') && !(node.mode & 73)) {\n          return 2;\n        }\n        return 0;\n      },\n      mayLookup: (dir) => {\n        var errCode = FS.nodePermissions(dir, 'x');\n        if (errCode) return errCode;\n        if (!dir.node_ops.lookup) return 2;\n        return 0;\n      },\n      mayCreate: (dir, name) => {\n        try {\n          var node = FS.lookupNode(dir, name);\n          return 20;\n        } catch (e) {}\n        return FS.nodePermissions(dir, 'wx');\n      },\n      mayDelete: (dir, name, isdir) => {\n        var node;\n        try {\n          node = FS.lookupNode(dir, name);\n        } catch (e) {\n          return e.errno;\n        }\n        var errCode = FS.nodePermissions(dir, 'wx');\n        if (errCode) {\n          return errCode;\n        }\n        if (isdir) {\n          if (!FS.isDir(node.mode)) {\n            return 54;\n          }\n          if (FS.isRoot(node) || FS.getPath(node) === FS.cwd()) {\n            return 10;\n          }\n        } else {\n          if (FS.isDir(node.mode)) {\n            return 31;\n          }\n        }\n        return 0;\n      },\n      mayOpen: (node, flags) => {\n        if (!node) {\n          return 44;\n        }\n        if (FS.isLink(node.mode)) {\n          return 32;\n        } else if (FS.isDir(node.mode)) {\n          if (FS.flagsToPermissionString(flags) !== 'r' || flags & 512) {\n            return 31;\n          }\n        }\n        return FS.nodePermissions(node, FS.flagsToPermissionString(flags));\n      },\n      MAX_OPEN_FDS: 4096,\n      nextfd: (fd_start = 0, fd_end = FS.MAX_OPEN_FDS) => {\n        for (var fd = fd_start; fd <= fd_end; fd++) {\n          if (!FS.streams[fd]) {\n            return fd;\n          }\n        }\n        throw new FS.ErrnoError(33);\n      },\n      getStream: (fd) => FS.streams[fd],\n      createStream: (stream, fd_start, fd_end) => {\n        if (!FS.FSStream) {\n          FS.FSStream = function () {\n            this.shared = {};\n          };\n          FS.FSStream.prototype = {};\n          Object.defineProperties(FS.FSStream.prototype, {\n            object: {\n              get: function () {\n                return this.node;\n              },\n\n              set: function (val) {\n                this.node = val;\n              },\n            },\n            isRead: {\n              get: function () {\n                return (this.flags & 2097155) !== 1;\n              },\n            },\n            isWrite: {\n              get: function () {\n                return (this.flags & 2097155) !== 0;\n              },\n            },\n            isAppend: {\n              get: function () {\n                return this.flags & 1024;\n              },\n            },\n            flags: {\n              get: function () {\n                return this.shared.flags;\n              },\n\n              set: function (val) {\n                this.shared.flags = val;\n              },\n            },\n            position: {\n              get: function () {\n                return this.shared.position;\n              },\n\n              set: function (val) {\n                this.shared.position = val;\n              },\n            },\n          });\n        }\n\n        stream = Object.assign(new FS.FSStream(), stream);\n        var fd = FS.nextfd(fd_start, fd_end);\n        stream.fd = fd;\n        FS.streams[fd] = stream;\n        return stream;\n      },\n      closeStream: (fd) => {\n        FS.streams[fd] = null;\n      },\n      chrdev_stream_ops: {\n        open: (stream) => {\n          var device = FS.getDevice(stream.node.rdev);\n\n          stream.stream_ops = device.stream_ops;\n\n          if (stream.stream_ops.open) {\n            stream.stream_ops.open(stream);\n          }\n        },\n        llseek: () => {\n          throw new FS.ErrnoError(70);\n        },\n      },\n      major: (dev) => dev >> 8,\n      minor: (dev) => dev & 0xff,\n      makedev: (ma, mi) => (ma << 8) | mi,\n      registerDevice: (dev, ops) => {\n        FS.devices[dev] = { stream_ops: ops };\n      },\n      getDevice: (dev) => FS.devices[dev],\n      getMounts: (mount) => {\n        var mounts = [];\n        var check = [mount];\n\n        while (check.length) {\n          var m = check.pop();\n\n          mounts.push(m);\n\n          check.push.apply(check, m.mounts);\n        }\n\n        return mounts;\n      },\n      syncfs: (populate, callback) => {\n        if (typeof populate == 'function') {\n          callback = populate;\n          populate = false;\n        }\n\n        FS.syncFSRequests++;\n\n        if (FS.syncFSRequests > 1) {\n          err(\n            'warning: ' +\n              FS.syncFSRequests +\n              ' FS.syncfs operations in flight at once, probably just doing extra work',\n          );\n        }\n\n        var mounts = FS.getMounts(FS.root.mount);\n        var completed = 0;\n\n        function doCallback(errCode) {\n          FS.syncFSRequests--;\n          return callback(errCode);\n        }\n\n        function done(errCode) {\n          if (errCode) {\n            if (!done.errored) {\n              done.errored = true;\n              return doCallback(errCode);\n            }\n            return;\n          }\n          if (++completed >= mounts.length) {\n            doCallback(null);\n          }\n        }\n\n        mounts.forEach((mount) => {\n          if (!mount.type.syncfs) {\n            return done(null);\n          }\n          mount.type.syncfs(mount, populate, done);\n        });\n      },\n      mount: (type, opts, mountpoint) => {\n        var root = mountpoint === '/';\n        var pseudo = !mountpoint;\n        var node;\n\n        if (root && FS.root) {\n          throw new FS.ErrnoError(10);\n        } else if (!root && !pseudo) {\n          var lookup = FS.lookupPath(mountpoint, { follow_mount: false });\n\n          mountpoint = lookup.path;\n          node = lookup.node;\n\n          if (FS.isMountpoint(node)) {\n            throw new FS.ErrnoError(10);\n          }\n\n          if (!FS.isDir(node.mode)) {\n            throw new FS.ErrnoError(54);\n          }\n        }\n\n        var mount = {\n          type: type,\n          opts: opts,\n          mountpoint: mountpoint,\n          mounts: [],\n        };\n\n        var mountRoot = type.mount(mount);\n        mountRoot.mount = mount;\n        mount.root = mountRoot;\n\n        if (root) {\n          FS.root = mountRoot;\n        } else if (node) {\n          node.mounted = mount;\n\n          if (node.mount) {\n            node.mount.mounts.push(mount);\n          }\n        }\n\n        return mountRoot;\n      },\n      unmount: (mountpoint) => {\n        var lookup = FS.lookupPath(mountpoint, { follow_mount: false });\n\n        if (!FS.isMountpoint(lookup.node)) {\n          throw new FS.ErrnoError(28);\n        }\n\n        var node = lookup.node;\n        var mount = node.mounted;\n        var mounts = FS.getMounts(mount);\n\n        Object.keys(FS.nameTable).forEach((hash) => {\n          var current = FS.nameTable[hash];\n\n          while (current) {\n            var next = current.name_next;\n\n            if (mounts.includes(current.mount)) {\n              FS.destroyNode(current);\n            }\n\n            current = next;\n          }\n        });\n\n        node.mounted = null;\n\n        var idx = node.mount.mounts.indexOf(mount);\n        node.mount.mounts.splice(idx, 1);\n      },\n      lookup: (parent, name) => {\n        return parent.node_ops.lookup(parent, name);\n      },\n      mknod: (path, mode, dev) => {\n        var lookup = FS.lookupPath(path, { parent: true });\n        var parent = lookup.node;\n        var name = PATH.basename(path);\n        if (!name || name === '.' || name === '..') {\n          throw new FS.ErrnoError(28);\n        }\n        var errCode = FS.mayCreate(parent, name);\n        if (errCode) {\n          throw new FS.ErrnoError(errCode);\n        }\n        if (!parent.node_ops.mknod) {\n          throw new FS.ErrnoError(63);\n        }\n        return parent.node_ops.mknod(parent, name, mode, dev);\n      },\n      create: (path, mode) => {\n        mode = mode !== undefined ? mode : 438;\n        mode &= 4095;\n        mode |= 32768;\n        return FS.mknod(path, mode, 0);\n      },\n      mkdir: (path, mode) => {\n        mode = mode !== undefined ? mode : 511;\n        mode &= 511 | 512;\n        mode |= 16384;\n        return FS.mknod(path, mode, 0);\n      },\n      mkdirTree: (path, mode) => {\n        var dirs = path.split('/');\n        var d = '';\n        for (var i = 0; i < dirs.length; ++i) {\n          if (!dirs[i]) continue;\n          d += '/' + dirs[i];\n          try {\n            FS.mkdir(d, mode);\n          } catch (e) {\n            if (e.errno != 20) throw e;\n          }\n        }\n      },\n      mkdev: (path, mode, dev) => {\n        if (typeof dev == 'undefined') {\n          dev = mode;\n          mode = 438;\n        }\n        mode |= 8192;\n        return FS.mknod(path, mode, dev);\n      },\n      symlink: (oldpath, newpath) => {\n        if (!PATH_FS.resolve(oldpath)) {\n          throw new FS.ErrnoError(44);\n        }\n        var lookup = FS.lookupPath(newpath, { parent: true });\n        var parent = lookup.node;\n        if (!parent) {\n          throw new FS.ErrnoError(44);\n        }\n        var newname = PATH.basename(newpath);\n        var errCode = FS.mayCreate(parent, newname);\n        if (errCode) {\n          throw new FS.ErrnoError(errCode);\n        }\n        if (!parent.node_ops.symlink) {\n          throw new FS.ErrnoError(63);\n        }\n        return parent.node_ops.symlink(parent, newname, oldpath);\n      },\n      rename: (old_path, new_path) => {\n        var old_dirname = PATH.dirname(old_path);\n        var new_dirname = PATH.dirname(new_path);\n        var old_name = PATH.basename(old_path);\n        var new_name = PATH.basename(new_path);\n\n        var lookup, old_dir, new_dir;\n\n        lookup = FS.lookupPath(old_path, { parent: true });\n        old_dir = lookup.node;\n        lookup = FS.lookupPath(new_path, { parent: true });\n        new_dir = lookup.node;\n\n        if (!old_dir || !new_dir) throw new FS.ErrnoError(44);\n\n        if (old_dir.mount !== new_dir.mount) {\n          throw new FS.ErrnoError(75);\n        }\n\n        var old_node = FS.lookupNode(old_dir, old_name);\n\n        var relative = PATH_FS.relative(old_path, new_dirname);\n        if (relative.charAt(0) !== '.') {\n          throw new FS.ErrnoError(28);\n        }\n\n        relative = PATH_FS.relative(new_path, old_dirname);\n        if (relative.charAt(0) !== '.') {\n          throw new FS.ErrnoError(55);\n        }\n\n        var new_node;\n        try {\n          new_node = FS.lookupNode(new_dir, new_name);\n        } catch (e) {}\n\n        if (old_node === new_node) {\n          return;\n        }\n\n        var isdir = FS.isDir(old_node.mode);\n        var errCode = FS.mayDelete(old_dir, old_name, isdir);\n        if (errCode) {\n          throw new FS.ErrnoError(errCode);\n        }\n\n        errCode = new_node\n          ? FS.mayDelete(new_dir, new_name, isdir)\n          : FS.mayCreate(new_dir, new_name);\n        if (errCode) {\n          throw new FS.ErrnoError(errCode);\n        }\n        if (!old_dir.node_ops.rename) {\n          throw new FS.ErrnoError(63);\n        }\n        if (\n          FS.isMountpoint(old_node) ||\n          (new_node && FS.isMountpoint(new_node))\n        ) {\n          throw new FS.ErrnoError(10);\n        }\n\n        if (new_dir !== old_dir) {\n          errCode = FS.nodePermissions(old_dir, 'w');\n          if (errCode) {\n            throw new FS.ErrnoError(errCode);\n          }\n        }\n\n        FS.hashRemoveNode(old_node);\n\n        try {\n          old_dir.node_ops.rename(old_node, new_dir, new_name);\n        } catch (e) {\n          throw e;\n        } finally {\n          FS.hashAddNode(old_node);\n        }\n      },\n      rmdir: (path) => {\n        var lookup = FS.lookupPath(path, { parent: true });\n        var parent = lookup.node;\n        var name = PATH.basename(path);\n        var node = FS.lookupNode(parent, name);\n        var errCode = FS.mayDelete(parent, name, true);\n        if (errCode) {\n          throw new FS.ErrnoError(errCode);\n        }\n        if (!parent.node_ops.rmdir) {\n          throw new FS.ErrnoError(63);\n        }\n        if (FS.isMountpoint(node)) {\n          throw new FS.ErrnoError(10);\n        }\n        parent.node_ops.rmdir(parent, name);\n        FS.destroyNode(node);\n      },\n      readdir: (path) => {\n        var lookup = FS.lookupPath(path, { follow: true });\n        var node = lookup.node;\n        if (!node.node_ops.readdir) {\n          throw new FS.ErrnoError(54);\n        }\n        return node.node_ops.readdir(node);\n      },\n      unlink: (path) => {\n        var lookup = FS.lookupPath(path, { parent: true });\n        var parent = lookup.node;\n        if (!parent) {\n          throw new FS.ErrnoError(44);\n        }\n        var name = PATH.basename(path);\n        var node = FS.lookupNode(parent, name);\n        var errCode = FS.mayDelete(parent, name, false);\n        if (errCode) {\n          throw new FS.ErrnoError(errCode);\n        }\n        if (!parent.node_ops.unlink) {\n          throw new FS.ErrnoError(63);\n        }\n        if (FS.isMountpoint(node)) {\n          throw new FS.ErrnoError(10);\n        }\n        parent.node_ops.unlink(parent, name);\n        FS.destroyNode(node);\n      },\n      readlink: (path) => {\n        var lookup = FS.lookupPath(path);\n        var link = lookup.node;\n        if (!link) {\n          throw new FS.ErrnoError(44);\n        }\n        if (!link.node_ops.readlink) {\n          throw new FS.ErrnoError(28);\n        }\n        return PATH_FS.resolve(\n          FS.getPath(link.parent),\n          link.node_ops.readlink(link),\n        );\n      },\n      stat: (path, dontFollow) => {\n        var lookup = FS.lookupPath(path, { follow: !dontFollow });\n        var node = lookup.node;\n        if (!node) {\n          throw new FS.ErrnoError(44);\n        }\n        if (!node.node_ops.getattr) {\n          throw new FS.ErrnoError(63);\n        }\n        return node.node_ops.getattr(node);\n      },\n      lstat: (path) => {\n        return FS.stat(path, true);\n      },\n      chmod: (path, mode, dontFollow) => {\n        var node;\n        if (typeof path == 'string') {\n          var lookup = FS.lookupPath(path, { follow: !dontFollow });\n          node = lookup.node;\n        } else {\n          node = path;\n        }\n        if (!node.node_ops.setattr) {\n          throw new FS.ErrnoError(63);\n        }\n        node.node_ops.setattr(node, {\n          mode: (mode & 4095) | (node.mode & ~4095),\n          timestamp: Date.now(),\n        });\n      },\n      lchmod: (path, mode) => {\n        FS.chmod(path, mode, true);\n      },\n      fchmod: (fd, mode) => {\n        var stream = FS.getStream(fd);\n        if (!stream) {\n          throw new FS.ErrnoError(8);\n        }\n        FS.chmod(stream.node, mode);\n      },\n      chown: (path, uid, gid, dontFollow) => {\n        var node;\n        if (typeof path == 'string') {\n          var lookup = FS.lookupPath(path, { follow: !dontFollow });\n          node = lookup.node;\n        } else {\n          node = path;\n        }\n        if (!node.node_ops.setattr) {\n          throw new FS.ErrnoError(63);\n        }\n        node.node_ops.setattr(node, {\n          timestamp: Date.now(),\n        });\n      },\n      lchown: (path, uid, gid) => {\n        FS.chown(path, uid, gid, true);\n      },\n      fchown: (fd, uid, gid) => {\n        var stream = FS.getStream(fd);\n        if (!stream) {\n          throw new FS.ErrnoError(8);\n        }\n        FS.chown(stream.node, uid, gid);\n      },\n      truncate: (path, len) => {\n        if (len < 0) {\n          throw new FS.ErrnoError(28);\n        }\n        var node;\n        if (typeof path == 'string') {\n          var lookup = FS.lookupPath(path, { follow: true });\n          node = lookup.node;\n        } else {\n          node = path;\n        }\n        if (!node.node_ops.setattr) {\n          throw new FS.ErrnoError(63);\n        }\n        if (FS.isDir(node.mode)) {\n          throw new FS.ErrnoError(31);\n        }\n        if (!FS.isFile(node.mode)) {\n          throw new FS.ErrnoError(28);\n        }\n        var errCode = FS.nodePermissions(node, 'w');\n        if (errCode) {\n          throw new FS.ErrnoError(errCode);\n        }\n        node.node_ops.setattr(node, {\n          size: len,\n          timestamp: Date.now(),\n        });\n      },\n      ftruncate: (fd, len) => {\n        var stream = FS.getStream(fd);\n        if (!stream) {\n          throw new FS.ErrnoError(8);\n        }\n        if ((stream.flags & 2097155) === 0) {\n          throw new FS.ErrnoError(28);\n        }\n        FS.truncate(stream.node, len);\n      },\n      utime: (path, atime, mtime) => {\n        var lookup = FS.lookupPath(path, { follow: true });\n        var node = lookup.node;\n        node.node_ops.setattr(node, {\n          timestamp: Math.max(atime, mtime),\n        });\n      },\n      open: (path, flags, mode) => {\n        if (path === '') {\n          throw new FS.ErrnoError(44);\n        }\n        flags = typeof flags == 'string' ? FS.modeStringToFlags(flags) : flags;\n        mode = typeof mode == 'undefined' ? 438 : mode;\n        if (flags & 64) {\n          mode = (mode & 4095) | 32768;\n        } else {\n          mode = 0;\n        }\n        var node;\n        if (typeof path == 'object') {\n          node = path;\n        } else {\n          path = PATH.normalize(path);\n          try {\n            var lookup = FS.lookupPath(path, {\n              follow: !(flags & 131072),\n            });\n            node = lookup.node;\n          } catch (e) {}\n        }\n\n        var created = false;\n        if (flags & 64) {\n          if (node) {\n            if (flags & 128) {\n              throw new FS.ErrnoError(20);\n            }\n          } else {\n            node = FS.mknod(path, mode, 0);\n            created = true;\n          }\n        }\n        if (!node) {\n          throw new FS.ErrnoError(44);\n        }\n\n        if (FS.isChrdev(node.mode)) {\n          flags &= ~512;\n        }\n\n        if (flags & 65536 && !FS.isDir(node.mode)) {\n          throw new FS.ErrnoError(54);\n        }\n\n        if (!created) {\n          var errCode = FS.mayOpen(node, flags);\n          if (errCode) {\n            throw new FS.ErrnoError(errCode);\n          }\n        }\n\n        if (flags & 512 && !created) {\n          FS.truncate(node, 0);\n        }\n\n        flags &= ~(128 | 512 | 131072);\n\n        var stream = FS.createStream({\n          node: node,\n          path: FS.getPath(node),\n          flags: flags,\n          seekable: true,\n          position: 0,\n          stream_ops: node.stream_ops,\n\n          ungotten: [],\n          error: false,\n        });\n\n        if (stream.stream_ops.open) {\n          stream.stream_ops.open(stream);\n        }\n        if (Module['logReadFiles'] && !(flags & 1)) {\n          if (!FS.readFiles) FS.readFiles = {};\n          if (!(path in FS.readFiles)) {\n            FS.readFiles[path] = 1;\n          }\n        }\n        return stream;\n      },\n      close: (stream) => {\n        if (FS.isClosed(stream)) {\n          throw new FS.ErrnoError(8);\n        }\n        if (stream.getdents) stream.getdents = null;\n        try {\n          if (stream.stream_ops.close) {\n            stream.stream_ops.close(stream);\n          }\n        } catch (e) {\n          throw e;\n        } finally {\n          FS.closeStream(stream.fd);\n        }\n        stream.fd = null;\n      },\n      isClosed: (stream) => {\n        return stream.fd === null;\n      },\n      llseek: (stream, offset, whence) => {\n        if (FS.isClosed(stream)) {\n          throw new FS.ErrnoError(8);\n        }\n        if (!stream.seekable || !stream.stream_ops.llseek) {\n          throw new FS.ErrnoError(70);\n        }\n        if (whence != 0 && whence != 1 && whence != 2) {\n          throw new FS.ErrnoError(28);\n        }\n        stream.position = stream.stream_ops.llseek(stream, offset, whence);\n        stream.ungotten = [];\n        return stream.position;\n      },\n      read: (stream, buffer, offset, length, position) => {\n        if (length < 0 || position < 0) {\n          throw new FS.ErrnoError(28);\n        }\n        if (FS.isClosed(stream)) {\n          throw new FS.ErrnoError(8);\n        }\n        if ((stream.flags & 2097155) === 1) {\n          throw new FS.ErrnoError(8);\n        }\n        if (FS.isDir(stream.node.mode)) {\n          throw new FS.ErrnoError(31);\n        }\n        if (!stream.stream_ops.read) {\n          throw new FS.ErrnoError(28);\n        }\n        var seeking = typeof position != 'undefined';\n        if (!seeking) {\n          position = stream.position;\n        } else if (!stream.seekable) {\n          throw new FS.ErrnoError(70);\n        }\n        var bytesRead = stream.stream_ops.read(\n          stream,\n          buffer,\n          offset,\n          length,\n          position,\n        );\n        if (!seeking) stream.position += bytesRead;\n        return bytesRead;\n      },\n      write: (stream, buffer, offset, length, position, canOwn) => {\n        if (length < 0 || position < 0) {\n          throw new FS.ErrnoError(28);\n        }\n        if (FS.isClosed(stream)) {\n          throw new FS.ErrnoError(8);\n        }\n        if ((stream.flags & 2097155) === 0) {\n          throw new FS.ErrnoError(8);\n        }\n        if (FS.isDir(stream.node.mode)) {\n          throw new FS.ErrnoError(31);\n        }\n        if (!stream.stream_ops.write) {\n          throw new FS.ErrnoError(28);\n        }\n        if (stream.seekable && stream.flags & 1024) {\n          FS.llseek(stream, 0, 2);\n        }\n        var seeking = typeof position != 'undefined';\n        if (!seeking) {\n          position = stream.position;\n        } else if (!stream.seekable) {\n          throw new FS.ErrnoError(70);\n        }\n        var bytesWritten = stream.stream_ops.write(\n          stream,\n          buffer,\n          offset,\n          length,\n          position,\n          canOwn,\n        );\n        if (!seeking) stream.position += bytesWritten;\n        return bytesWritten;\n      },\n      allocate: (stream, offset, length) => {\n        if (FS.isClosed(stream)) {\n          throw new FS.ErrnoError(8);\n        }\n        if (offset < 0 || length <= 0) {\n          throw new FS.ErrnoError(28);\n        }\n        if ((stream.flags & 2097155) === 0) {\n          throw new FS.ErrnoError(8);\n        }\n        if (!FS.isFile(stream.node.mode) && !FS.isDir(stream.node.mode)) {\n          throw new FS.ErrnoError(43);\n        }\n        if (!stream.stream_ops.allocate) {\n          throw new FS.ErrnoError(138);\n        }\n        stream.stream_ops.allocate(stream, offset, length);\n      },\n      mmap: (stream, length, position, prot, flags) => {\n        if (\n          (prot & 2) !== 0 &&\n          (flags & 2) === 0 &&\n          (stream.flags & 2097155) !== 2\n        ) {\n          throw new FS.ErrnoError(2);\n        }\n        if ((stream.flags & 2097155) === 1) {\n          throw new FS.ErrnoError(2);\n        }\n        if (!stream.stream_ops.mmap) {\n          throw new FS.ErrnoError(43);\n        }\n        return stream.stream_ops.mmap(stream, length, position, prot, flags);\n      },\n      msync: (stream, buffer, offset, length, mmapFlags) => {\n        if (!stream.stream_ops.msync) {\n          return 0;\n        }\n        return stream.stream_ops.msync(\n          stream,\n          buffer,\n          offset,\n          length,\n          mmapFlags,\n        );\n      },\n      munmap: (stream) => 0,\n      ioctl: (stream, cmd, arg) => {\n        if (!stream.stream_ops.ioctl) {\n          throw new FS.ErrnoError(59);\n        }\n        return stream.stream_ops.ioctl(stream, cmd, arg);\n      },\n      readFile: (path, opts = {}) => {\n        opts.flags = opts.flags || 0;\n        opts.encoding = opts.encoding || 'binary';\n        if (opts.encoding !== 'utf8' && opts.encoding !== 'binary') {\n          throw new Error('Invalid encoding type \"' + opts.encoding + '\"');\n        }\n        var ret;\n        var stream = FS.open(path, opts.flags);\n        var stat = FS.stat(path);\n        var length = stat.size;\n        var buf = new Uint8Array(length);\n        FS.read(stream, buf, 0, length, 0);\n        if (opts.encoding === 'utf8') {\n          ret = UTF8ArrayToString(buf, 0);\n        } else if (opts.encoding === 'binary') {\n          ret = buf;\n        }\n        FS.close(stream);\n        return ret;\n      },\n      writeFile: (path, data, opts = {}) => {\n        opts.flags = opts.flags || 577;\n        var stream = FS.open(path, opts.flags, opts.mode);\n        if (typeof data == 'string') {\n          var buf = new Uint8Array(lengthBytesUTF8(data) + 1);\n          var actualNumBytes = stringToUTF8Array(data, buf, 0, buf.length);\n          FS.write(stream, buf, 0, actualNumBytes, undefined, opts.canOwn);\n        } else if (ArrayBuffer.isView(data)) {\n          FS.write(stream, data, 0, data.byteLength, undefined, opts.canOwn);\n        } else {\n          throw new Error('Unsupported data type');\n        }\n        FS.close(stream);\n      },\n      cwd: () => FS.currentPath,\n      chdir: (path) => {\n        var lookup = FS.lookupPath(path, { follow: true });\n        if (lookup.node === null) {\n          throw new FS.ErrnoError(44);\n        }\n        if (!FS.isDir(lookup.node.mode)) {\n          throw new FS.ErrnoError(54);\n        }\n        var errCode = FS.nodePermissions(lookup.node, 'x');\n        if (errCode) {\n          throw new FS.ErrnoError(errCode);\n        }\n        FS.currentPath = lookup.path;\n      },\n      createDefaultDirectories: () => {\n        FS.mkdir('/tmp');\n        FS.mkdir('/home');\n        FS.mkdir('/home/web_user');\n      },\n      createDefaultDevices: () => {\n        FS.mkdir('/dev');\n\n        FS.registerDevice(FS.makedev(1, 3), {\n          read: () => 0,\n          write: (stream, buffer, offset, length, pos) => length,\n        });\n        FS.mkdev('/dev/null', FS.makedev(1, 3));\n\n        TTY.register(FS.makedev(5, 0), TTY.default_tty_ops);\n        TTY.register(FS.makedev(6, 0), TTY.default_tty1_ops);\n        FS.mkdev('/dev/tty', FS.makedev(5, 0));\n        FS.mkdev('/dev/tty1', FS.makedev(6, 0));\n\n        var random_device = getRandomDevice();\n        FS.createDevice('/dev', 'random', random_device);\n        FS.createDevice('/dev', 'urandom', random_device);\n\n        FS.mkdir('/dev/shm');\n        FS.mkdir('/dev/shm/tmp');\n      },\n      createSpecialDirectories: () => {\n        FS.mkdir('/proc');\n        var proc_self = FS.mkdir('/proc/self');\n        FS.mkdir('/proc/self/fd');\n        FS.mount(\n          {\n            mount: () => {\n              var node = FS.createNode(proc_self, 'fd', 16384 | 511, 73);\n              node.node_ops = {\n                lookup: (parent, name) => {\n                  var fd = +name;\n                  var stream = FS.getStream(fd);\n                  if (!stream) throw new FS.ErrnoError(8);\n                  var ret = {\n                    parent: null,\n                    mount: { mountpoint: 'fake' },\n                    node_ops: { readlink: () => stream.path },\n                  };\n                  ret.parent = ret;\n                  return ret;\n                },\n              };\n              return node;\n            },\n          },\n          {},\n          '/proc/self/fd',\n        );\n      },\n      createStandardStreams: () => {\n        if (Module['stdin']) {\n          FS.createDevice('/dev', 'stdin', Module['stdin']);\n        } else {\n          FS.symlink('/dev/tty', '/dev/stdin');\n        }\n        if (Module['stdout']) {\n          FS.createDevice('/dev', 'stdout', null, Module['stdout']);\n        } else {\n          FS.symlink('/dev/tty', '/dev/stdout');\n        }\n        if (Module['stderr']) {\n          FS.createDevice('/dev', 'stderr', null, Module['stderr']);\n        } else {\n          FS.symlink('/dev/tty1', '/dev/stderr');\n        }\n\n        var stdin = FS.open('/dev/stdin', 0);\n        var stdout = FS.open('/dev/stdout', 1);\n        var stderr = FS.open('/dev/stderr', 1);\n      },\n      ensureErrnoError: () => {\n        if (FS.ErrnoError) return;\n        FS.ErrnoError = function ErrnoError(errno, node) {\n          this.node = node;\n          this.setErrno = function (errno) {\n            this.errno = errno;\n          };\n          this.setErrno(errno);\n          this.message = 'FS error';\n        };\n        FS.ErrnoError.prototype = new Error();\n        FS.ErrnoError.prototype.constructor = FS.ErrnoError;\n\n        [44].forEach((code) => {\n          FS.genericErrors[code] = new FS.ErrnoError(code);\n          FS.genericErrors[code].stack = '<generic error, no stack>';\n        });\n      },\n      staticInit: () => {\n        FS.ensureErrnoError();\n\n        FS.nameTable = new Array(4096);\n\n        FS.mount(MEMFS, {}, '/');\n\n        FS.createDefaultDirectories();\n        FS.createDefaultDevices();\n        FS.createSpecialDirectories();\n\n        FS.filesystems = {\n          MEMFS: MEMFS,\n        };\n      },\n      init: (input, output, error) => {\n        FS.init.initialized = true;\n\n        FS.ensureErrnoError();\n\n        Module['stdin'] = input || Module['stdin'];\n        Module['stdout'] = output || Module['stdout'];\n        Module['stderr'] = error || Module['stderr'];\n\n        FS.createStandardStreams();\n      },\n      quit: () => {\n        FS.init.initialized = false;\n\n        for (var i = 0; i < FS.streams.length; i++) {\n          var stream = FS.streams[i];\n          if (!stream) {\n            continue;\n          }\n          FS.close(stream);\n        }\n      },\n      getMode: (canRead, canWrite) => {\n        var mode = 0;\n        if (canRead) mode |= 292 | 73;\n        if (canWrite) mode |= 146;\n        return mode;\n      },\n      findObject: (path, dontResolveLastLink) => {\n        var ret = FS.analyzePath(path, dontResolveLastLink);\n        if (!ret.exists) {\n          return null;\n        }\n        return ret.object;\n      },\n      analyzePath: (path, dontResolveLastLink) => {\n        try {\n          var lookup = FS.lookupPath(path, { follow: !dontResolveLastLink });\n          path = lookup.path;\n        } catch (e) {}\n        var ret = {\n          isRoot: false,\n          exists: false,\n          error: 0,\n          name: null,\n          path: null,\n          object: null,\n          parentExists: false,\n          parentPath: null,\n          parentObject: null,\n        };\n        try {\n          var lookup = FS.lookupPath(path, { parent: true });\n          ret.parentExists = true;\n          ret.parentPath = lookup.path;\n          ret.parentObject = lookup.node;\n          ret.name = PATH.basename(path);\n          lookup = FS.lookupPath(path, { follow: !dontResolveLastLink });\n          ret.exists = true;\n          ret.path = lookup.path;\n          ret.object = lookup.node;\n          ret.name = lookup.node.name;\n          ret.isRoot = lookup.path === '/';\n        } catch (e) {\n          ret.error = e.errno;\n        }\n        return ret;\n      },\n      createPath: (parent, path, canRead, canWrite) => {\n        parent = typeof parent == 'string' ? parent : FS.getPath(parent);\n        var parts = path.split('/').reverse();\n        while (parts.length) {\n          var part = parts.pop();\n          if (!part) continue;\n          var current = PATH.join2(parent, part);\n          try {\n            FS.mkdir(current);\n          } catch (e) {}\n          parent = current;\n        }\n        return current;\n      },\n      createFile: (parent, name, properties, canRead, canWrite) => {\n        var path = PATH.join2(\n          typeof parent == 'string' ? parent : FS.getPath(parent),\n          name,\n        );\n        var mode = FS.getMode(canRead, canWrite);\n        return FS.create(path, mode);\n      },\n      createDataFile: (parent, name, data, canRead, canWrite, canOwn) => {\n        var path = name;\n        if (parent) {\n          parent = typeof parent == 'string' ? parent : FS.getPath(parent);\n          path = name ? PATH.join2(parent, name) : parent;\n        }\n        var mode = FS.getMode(canRead, canWrite);\n        var node = FS.create(path, mode);\n        if (data) {\n          if (typeof data == 'string') {\n            var arr = new Array(data.length);\n            for (var i = 0, len = data.length; i < len; ++i)\n              arr[i] = data.charCodeAt(i);\n            data = arr;\n          }\n\n          FS.chmod(node, mode | 146);\n          var stream = FS.open(node, 577);\n          FS.write(stream, data, 0, data.length, 0, canOwn);\n          FS.close(stream);\n          FS.chmod(node, mode);\n        }\n        return node;\n      },\n      createDevice: (parent, name, input, output) => {\n        var path = PATH.join2(\n          typeof parent == 'string' ? parent : FS.getPath(parent),\n          name,\n        );\n        var mode = FS.getMode(!!input, !!output);\n        if (!FS.createDevice.major) FS.createDevice.major = 64;\n        var dev = FS.makedev(FS.createDevice.major++, 0);\n\n        FS.registerDevice(dev, {\n          open: (stream) => {\n            stream.seekable = false;\n          },\n          close: (stream) => {\n            if (output && output.buffer && output.buffer.length) {\n              output(10);\n            }\n          },\n          read: (stream, buffer, offset, length, pos) => {\n            var bytesRead = 0;\n            for (var i = 0; i < length; i++) {\n              var result;\n              try {\n                result = input();\n              } catch (e) {\n                throw new FS.ErrnoError(29);\n              }\n              if (result === undefined && bytesRead === 0) {\n                throw new FS.ErrnoError(6);\n              }\n              if (result === null || result === undefined) break;\n              bytesRead++;\n              buffer[offset + i] = result;\n            }\n            if (bytesRead) {\n              stream.node.timestamp = Date.now();\n            }\n            return bytesRead;\n          },\n          write: (stream, buffer, offset, length, pos) => {\n            for (var i = 0; i < length; i++) {\n              try {\n                output(buffer[offset + i]);\n              } catch (e) {\n                throw new FS.ErrnoError(29);\n              }\n            }\n            if (length) {\n              stream.node.timestamp = Date.now();\n            }\n            return i;\n          },\n        });\n        return FS.mkdev(path, mode, dev);\n      },\n      forceLoadFile: (obj) => {\n        if (obj.isDevice || obj.isFolder || obj.link || obj.contents)\n          return true;\n        if (typeof XMLHttpRequest != 'undefined') {\n          throw new Error(\n            'Lazy loading should have been performed (contents set) in createLazyFile, but it was not. Lazy loading only works in web workers. Use --embed-file or --preload-file in emcc on the main thread.',\n          );\n        } else if (read_) {\n          try {\n            obj.contents = intArrayFromString(read_(obj.url), true);\n            obj.usedBytes = obj.contents.length;\n          } catch (e) {\n            throw new FS.ErrnoError(29);\n          }\n        } else {\n          throw new Error('Cannot load without read() or XMLHttpRequest.');\n        }\n      },\n      createLazyFile: (parent, name, url, canRead, canWrite) => {\n        function LazyUint8Array() {\n          this.lengthKnown = false;\n          this.chunks = [];\n        }\n        LazyUint8Array.prototype.get = function LazyUint8Array_get(idx) {\n          if (idx > this.length - 1 || idx < 0) {\n            return undefined;\n          }\n          var chunkOffset = idx % this.chunkSize;\n          var chunkNum = (idx / this.chunkSize) | 0;\n          return this.getter(chunkNum)[chunkOffset];\n        };\n        LazyUint8Array.prototype.setDataGetter =\n          function LazyUint8Array_setDataGetter(getter) {\n            this.getter = getter;\n          };\n        LazyUint8Array.prototype.cacheLength =\n          function LazyUint8Array_cacheLength() {\n            var xhr = new XMLHttpRequest();\n            xhr.open('HEAD', url, false);\n            xhr.send(null);\n            if (\n              !((xhr.status >= 200 && xhr.status < 300) || xhr.status === 304)\n            )\n              throw new Error(\n                \"Couldn't load \" + url + '. Status: ' + xhr.status,\n              );\n            var datalength = Number(xhr.getResponseHeader('Content-length'));\n            var header;\n            var hasByteServing =\n              (header = xhr.getResponseHeader('Accept-Ranges')) &&\n              header === 'bytes';\n            var usesGzip =\n              (header = xhr.getResponseHeader('Content-Encoding')) &&\n              header === 'gzip';\n\n            var chunkSize = 1024 * 1024;\n\n            if (!hasByteServing) chunkSize = datalength;\n\n            var doXHR = (from, to) => {\n              if (from > to)\n                throw new Error(\n                  'invalid range (' +\n                    from +\n                    ', ' +\n                    to +\n                    ') or no bytes requested!',\n                );\n              if (to > datalength - 1)\n                throw new Error(\n                  'only ' + datalength + ' bytes available! programmer error!',\n                );\n\n              var xhr = new XMLHttpRequest();\n              xhr.open('GET', url, false);\n              if (datalength !== chunkSize)\n                xhr.setRequestHeader('Range', 'bytes=' + from + '-' + to);\n\n              xhr.responseType = 'arraybuffer';\n              if (xhr.overrideMimeType) {\n                xhr.overrideMimeType('text/plain; charset=x-user-defined');\n              }\n\n              xhr.send(null);\n              if (\n                !((xhr.status >= 200 && xhr.status < 300) || xhr.status === 304)\n              )\n                throw new Error(\n                  \"Couldn't load \" + url + '. Status: ' + xhr.status,\n                );\n              if (xhr.response !== undefined) {\n                return new Uint8Array(xhr.response || []);\n              }\n              return intArrayFromString(xhr.responseText || '', true);\n            };\n            var lazyArray = this;\n            lazyArray.setDataGetter((chunkNum) => {\n              var start = chunkNum * chunkSize;\n              var end = (chunkNum + 1) * chunkSize - 1;\n              end = Math.min(end, datalength - 1);\n              if (typeof lazyArray.chunks[chunkNum] == 'undefined') {\n                lazyArray.chunks[chunkNum] = doXHR(start, end);\n              }\n              if (typeof lazyArray.chunks[chunkNum] == 'undefined')\n                throw new Error('doXHR failed!');\n              return lazyArray.chunks[chunkNum];\n            });\n\n            if (usesGzip || !datalength) {\n              chunkSize = datalength = 1;\n              datalength = this.getter(0).length;\n              chunkSize = datalength;\n              out(\n                'LazyFiles on gzip forces download of the whole file when length is accessed',\n              );\n            }\n\n            this._length = datalength;\n            this._chunkSize = chunkSize;\n            this.lengthKnown = true;\n          };\n        if (typeof XMLHttpRequest != 'undefined') {\n          if (!ENVIRONMENT_IS_WORKER)\n            throw 'Cannot do synchronous binary XHRs outside webworkers in modern browsers. Use --embed-file or --preload-file in emcc';\n          var lazyArray = new LazyUint8Array();\n          Object.defineProperties(lazyArray, {\n            length: {\n              get: function () {\n                if (!this.lengthKnown) {\n                  this.cacheLength();\n                }\n                return this._length;\n              },\n            },\n            chunkSize: {\n              get: function () {\n                if (!this.lengthKnown) {\n                  this.cacheLength();\n                }\n                return this._chunkSize;\n              },\n            },\n          });\n\n          var properties = { isDevice: false, contents: lazyArray };\n        } else {\n          var properties = { isDevice: false, url: url };\n        }\n\n        var node = FS.createFile(parent, name, properties, canRead, canWrite);\n\n        if (properties.contents) {\n          node.contents = properties.contents;\n        } else if (properties.url) {\n          node.contents = null;\n          node.url = properties.url;\n        }\n\n        Object.defineProperties(node, {\n          usedBytes: {\n            get: function () {\n              return this.contents.length;\n            },\n          },\n        });\n\n        var stream_ops = {};\n        var keys = Object.keys(node.stream_ops);\n        keys.forEach((key) => {\n          var fn = node.stream_ops[key];\n          stream_ops[key] = function forceLoadLazyFile() {\n            FS.forceLoadFile(node);\n            return fn.apply(null, arguments);\n          };\n        });\n        function writeChunks(stream, buffer, offset, length, position) {\n          var contents = stream.node.contents;\n          if (position >= contents.length) return 0;\n          var size = Math.min(contents.length - position, length);\n          if (contents.slice) {\n            for (var i = 0; i < size; i++) {\n              buffer[offset + i] = contents[position + i];\n            }\n          } else {\n            for (var i = 0; i < size; i++) {\n              buffer[offset + i] = contents.get(position + i);\n            }\n          }\n          return size;\n        }\n\n        stream_ops.read = (stream, buffer, offset, length, position) => {\n          FS.forceLoadFile(node);\n          return writeChunks(stream, buffer, offset, length, position);\n        };\n\n        stream_ops.mmap = (stream, length, position, prot, flags) => {\n          FS.forceLoadFile(node);\n          var ptr = mmapAlloc(length);\n          if (!ptr) {\n            throw new FS.ErrnoError(48);\n          }\n          writeChunks(stream, HEAP8, ptr, length, position);\n          return { ptr: ptr, allocated: true };\n        };\n        node.stream_ops = stream_ops;\n        return node;\n      },\n      createPreloadedFile: (\n        parent,\n        name,\n        url,\n        canRead,\n        canWrite,\n        onload,\n        onerror,\n        dontCreateFile,\n        canOwn,\n        preFinish,\n      ) => {\n        var fullname = name\n          ? PATH_FS.resolve(PATH.join2(parent, name))\n          : parent;\n        var dep = getUniqueRunDependency('cp ' + fullname);\n        function processData(byteArray) {\n          function finish(byteArray) {\n            if (preFinish) preFinish();\n            if (!dontCreateFile) {\n              FS.createDataFile(\n                parent,\n                name,\n                byteArray,\n                canRead,\n                canWrite,\n                canOwn,\n              );\n            }\n            if (onload) onload();\n            removeRunDependency(dep);\n          }\n          if (\n            Browser.handledByPreloadPlugin(byteArray, fullname, finish, () => {\n              if (onerror) onerror();\n              removeRunDependency(dep);\n            })\n          ) {\n            return;\n          }\n          finish(byteArray);\n        }\n        addRunDependency(dep);\n        if (typeof url == 'string') {\n          asyncLoad(url, (byteArray) => processData(byteArray), onerror);\n        } else {\n          processData(url);\n        }\n      },\n      indexedDB: () => {\n        return (\n          window.indexedDB ||\n          window.mozIndexedDB ||\n          window.webkitIndexedDB ||\n          window.msIndexedDB\n        );\n      },\n      DB_NAME: () => {\n        return 'EM_FS_' + window.location.pathname;\n      },\n      DB_VERSION: 20,\n      DB_STORE_NAME: 'FILE_DATA',\n      saveFilesToDB: (paths, onload, onerror) => {\n        onload = onload || (() => {});\n        onerror = onerror || (() => {});\n        var indexedDB = FS.indexedDB();\n        try {\n          var openRequest = indexedDB.open(FS.DB_NAME(), FS.DB_VERSION);\n        } catch (e) {\n          return onerror(e);\n        }\n        openRequest.onupgradeneeded = () => {\n          out('creating db');\n          var db = openRequest.result;\n          db.createObjectStore(FS.DB_STORE_NAME);\n        };\n        openRequest.onsuccess = () => {\n          var db = openRequest.result;\n          var transaction = db.transaction([FS.DB_STORE_NAME], 'readwrite');\n          var files = transaction.objectStore(FS.DB_STORE_NAME);\n          var ok = 0,\n            fail = 0,\n            total = paths.length;\n          function finish() {\n            if (fail == 0) onload();\n            else onerror();\n          }\n          paths.forEach((path) => {\n            var putRequest = files.put(\n              FS.analyzePath(path).object.contents,\n              path,\n            );\n            putRequest.onsuccess = () => {\n              ok++;\n              if (ok + fail == total) finish();\n            };\n            putRequest.onerror = () => {\n              fail++;\n              if (ok + fail == total) finish();\n            };\n          });\n          transaction.onerror = onerror;\n        };\n        openRequest.onerror = onerror;\n      },\n      loadFilesFromDB: (paths, onload, onerror) => {\n        onload = onload || (() => {});\n        onerror = onerror || (() => {});\n        var indexedDB = FS.indexedDB();\n        try {\n          var openRequest = indexedDB.open(FS.DB_NAME(), FS.DB_VERSION);\n        } catch (e) {\n          return onerror(e);\n        }\n        openRequest.onupgradeneeded = onerror;\n        openRequest.onsuccess = () => {\n          var db = openRequest.result;\n          try {\n            var transaction = db.transaction([FS.DB_STORE_NAME], 'readonly');\n          } catch (e) {\n            onerror(e);\n            return;\n          }\n          var files = transaction.objectStore(FS.DB_STORE_NAME);\n          var ok = 0,\n            fail = 0,\n            total = paths.length;\n          function finish() {\n            if (fail == 0) onload();\n            else onerror();\n          }\n          paths.forEach((path) => {\n            var getRequest = files.get(path);\n            getRequest.onsuccess = () => {\n              if (FS.analyzePath(path).exists) {\n                FS.unlink(path);\n              }\n              FS.createDataFile(\n                PATH.dirname(path),\n                PATH.basename(path),\n                getRequest.result,\n                true,\n                true,\n                true,\n              );\n              ok++;\n              if (ok + fail == total) finish();\n            };\n            getRequest.onerror = () => {\n              fail++;\n              if (ok + fail == total) finish();\n            };\n          });\n          transaction.onerror = onerror;\n        };\n        openRequest.onerror = onerror;\n      },\n    };\n    var SYSCALLS = {\n      DEFAULT_POLLMASK: 5,\n      calculateAt: function (dirfd, path, allowEmpty) {\n        if (PATH.isAbs(path)) {\n          return path;\n        }\n\n        var dir;\n        if (dirfd === -100) {\n          dir = FS.cwd();\n        } else {\n          var dirstream = SYSCALLS.getStreamFromFD(dirfd);\n          dir = dirstream.path;\n        }\n        if (path.length == 0) {\n          if (!allowEmpty) {\n            throw new FS.ErrnoError(44);\n          }\n          return dir;\n        }\n        return PATH.join2(dir, path);\n      },\n      doStat: function (func, path, buf) {\n        try {\n          var stat = func(path);\n        } catch (e) {\n          if (\n            e &&\n            e.node &&\n            PATH.normalize(path) !== PATH.normalize(FS.getPath(e.node))\n          ) {\n            return -54;\n          }\n          throw e;\n        }\n        HEAP32[buf >> 2] = stat.dev;\n        HEAP32[(buf + 8) >> 2] = stat.ino;\n        HEAP32[(buf + 12) >> 2] = stat.mode;\n        HEAPU32[(buf + 16) >> 2] = stat.nlink;\n        HEAP32[(buf + 20) >> 2] = stat.uid;\n        HEAP32[(buf + 24) >> 2] = stat.gid;\n        HEAP32[(buf + 28) >> 2] = stat.rdev;\n        (tempI64 = [\n          stat.size >>> 0,\n          ((tempDouble = stat.size),\n          +Math.abs(tempDouble) >= 1.0\n            ? tempDouble > 0.0\n              ? (Math.min(\n                  +Math.floor(tempDouble / 4294967296.0),\n                  4294967295.0,\n                ) |\n                  0) >>>\n                0\n              : ~~+Math.ceil(\n                  (tempDouble - +(~~tempDouble >>> 0)) / 4294967296.0,\n                ) >>> 0\n            : 0),\n        ]),\n          (HEAP32[(buf + 40) >> 2] = tempI64[0]),\n          (HEAP32[(buf + 44) >> 2] = tempI64[1]);\n        HEAP32[(buf + 48) >> 2] = 4096;\n        HEAP32[(buf + 52) >> 2] = stat.blocks;\n        var atime = stat.atime.getTime();\n        var mtime = stat.mtime.getTime();\n        var ctime = stat.ctime.getTime();\n        (tempI64 = [\n          Math.floor(atime / 1000) >>> 0,\n          ((tempDouble = Math.floor(atime / 1000)),\n          +Math.abs(tempDouble) >= 1.0\n            ? tempDouble > 0.0\n              ? (Math.min(\n                  +Math.floor(tempDouble / 4294967296.0),\n                  4294967295.0,\n                ) |\n                  0) >>>\n                0\n              : ~~+Math.ceil(\n                  (tempDouble - +(~~tempDouble >>> 0)) / 4294967296.0,\n                ) >>> 0\n            : 0),\n        ]),\n          (HEAP32[(buf + 56) >> 2] = tempI64[0]),\n          (HEAP32[(buf + 60) >> 2] = tempI64[1]);\n        HEAPU32[(buf + 64) >> 2] = (atime % 1000) * 1000;\n        (tempI64 = [\n          Math.floor(mtime / 1000) >>> 0,\n          ((tempDouble = Math.floor(mtime / 1000)),\n          +Math.abs(tempDouble) >= 1.0\n            ? tempDouble > 0.0\n              ? (Math.min(\n                  +Math.floor(tempDouble / 4294967296.0),\n                  4294967295.0,\n                ) |\n                  0) >>>\n                0\n              : ~~+Math.ceil(\n                  (tempDouble - +(~~tempDouble >>> 0)) / 4294967296.0,\n                ) >>> 0\n            : 0),\n        ]),\n          (HEAP32[(buf + 72) >> 2] = tempI64[0]),\n          (HEAP32[(buf + 76) >> 2] = tempI64[1]);\n        HEAPU32[(buf + 80) >> 2] = (mtime % 1000) * 1000;\n        (tempI64 = [\n          Math.floor(ctime / 1000) >>> 0,\n          ((tempDouble = Math.floor(ctime / 1000)),\n          +Math.abs(tempDouble) >= 1.0\n            ? tempDouble > 0.0\n              ? (Math.min(\n                  +Math.floor(tempDouble / 4294967296.0),\n                  4294967295.0,\n                ) |\n                  0) >>>\n                0\n              : ~~+Math.ceil(\n                  (tempDouble - +(~~tempDouble >>> 0)) / 4294967296.0,\n                ) >>> 0\n            : 0),\n        ]),\n          (HEAP32[(buf + 88) >> 2] = tempI64[0]),\n          (HEAP32[(buf + 92) >> 2] = tempI64[1]);\n        HEAPU32[(buf + 96) >> 2] = (ctime % 1000) * 1000;\n        (tempI64 = [\n          stat.ino >>> 0,\n          ((tempDouble = stat.ino),\n          +Math.abs(tempDouble) >= 1.0\n            ? tempDouble > 0.0\n              ? (Math.min(\n                  +Math.floor(tempDouble / 4294967296.0),\n                  4294967295.0,\n                ) |\n                  0) >>>\n                0\n              : ~~+Math.ceil(\n                  (tempDouble - +(~~tempDouble >>> 0)) / 4294967296.0,\n                ) >>> 0\n            : 0),\n        ]),\n          (HEAP32[(buf + 104) >> 2] = tempI64[0]),\n          (HEAP32[(buf + 108) >> 2] = tempI64[1]);\n        return 0;\n      },\n      doMsync: function (addr, stream, len, flags, offset) {\n        if (!FS.isFile(stream.node.mode)) {\n          throw new FS.ErrnoError(43);\n        }\n        if (flags & 2) {\n          return 0;\n        }\n        var buffer = HEAPU8.slice(addr, addr + len);\n        FS.msync(stream, buffer, offset, len, flags);\n      },\n      varargs: undefined,\n      get: function () {\n        SYSCALLS.varargs += 4;\n        var ret = HEAP32[(SYSCALLS.varargs - 4) >> 2];\n        return ret;\n      },\n      getStr: function (ptr) {\n        var ret = UTF8ToString(ptr);\n        return ret;\n      },\n      getStreamFromFD: function (fd) {\n        var stream = FS.getStream(fd);\n        if (!stream) throw new FS.ErrnoError(8);\n        return stream;\n      },\n    };\n    function ___syscall_chmod(path, mode) {\n      try {\n        path = SYSCALLS.getStr(path);\n        FS.chmod(path, mode);\n        return 0;\n      } catch (e) {\n        if (typeof FS == 'undefined' || !(e instanceof FS.ErrnoError)) throw e;\n        return -e.errno;\n      }\n    }\n\n    function ___syscall_faccessat(dirfd, path, amode, flags) {\n      try {\n        path = SYSCALLS.getStr(path);\n        path = SYSCALLS.calculateAt(dirfd, path);\n        if (amode & ~7) {\n          return -28;\n        }\n        var lookup = FS.lookupPath(path, { follow: true });\n        var node = lookup.node;\n        if (!node) {\n          return -44;\n        }\n        var perms = '';\n        if (amode & 4) perms += 'r';\n        if (amode & 2) perms += 'w';\n        if (amode & 1) perms += 'x';\n        if (perms && FS.nodePermissions(node, perms)) {\n          return -2;\n        }\n        return 0;\n      } catch (e) {\n        if (typeof FS == 'undefined' || !(e instanceof FS.ErrnoError)) throw e;\n        return -e.errno;\n      }\n    }\n\n    function ___syscall_fchmod(fd, mode) {\n      try {\n        FS.fchmod(fd, mode);\n        return 0;\n      } catch (e) {\n        if (typeof FS == 'undefined' || !(e instanceof FS.ErrnoError)) throw e;\n        return -e.errno;\n      }\n    }\n\n    function ___syscall_fchown32(fd, owner, group) {\n      try {\n        FS.fchown(fd, owner, group);\n        return 0;\n      } catch (e) {\n        if (typeof FS == 'undefined' || !(e instanceof FS.ErrnoError)) throw e;\n        return -e.errno;\n      }\n    }\n\n    function setErrNo(value) {\n      HEAP32[___errno_location() >> 2] = value;\n      return value;\n    }\n\n    function ___syscall_fcntl64(fd, cmd, varargs) {\n      SYSCALLS.varargs = varargs;\n      try {\n        var stream = SYSCALLS.getStreamFromFD(fd);\n        switch (cmd) {\n          case 0: {\n            var arg = SYSCALLS.get();\n            if (arg < 0) {\n              return -28;\n            }\n            var newStream;\n            newStream = FS.createStream(stream, arg);\n            return newStream.fd;\n          }\n          case 1:\n          case 2:\n            return 0;\n          case 3:\n            return stream.flags;\n          case 4: {\n            var arg = SYSCALLS.get();\n            stream.flags |= arg;\n            return 0;\n          }\n          case 5: {\n            var arg = SYSCALLS.get();\n            var offset = 0;\n\n            HEAP16[(arg + offset) >> 1] = 2;\n            return 0;\n          }\n          case 6:\n          case 7:\n            return 0;\n          case 16:\n          case 8:\n            return -28;\n          case 9:\n            setErrNo(28);\n            return -1;\n          default: {\n            return -28;\n          }\n        }\n      } catch (e) {\n        if (typeof FS == 'undefined' || !(e instanceof FS.ErrnoError)) throw e;\n        return -e.errno;\n      }\n    }\n\n    function ___syscall_fstat64(fd, buf) {\n      try {\n        var stream = SYSCALLS.getStreamFromFD(fd);\n        return SYSCALLS.doStat(FS.stat, stream.path, buf);\n      } catch (e) {\n        if (typeof FS == 'undefined' || !(e instanceof FS.ErrnoError)) throw e;\n        return -e.errno;\n      }\n    }\n\n    var MAX_INT53 = 9007199254740992;\n\n    var MIN_INT53 = -9007199254740992;\n    function bigintToI53Checked(num) {\n      return num < MIN_INT53 || num > MAX_INT53 ? NaN : Number(num);\n    }\n\n    function ___syscall_ftruncate64(fd, length) {\n      try {\n        length = bigintToI53Checked(length);\n        if (isNaN(length)) return -61;\n        FS.ftruncate(fd, length);\n        return 0;\n      } catch (e) {\n        if (typeof FS == 'undefined' || !(e instanceof FS.ErrnoError)) throw e;\n        return -e.errno;\n      }\n    }\n\n    function ___syscall_getcwd(buf, size) {\n      try {\n        if (size === 0) return -28;\n        var cwd = FS.cwd();\n        var cwdLengthInBytes = lengthBytesUTF8(cwd) + 1;\n        if (size < cwdLengthInBytes) return -68;\n        stringToUTF8(cwd, buf, size);\n        return cwdLengthInBytes;\n      } catch (e) {\n        if (typeof FS == 'undefined' || !(e instanceof FS.ErrnoError)) throw e;\n        return -e.errno;\n      }\n    }\n\n    function ___syscall_ioctl(fd, op, varargs) {\n      SYSCALLS.varargs = varargs;\n      try {\n        var stream = SYSCALLS.getStreamFromFD(fd);\n        switch (op) {\n          case 21509:\n          case 21505: {\n            if (!stream.tty) return -59;\n            return 0;\n          }\n          case 21510:\n          case 21511:\n          case 21512:\n          case 21506:\n          case 21507:\n          case 21508: {\n            if (!stream.tty) return -59;\n            return 0;\n          }\n          case 21519: {\n            if (!stream.tty) return -59;\n            var argp = SYSCALLS.get();\n            HEAP32[argp >> 2] = 0;\n            return 0;\n          }\n          case 21520: {\n            if (!stream.tty) return -59;\n            return -28;\n          }\n          case 21531: {\n            var argp = SYSCALLS.get();\n            return FS.ioctl(stream, op, argp);\n          }\n          case 21523: {\n            if (!stream.tty) return -59;\n            return 0;\n          }\n          case 21524: {\n            if (!stream.tty) return -59;\n            return 0;\n          }\n          default:\n            return -28;\n        }\n      } catch (e) {\n        if (typeof FS == 'undefined' || !(e instanceof FS.ErrnoError)) throw e;\n        return -e.errno;\n      }\n    }\n\n    function ___syscall_lstat64(path, buf) {\n      try {\n        path = SYSCALLS.getStr(path);\n        return SYSCALLS.doStat(FS.lstat, path, buf);\n      } catch (e) {\n        if (typeof FS == 'undefined' || !(e instanceof FS.ErrnoError)) throw e;\n        return -e.errno;\n      }\n    }\n\n    function ___syscall_mkdirat(dirfd, path, mode) {\n      try {\n        path = SYSCALLS.getStr(path);\n        path = SYSCALLS.calculateAt(dirfd, path);\n\n        path = PATH.normalize(path);\n        if (path[path.length - 1] === '/')\n          path = path.substr(0, path.length - 1);\n        FS.mkdir(path, mode, 0);\n        return 0;\n      } catch (e) {\n        if (typeof FS == 'undefined' || !(e instanceof FS.ErrnoError)) throw e;\n        return -e.errno;\n      }\n    }\n\n    function ___syscall_newfstatat(dirfd, path, buf, flags) {\n      try {\n        path = SYSCALLS.getStr(path);\n        var nofollow = flags & 256;\n        var allowEmpty = flags & 4096;\n        flags = flags & ~6400;\n        path = SYSCALLS.calculateAt(dirfd, path, allowEmpty);\n        return SYSCALLS.doStat(nofollow ? FS.lstat : FS.stat, path, buf);\n      } catch (e) {\n        if (typeof FS == 'undefined' || !(e instanceof FS.ErrnoError)) throw e;\n        return -e.errno;\n      }\n    }\n\n    function ___syscall_openat(dirfd, path, flags, varargs) {\n      SYSCALLS.varargs = varargs;\n      try {\n        path = SYSCALLS.getStr(path);\n        path = SYSCALLS.calculateAt(dirfd, path);\n        var mode = varargs ? SYSCALLS.get() : 0;\n        return FS.open(path, flags, mode).fd;\n      } catch (e) {\n        if (typeof FS == 'undefined' || !(e instanceof FS.ErrnoError)) throw e;\n        return -e.errno;\n      }\n    }\n\n    function ___syscall_readlinkat(dirfd, path, buf, bufsize) {\n      try {\n        path = SYSCALLS.getStr(path);\n        path = SYSCALLS.calculateAt(dirfd, path);\n        if (bufsize <= 0) return -28;\n        var ret = FS.readlink(path);\n\n        var len = Math.min(bufsize, lengthBytesUTF8(ret));\n        var endChar = HEAP8[buf + len];\n        stringToUTF8(ret, buf, bufsize + 1);\n\n        HEAP8[buf + len] = endChar;\n        return len;\n      } catch (e) {\n        if (typeof FS == 'undefined' || !(e instanceof FS.ErrnoError)) throw e;\n        return -e.errno;\n      }\n    }\n\n    function ___syscall_rmdir(path) {\n      try {\n        path = SYSCALLS.getStr(path);\n        FS.rmdir(path);\n        return 0;\n      } catch (e) {\n        if (typeof FS == 'undefined' || !(e instanceof FS.ErrnoError)) throw e;\n        return -e.errno;\n      }\n    }\n\n    function ___syscall_stat64(path, buf) {\n      try {\n        path = SYSCALLS.getStr(path);\n        return SYSCALLS.doStat(FS.stat, path, buf);\n      } catch (e) {\n        if (typeof FS == 'undefined' || !(e instanceof FS.ErrnoError)) throw e;\n        return -e.errno;\n      }\n    }\n\n    function ___syscall_unlinkat(dirfd, path, flags) {\n      try {\n        path = SYSCALLS.getStr(path);\n        path = SYSCALLS.calculateAt(dirfd, path);\n        if (flags === 0) {\n          FS.unlink(path);\n        } else if (flags === 512) {\n          FS.rmdir(path);\n        } else {\n          abort('Invalid flags passed to unlinkat');\n        }\n        return 0;\n      } catch (e) {\n        if (typeof FS == 'undefined' || !(e instanceof FS.ErrnoError)) throw e;\n        return -e.errno;\n      }\n    }\n\n    function readI53FromI64(ptr) {\n      return HEAPU32[ptr >> 2] + HEAP32[(ptr + 4) >> 2] * 4294967296;\n    }\n\n    function ___syscall_utimensat(dirfd, path, times, flags) {\n      try {\n        path = SYSCALLS.getStr(path);\n        path = SYSCALLS.calculateAt(dirfd, path, true);\n        if (!times) {\n          var atime = Date.now();\n          var mtime = atime;\n        } else {\n          var seconds = readI53FromI64(times);\n          var nanoseconds = HEAP32[(times + 8) >> 2];\n          atime = seconds * 1000 + nanoseconds / (1000 * 1000);\n          times += 16;\n          seconds = readI53FromI64(times);\n          nanoseconds = HEAP32[(times + 8) >> 2];\n          mtime = seconds * 1000 + nanoseconds / (1000 * 1000);\n        }\n        FS.utime(path, atime, mtime);\n        return 0;\n      } catch (e) {\n        if (typeof FS == 'undefined' || !(e instanceof FS.ErrnoError)) throw e;\n        return -e.errno;\n      }\n    }\n\n    var nowIsMonotonic = true;\n    function __emscripten_get_now_is_monotonic() {\n      return nowIsMonotonic;\n    }\n\n    function __isLeapYear(year) {\n      return year % 4 === 0 && (year % 100 !== 0 || year % 400 === 0);\n    }\n\n    var __MONTH_DAYS_LEAP_CUMULATIVE = [\n      0, 31, 60, 91, 121, 152, 182, 213, 244, 274, 305, 335,\n    ];\n\n    var __MONTH_DAYS_REGULAR_CUMULATIVE = [\n      0, 31, 59, 90, 120, 151, 181, 212, 243, 273, 304, 334,\n    ];\n    function __yday_from_date(date) {\n      var isLeapYear = __isLeapYear(date.getFullYear());\n      var monthDaysCumulative = isLeapYear\n        ? __MONTH_DAYS_LEAP_CUMULATIVE\n        : __MONTH_DAYS_REGULAR_CUMULATIVE;\n      var yday = monthDaysCumulative[date.getMonth()] + date.getDate() - 1;\n\n      return yday;\n    }\n    function __localtime_js(time, tmPtr) {\n      var date = new Date(readI53FromI64(time) * 1000);\n      HEAP32[tmPtr >> 2] = date.getSeconds();\n      HEAP32[(tmPtr + 4) >> 2] = date.getMinutes();\n      HEAP32[(tmPtr + 8) >> 2] = date.getHours();\n      HEAP32[(tmPtr + 12) >> 2] = date.getDate();\n      HEAP32[(tmPtr + 16) >> 2] = date.getMonth();\n      HEAP32[(tmPtr + 20) >> 2] = date.getFullYear() - 1900;\n      HEAP32[(tmPtr + 24) >> 2] = date.getDay();\n\n      var yday = __yday_from_date(date) | 0;\n      HEAP32[(tmPtr + 28) >> 2] = yday;\n      HEAP32[(tmPtr + 36) >> 2] = -(date.getTimezoneOffset() * 60);\n\n      var start = new Date(date.getFullYear(), 0, 1);\n      var summerOffset = new Date(date.getFullYear(), 6, 1).getTimezoneOffset();\n      var winterOffset = start.getTimezoneOffset();\n      var dst =\n        (summerOffset != winterOffset &&\n          date.getTimezoneOffset() == Math.min(winterOffset, summerOffset)) | 0;\n      HEAP32[(tmPtr + 32) >> 2] = dst;\n    }\n\n    function allocateUTF8(str) {\n      var size = lengthBytesUTF8(str) + 1;\n      var ret = _malloc(size);\n      if (ret) stringToUTF8Array(str, HEAP8, ret, size);\n      return ret;\n    }\n    function __tzset_js(timezone, daylight, tzname) {\n      var currentYear = new Date().getFullYear();\n      var winter = new Date(currentYear, 0, 1);\n      var summer = new Date(currentYear, 6, 1);\n      var winterOffset = winter.getTimezoneOffset();\n      var summerOffset = summer.getTimezoneOffset();\n\n      var stdTimezoneOffset = Math.max(winterOffset, summerOffset);\n\n      HEAPU32[timezone >> 2] = stdTimezoneOffset * 60;\n\n      HEAP32[daylight >> 2] = Number(winterOffset != summerOffset);\n\n      function extractZone(date) {\n        var match = date.toTimeString().match(/\\(([A-Za-z ]+)\\)$/);\n        return match ? match[1] : 'GMT';\n      }\n      var winterName = extractZone(winter);\n      var summerName = extractZone(summer);\n      var winterNamePtr = allocateUTF8(winterName);\n      var summerNamePtr = allocateUTF8(summerName);\n      if (summerOffset < winterOffset) {\n        HEAPU32[tzname >> 2] = winterNamePtr;\n        HEAPU32[(tzname + 4) >> 2] = summerNamePtr;\n      } else {\n        HEAPU32[tzname >> 2] = summerNamePtr;\n        HEAPU32[(tzname + 4) >> 2] = winterNamePtr;\n      }\n    }\n\n    function _emscripten_date_now() {\n      return Date.now();\n    }\n\n    var _emscripten_get_now;\n    _emscripten_get_now = () => performance.now();\n    function getHeapMax() {\n      return 2147483648;\n    }\n\n    function emscripten_realloc_buffer(size) {\n      var b = wasmMemory.buffer;\n      try {\n        wasmMemory.grow((size - b.byteLength + 65535) >>> 16);\n        updateMemoryViews();\n        return 1;\n      } catch (e) {}\n    }\n    function _emscripten_resize_heap(requestedSize) {\n      var oldSize = HEAPU8.length;\n      requestedSize = requestedSize >>> 0;\n\n      var maxHeapSize = getHeapMax();\n      if (requestedSize > maxHeapSize) {\n        return false;\n      }\n\n      let alignUp = (x, multiple) =>\n        x + ((multiple - (x % multiple)) % multiple);\n\n      for (var cutDown = 1; cutDown <= 4; cutDown *= 2) {\n        var overGrownHeapSize = oldSize * (1 + 0.2 / cutDown);\n\n        overGrownHeapSize = Math.min(\n          overGrownHeapSize,\n          requestedSize + 100663296,\n        );\n\n        var newSize = Math.min(\n          maxHeapSize,\n          alignUp(Math.max(requestedSize, overGrownHeapSize), 65536),\n        );\n\n        var replacement = emscripten_realloc_buffer(newSize);\n        if (replacement) {\n          return true;\n        }\n      }\n      return false;\n    }\n\n    var ENV = {};\n\n    function getExecutableName() {\n      return thisProgram || './this.program';\n    }\n    function getEnvStrings() {\n      if (!getEnvStrings.strings) {\n        var lang =\n          (\n            (typeof navigator == 'object' &&\n              navigator.languages &&\n              navigator.languages[0]) ||\n            'C'\n          ).replace('-', '_') + '.UTF-8';\n        var env = {\n          USER: 'web_user',\n          LOGNAME: 'web_user',\n          PATH: '/',\n          PWD: '/',\n          HOME: '/home/web_user',\n          LANG: lang,\n          _: getExecutableName(),\n        };\n\n        for (var x in ENV) {\n          if (ENV[x] === undefined) delete env[x];\n          else env[x] = ENV[x];\n        }\n        var strings = [];\n        for (var x in env) {\n          strings.push(x + '=' + env[x]);\n        }\n        getEnvStrings.strings = strings;\n      }\n      return getEnvStrings.strings;\n    }\n\n    function writeAsciiToMemory(str, buffer, dontAddNull) {\n      for (var i = 0; i < str.length; ++i) {\n        HEAP8[buffer++ >> 0] = str.charCodeAt(i);\n      }\n\n      if (!dontAddNull) HEAP8[buffer >> 0] = 0;\n    }\n\n    function _environ_get(__environ, environ_buf) {\n      var bufSize = 0;\n      getEnvStrings().forEach(function (string, i) {\n        var ptr = environ_buf + bufSize;\n        HEAPU32[(__environ + i * 4) >> 2] = ptr;\n        writeAsciiToMemory(string, ptr);\n        bufSize += string.length + 1;\n      });\n      return 0;\n    }\n\n    function _environ_sizes_get(penviron_count, penviron_buf_size) {\n      var strings = getEnvStrings();\n      HEAPU32[penviron_count >> 2] = strings.length;\n      var bufSize = 0;\n      strings.forEach(function (string) {\n        bufSize += string.length + 1;\n      });\n      HEAPU32[penviron_buf_size >> 2] = bufSize;\n      return 0;\n    }\n\n    function _fd_close(fd) {\n      try {\n        var stream = SYSCALLS.getStreamFromFD(fd);\n        FS.close(stream);\n        return 0;\n      } catch (e) {\n        if (typeof FS == 'undefined' || !(e instanceof FS.ErrnoError)) throw e;\n        return e.errno;\n      }\n    }\n\n    function _fd_fdstat_get(fd, pbuf) {\n      try {\n        var stream = SYSCALLS.getStreamFromFD(fd);\n\n        var type = stream.tty\n          ? 2\n          : FS.isDir(stream.mode)\n          ? 3\n          : FS.isLink(stream.mode)\n          ? 7\n          : 4;\n        HEAP8[pbuf >> 0] = type;\n\n        return 0;\n      } catch (e) {\n        if (typeof FS == 'undefined' || !(e instanceof FS.ErrnoError)) throw e;\n        return e.errno;\n      }\n    }\n\n    function doReadv(stream, iov, iovcnt, offset) {\n      var ret = 0;\n      for (var i = 0; i < iovcnt; i++) {\n        var ptr = HEAPU32[iov >> 2];\n        var len = HEAPU32[(iov + 4) >> 2];\n        iov += 8;\n        var curr = FS.read(stream, HEAP8, ptr, len, offset);\n        if (curr < 0) return -1;\n        ret += curr;\n        if (curr < len) break;\n        if (typeof offset !== 'undefined') {\n          offset += curr;\n        }\n      }\n      return ret;\n    }\n\n    function _fd_read(fd, iov, iovcnt, pnum) {\n      try {\n        var stream = SYSCALLS.getStreamFromFD(fd);\n        var num = doReadv(stream, iov, iovcnt);\n        HEAPU32[pnum >> 2] = num;\n        return 0;\n      } catch (e) {\n        if (typeof FS == 'undefined' || !(e instanceof FS.ErrnoError)) throw e;\n        return e.errno;\n      }\n    }\n\n    function _fd_seek(fd, offset, whence, newOffset) {\n      try {\n        offset = bigintToI53Checked(offset);\n        if (isNaN(offset)) return 61;\n        var stream = SYSCALLS.getStreamFromFD(fd);\n        FS.llseek(stream, offset, whence);\n        (tempI64 = [\n          stream.position >>> 0,\n          ((tempDouble = stream.position),\n          +Math.abs(tempDouble) >= 1.0\n            ? tempDouble > 0.0\n              ? (Math.min(\n                  +Math.floor(tempDouble / 4294967296.0),\n                  4294967295.0,\n                ) |\n                  0) >>>\n                0\n              : ~~+Math.ceil(\n                  (tempDouble - +(~~tempDouble >>> 0)) / 4294967296.0,\n                ) >>> 0\n            : 0),\n        ]),\n          (HEAP32[newOffset >> 2] = tempI64[0]),\n          (HEAP32[(newOffset + 4) >> 2] = tempI64[1]);\n        if (stream.getdents && offset === 0 && whence === 0)\n          stream.getdents = null;\n        return 0;\n      } catch (e) {\n        if (typeof FS == 'undefined' || !(e instanceof FS.ErrnoError)) throw e;\n        return e.errno;\n      }\n    }\n\n    function _fd_sync(fd) {\n      try {\n        var stream = SYSCALLS.getStreamFromFD(fd);\n        if (stream.stream_ops && stream.stream_ops.fsync) {\n          return stream.stream_ops.fsync(stream);\n        }\n        return 0;\n      } catch (e) {\n        if (typeof FS == 'undefined' || !(e instanceof FS.ErrnoError)) throw e;\n        return e.errno;\n      }\n    }\n\n    function doWritev(stream, iov, iovcnt, offset) {\n      var ret = 0;\n      for (var i = 0; i < iovcnt; i++) {\n        var ptr = HEAPU32[iov >> 2];\n        var len = HEAPU32[(iov + 4) >> 2];\n        iov += 8;\n        var curr = FS.write(stream, HEAP8, ptr, len, offset);\n        if (curr < 0) return -1;\n        ret += curr;\n        if (typeof offset !== 'undefined') {\n          offset += curr;\n        }\n      }\n      return ret;\n    }\n\n    function _fd_write(fd, iov, iovcnt, pnum) {\n      try {\n        var stream = SYSCALLS.getStreamFromFD(fd);\n        var num = doWritev(stream, iov, iovcnt);\n        HEAPU32[pnum >> 2] = num;\n        return 0;\n      } catch (e) {\n        if (typeof FS == 'undefined' || !(e instanceof FS.ErrnoError)) throw e;\n        return e.errno;\n      }\n    }\n\n    var FSNode = function (parent, name, mode, rdev) {\n      if (!parent) {\n        parent = this;\n      }\n      this.parent = parent;\n      this.mount = parent.mount;\n      this.mounted = null;\n      this.id = FS.nextInode++;\n      this.name = name;\n      this.mode = mode;\n      this.node_ops = {};\n      this.stream_ops = {};\n      this.rdev = rdev;\n    };\n    var readMode = 292 | 73;\n    var writeMode = 146;\n    Object.defineProperties(FSNode.prototype, {\n      read: {\n        get: function () {\n          return (this.mode & readMode) === readMode;\n        },\n        set: function (val) {\n          val ? (this.mode |= readMode) : (this.mode &= ~readMode);\n        },\n      },\n      write: {\n        get: function () {\n          return (this.mode & writeMode) === writeMode;\n        },\n        set: function (val) {\n          val ? (this.mode |= writeMode) : (this.mode &= ~writeMode);\n        },\n      },\n      isFolder: {\n        get: function () {\n          return FS.isDir(this.mode);\n        },\n      },\n      isDevice: {\n        get: function () {\n          return FS.isChrdev(this.mode);\n        },\n      },\n    });\n    FS.FSNode = FSNode;\n    FS.staticInit();\n    var ASSERTIONS = false;\n\n    var asmLibraryArg = {\n      __syscall_chmod: ___syscall_chmod,\n      __syscall_faccessat: ___syscall_faccessat,\n      __syscall_fchmod: ___syscall_fchmod,\n      __syscall_fchown32: ___syscall_fchown32,\n      __syscall_fcntl64: ___syscall_fcntl64,\n      __syscall_fstat64: ___syscall_fstat64,\n      __syscall_ftruncate64: ___syscall_ftruncate64,\n      __syscall_getcwd: ___syscall_getcwd,\n      __syscall_ioctl: ___syscall_ioctl,\n      __syscall_lstat64: ___syscall_lstat64,\n      __syscall_mkdirat: ___syscall_mkdirat,\n      __syscall_newfstatat: ___syscall_newfstatat,\n      __syscall_openat: ___syscall_openat,\n      __syscall_readlinkat: ___syscall_readlinkat,\n      __syscall_rmdir: ___syscall_rmdir,\n      __syscall_stat64: ___syscall_stat64,\n      __syscall_unlinkat: ___syscall_unlinkat,\n      __syscall_utimensat: ___syscall_utimensat,\n      _emscripten_get_now_is_monotonic: __emscripten_get_now_is_monotonic,\n      _localtime_js: __localtime_js,\n      _tzset_js: __tzset_js,\n      emscripten_date_now: _emscripten_date_now,\n      emscripten_get_now: _emscripten_get_now,\n      emscripten_resize_heap: _emscripten_resize_heap,\n      environ_get: _environ_get,\n      environ_sizes_get: _environ_sizes_get,\n      fd_close: _fd_close,\n      fd_fdstat_get: _fd_fdstat_get,\n      fd_read: _fd_read,\n      fd_seek: _fd_seek,\n      fd_sync: _fd_sync,\n      fd_write: _fd_write,\n      memory: wasmMemory,\n    };\n    var asm = createWasm();\n\n    var ___wasm_call_ctors = (Module['___wasm_call_ctors'] = function () {\n      return (___wasm_call_ctors = Module['___wasm_call_ctors'] =\n        Module['asm']['__wasm_call_ctors']).apply(null, arguments);\n    });\n\n    var _sqlite3_status64 = (Module['_sqlite3_status64'] = function () {\n      return (_sqlite3_status64 = Module['_sqlite3_status64'] =\n        Module['asm']['sqlite3_status64']).apply(null, arguments);\n    });\n\n    var _sqlite3_status = (Module['_sqlite3_status'] = function () {\n      return (_sqlite3_status = Module['_sqlite3_status'] =\n        Module['asm']['sqlite3_status']).apply(null, arguments);\n    });\n\n    var _sqlite3_db_status = (Module['_sqlite3_db_status'] = function () {\n      return (_sqlite3_db_status = Module['_sqlite3_db_status'] =\n        Module['asm']['sqlite3_db_status']).apply(null, arguments);\n    });\n\n    var _sqlite3_msize = (Module['_sqlite3_msize'] = function () {\n      return (_sqlite3_msize = Module['_sqlite3_msize'] =\n        Module['asm']['sqlite3_msize']).apply(null, arguments);\n    });\n\n    var _sqlite3_vfs_find = (Module['_sqlite3_vfs_find'] = function () {\n      return (_sqlite3_vfs_find = Module['_sqlite3_vfs_find'] =\n        Module['asm']['sqlite3_vfs_find']).apply(null, arguments);\n    });\n\n    var _sqlite3_initialize = (Module['_sqlite3_initialize'] = function () {\n      return (_sqlite3_initialize = Module['_sqlite3_initialize'] =\n        Module['asm']['sqlite3_initialize']).apply(null, arguments);\n    });\n\n    var _sqlite3_malloc = (Module['_sqlite3_malloc'] = function () {\n      return (_sqlite3_malloc = Module['_sqlite3_malloc'] =\n        Module['asm']['sqlite3_malloc']).apply(null, arguments);\n    });\n\n    var _sqlite3_free = (Module['_sqlite3_free'] = function () {\n      return (_sqlite3_free = Module['_sqlite3_free'] =\n        Module['asm']['sqlite3_free']).apply(null, arguments);\n    });\n\n    var _sqlite3_vfs_register = (Module['_sqlite3_vfs_register'] = function () {\n      return (_sqlite3_vfs_register = Module['_sqlite3_vfs_register'] =\n        Module['asm']['sqlite3_vfs_register']).apply(null, arguments);\n    });\n\n    var _sqlite3_vfs_unregister = (Module['_sqlite3_vfs_unregister'] =\n      function () {\n        return (_sqlite3_vfs_unregister = Module['_sqlite3_vfs_unregister'] =\n          Module['asm']['sqlite3_vfs_unregister']).apply(null, arguments);\n      });\n\n    var _sqlite3_malloc64 = (Module['_sqlite3_malloc64'] = function () {\n      return (_sqlite3_malloc64 = Module['_sqlite3_malloc64'] =\n        Module['asm']['sqlite3_malloc64']).apply(null, arguments);\n    });\n\n    var _sqlite3_realloc = (Module['_sqlite3_realloc'] = function () {\n      return (_sqlite3_realloc = Module['_sqlite3_realloc'] =\n        Module['asm']['sqlite3_realloc']).apply(null, arguments);\n    });\n\n    var _sqlite3_realloc64 = (Module['_sqlite3_realloc64'] = function () {\n      return (_sqlite3_realloc64 = Module['_sqlite3_realloc64'] =\n        Module['asm']['sqlite3_realloc64']).apply(null, arguments);\n    });\n\n    var _sqlite3_value_text = (Module['_sqlite3_value_text'] = function () {\n      return (_sqlite3_value_text = Module['_sqlite3_value_text'] =\n        Module['asm']['sqlite3_value_text']).apply(null, arguments);\n    });\n\n    var _sqlite3_randomness = (Module['_sqlite3_randomness'] = function () {\n      return (_sqlite3_randomness = Module['_sqlite3_randomness'] =\n        Module['asm']['sqlite3_randomness']).apply(null, arguments);\n    });\n\n    var _sqlite3_stricmp = (Module['_sqlite3_stricmp'] = function () {\n      return (_sqlite3_stricmp = Module['_sqlite3_stricmp'] =\n        Module['asm']['sqlite3_stricmp']).apply(null, arguments);\n    });\n\n    var _sqlite3_strnicmp = (Module['_sqlite3_strnicmp'] = function () {\n      return (_sqlite3_strnicmp = Module['_sqlite3_strnicmp'] =\n        Module['asm']['sqlite3_strnicmp']).apply(null, arguments);\n    });\n\n    var _sqlite3_uri_parameter = (Module['_sqlite3_uri_parameter'] =\n      function () {\n        return (_sqlite3_uri_parameter = Module['_sqlite3_uri_parameter'] =\n          Module['asm']['sqlite3_uri_parameter']).apply(null, arguments);\n      });\n\n    var ___errno_location = (Module['___errno_location'] = function () {\n      return (___errno_location = Module['___errno_location'] =\n        Module['asm']['__errno_location']).apply(null, arguments);\n    });\n\n    var _sqlite3_uri_boolean = (Module['_sqlite3_uri_boolean'] = function () {\n      return (_sqlite3_uri_boolean = Module['_sqlite3_uri_boolean'] =\n        Module['asm']['sqlite3_uri_boolean']).apply(null, arguments);\n    });\n\n    var _sqlite3_serialize = (Module['_sqlite3_serialize'] = function () {\n      return (_sqlite3_serialize = Module['_sqlite3_serialize'] =\n        Module['asm']['sqlite3_serialize']).apply(null, arguments);\n    });\n\n    var _sqlite3_prepare_v2 = (Module['_sqlite3_prepare_v2'] = function () {\n      return (_sqlite3_prepare_v2 = Module['_sqlite3_prepare_v2'] =\n        Module['asm']['sqlite3_prepare_v2']).apply(null, arguments);\n    });\n\n    var _sqlite3_step = (Module['_sqlite3_step'] = function () {\n      return (_sqlite3_step = Module['_sqlite3_step'] =\n        Module['asm']['sqlite3_step']).apply(null, arguments);\n    });\n\n    var _sqlite3_column_int64 = (Module['_sqlite3_column_int64'] = function () {\n      return (_sqlite3_column_int64 = Module['_sqlite3_column_int64'] =\n        Module['asm']['sqlite3_column_int64']).apply(null, arguments);\n    });\n\n    var _sqlite3_column_int = (Module['_sqlite3_column_int'] = function () {\n      return (_sqlite3_column_int = Module['_sqlite3_column_int'] =\n        Module['asm']['sqlite3_column_int']).apply(null, arguments);\n    });\n\n    var _sqlite3_finalize = (Module['_sqlite3_finalize'] = function () {\n      return (_sqlite3_finalize = Module['_sqlite3_finalize'] =\n        Module['asm']['sqlite3_finalize']).apply(null, arguments);\n    });\n\n    var _sqlite3_file_control = (Module['_sqlite3_file_control'] = function () {\n      return (_sqlite3_file_control = Module['_sqlite3_file_control'] =\n        Module['asm']['sqlite3_file_control']).apply(null, arguments);\n    });\n\n    var _sqlite3_reset = (Module['_sqlite3_reset'] = function () {\n      return (_sqlite3_reset = Module['_sqlite3_reset'] =\n        Module['asm']['sqlite3_reset']).apply(null, arguments);\n    });\n\n    var _sqlite3_deserialize = (Module['_sqlite3_deserialize'] = function () {\n      return (_sqlite3_deserialize = Module['_sqlite3_deserialize'] =\n        Module['asm']['sqlite3_deserialize']).apply(null, arguments);\n    });\n\n    var _sqlite3_clear_bindings = (Module['_sqlite3_clear_bindings'] =\n      function () {\n        return (_sqlite3_clear_bindings = Module['_sqlite3_clear_bindings'] =\n          Module['asm']['sqlite3_clear_bindings']).apply(null, arguments);\n      });\n\n    var _sqlite3_value_blob = (Module['_sqlite3_value_blob'] = function () {\n      return (_sqlite3_value_blob = Module['_sqlite3_value_blob'] =\n        Module['asm']['sqlite3_value_blob']).apply(null, arguments);\n    });\n\n    var _sqlite3_value_bytes = (Module['_sqlite3_value_bytes'] = function () {\n      return (_sqlite3_value_bytes = Module['_sqlite3_value_bytes'] =\n        Module['asm']['sqlite3_value_bytes']).apply(null, arguments);\n    });\n\n    var _sqlite3_value_double = (Module['_sqlite3_value_double'] = function () {\n      return (_sqlite3_value_double = Module['_sqlite3_value_double'] =\n        Module['asm']['sqlite3_value_double']).apply(null, arguments);\n    });\n\n    var _sqlite3_value_int = (Module['_sqlite3_value_int'] = function () {\n      return (_sqlite3_value_int = Module['_sqlite3_value_int'] =\n        Module['asm']['sqlite3_value_int']).apply(null, arguments);\n    });\n\n    var _sqlite3_value_int64 = (Module['_sqlite3_value_int64'] = function () {\n      return (_sqlite3_value_int64 = Module['_sqlite3_value_int64'] =\n        Module['asm']['sqlite3_value_int64']).apply(null, arguments);\n    });\n\n    var _sqlite3_value_subtype = (Module['_sqlite3_value_subtype'] =\n      function () {\n        return (_sqlite3_value_subtype = Module['_sqlite3_value_subtype'] =\n          Module['asm']['sqlite3_value_subtype']).apply(null, arguments);\n      });\n\n    var _sqlite3_value_pointer = (Module['_sqlite3_value_pointer'] =\n      function () {\n        return (_sqlite3_value_pointer = Module['_sqlite3_value_pointer'] =\n          Module['asm']['sqlite3_value_pointer']).apply(null, arguments);\n      });\n\n    var _sqlite3_value_type = (Module['_sqlite3_value_type'] = function () {\n      return (_sqlite3_value_type = Module['_sqlite3_value_type'] =\n        Module['asm']['sqlite3_value_type']).apply(null, arguments);\n    });\n\n    var _sqlite3_value_nochange = (Module['_sqlite3_value_nochange'] =\n      function () {\n        return (_sqlite3_value_nochange = Module['_sqlite3_value_nochange'] =\n          Module['asm']['sqlite3_value_nochange']).apply(null, arguments);\n      });\n\n    var _sqlite3_value_frombind = (Module['_sqlite3_value_frombind'] =\n      function () {\n        return (_sqlite3_value_frombind = Module['_sqlite3_value_frombind'] =\n          Module['asm']['sqlite3_value_frombind']).apply(null, arguments);\n      });\n\n    var _sqlite3_value_dup = (Module['_sqlite3_value_dup'] = function () {\n      return (_sqlite3_value_dup = Module['_sqlite3_value_dup'] =\n        Module['asm']['sqlite3_value_dup']).apply(null, arguments);\n    });\n\n    var _sqlite3_value_free = (Module['_sqlite3_value_free'] = function () {\n      return (_sqlite3_value_free = Module['_sqlite3_value_free'] =\n        Module['asm']['sqlite3_value_free']).apply(null, arguments);\n    });\n\n    var _sqlite3_result_blob = (Module['_sqlite3_result_blob'] = function () {\n      return (_sqlite3_result_blob = Module['_sqlite3_result_blob'] =\n        Module['asm']['sqlite3_result_blob']).apply(null, arguments);\n    });\n\n    var _sqlite3_result_error_nomem = (Module['_sqlite3_result_error_nomem'] =\n      function () {\n        return (_sqlite3_result_error_nomem = Module[\n          '_sqlite3_result_error_nomem'\n        ] =\n          Module['asm']['sqlite3_result_error_nomem']).apply(null, arguments);\n      });\n\n    var _sqlite3_result_error_toobig = (Module['_sqlite3_result_error_toobig'] =\n      function () {\n        return (_sqlite3_result_error_toobig = Module[\n          '_sqlite3_result_error_toobig'\n        ] =\n          Module['asm']['sqlite3_result_error_toobig']).apply(null, arguments);\n      });\n\n    var _sqlite3_result_double = (Module['_sqlite3_result_double'] =\n      function () {\n        return (_sqlite3_result_double = Module['_sqlite3_result_double'] =\n          Module['asm']['sqlite3_result_double']).apply(null, arguments);\n      });\n\n    var _sqlite3_result_error = (Module['_sqlite3_result_error'] = function () {\n      return (_sqlite3_result_error = Module['_sqlite3_result_error'] =\n        Module['asm']['sqlite3_result_error']).apply(null, arguments);\n    });\n\n    var _sqlite3_result_int = (Module['_sqlite3_result_int'] = function () {\n      return (_sqlite3_result_int = Module['_sqlite3_result_int'] =\n        Module['asm']['sqlite3_result_int']).apply(null, arguments);\n    });\n\n    var _sqlite3_result_int64 = (Module['_sqlite3_result_int64'] = function () {\n      return (_sqlite3_result_int64 = Module['_sqlite3_result_int64'] =\n        Module['asm']['sqlite3_result_int64']).apply(null, arguments);\n    });\n\n    var _sqlite3_result_null = (Module['_sqlite3_result_null'] = function () {\n      return (_sqlite3_result_null = Module['_sqlite3_result_null'] =\n        Module['asm']['sqlite3_result_null']).apply(null, arguments);\n    });\n\n    var _sqlite3_result_pointer = (Module['_sqlite3_result_pointer'] =\n      function () {\n        return (_sqlite3_result_pointer = Module['_sqlite3_result_pointer'] =\n          Module['asm']['sqlite3_result_pointer']).apply(null, arguments);\n      });\n\n    var _sqlite3_result_subtype = (Module['_sqlite3_result_subtype'] =\n      function () {\n        return (_sqlite3_result_subtype = Module['_sqlite3_result_subtype'] =\n          Module['asm']['sqlite3_result_subtype']).apply(null, arguments);\n      });\n\n    var _sqlite3_result_text = (Module['_sqlite3_result_text'] = function () {\n      return (_sqlite3_result_text = Module['_sqlite3_result_text'] =\n        Module['asm']['sqlite3_result_text']).apply(null, arguments);\n    });\n\n    var _sqlite3_result_zeroblob = (Module['_sqlite3_result_zeroblob'] =\n      function () {\n        return (_sqlite3_result_zeroblob = Module['_sqlite3_result_zeroblob'] =\n          Module['asm']['sqlite3_result_zeroblob']).apply(null, arguments);\n      });\n\n    var _sqlite3_result_zeroblob64 = (Module['_sqlite3_result_zeroblob64'] =\n      function () {\n        return (_sqlite3_result_zeroblob64 = Module[\n          '_sqlite3_result_zeroblob64'\n        ] =\n          Module['asm']['sqlite3_result_zeroblob64']).apply(null, arguments);\n      });\n\n    var _sqlite3_result_error_code = (Module['_sqlite3_result_error_code'] =\n      function () {\n        return (_sqlite3_result_error_code = Module[\n          '_sqlite3_result_error_code'\n        ] =\n          Module['asm']['sqlite3_result_error_code']).apply(null, arguments);\n      });\n\n    var _sqlite3_user_data = (Module['_sqlite3_user_data'] = function () {\n      return (_sqlite3_user_data = Module['_sqlite3_user_data'] =\n        Module['asm']['sqlite3_user_data']).apply(null, arguments);\n    });\n\n    var _sqlite3_context_db_handle = (Module['_sqlite3_context_db_handle'] =\n      function () {\n        return (_sqlite3_context_db_handle = Module[\n          '_sqlite3_context_db_handle'\n        ] =\n          Module['asm']['sqlite3_context_db_handle']).apply(null, arguments);\n      });\n\n    var _sqlite3_vtab_nochange = (Module['_sqlite3_vtab_nochange'] =\n      function () {\n        return (_sqlite3_vtab_nochange = Module['_sqlite3_vtab_nochange'] =\n          Module['asm']['sqlite3_vtab_nochange']).apply(null, arguments);\n      });\n\n    var _sqlite3_vtab_in_first = (Module['_sqlite3_vtab_in_first'] =\n      function () {\n        return (_sqlite3_vtab_in_first = Module['_sqlite3_vtab_in_first'] =\n          Module['asm']['sqlite3_vtab_in_first']).apply(null, arguments);\n      });\n\n    var _sqlite3_vtab_in_next = (Module['_sqlite3_vtab_in_next'] = function () {\n      return (_sqlite3_vtab_in_next = Module['_sqlite3_vtab_in_next'] =\n        Module['asm']['sqlite3_vtab_in_next']).apply(null, arguments);\n    });\n\n    var _sqlite3_aggregate_context = (Module['_sqlite3_aggregate_context'] =\n      function () {\n        return (_sqlite3_aggregate_context = Module[\n          '_sqlite3_aggregate_context'\n        ] =\n          Module['asm']['sqlite3_aggregate_context']).apply(null, arguments);\n      });\n\n    var _sqlite3_get_auxdata = (Module['_sqlite3_get_auxdata'] = function () {\n      return (_sqlite3_get_auxdata = Module['_sqlite3_get_auxdata'] =\n        Module['asm']['sqlite3_get_auxdata']).apply(null, arguments);\n    });\n\n    var _sqlite3_set_auxdata = (Module['_sqlite3_set_auxdata'] = function () {\n      return (_sqlite3_set_auxdata = Module['_sqlite3_set_auxdata'] =\n        Module['asm']['sqlite3_set_auxdata']).apply(null, arguments);\n    });\n\n    var _sqlite3_column_count = (Module['_sqlite3_column_count'] = function () {\n      return (_sqlite3_column_count = Module['_sqlite3_column_count'] =\n        Module['asm']['sqlite3_column_count']).apply(null, arguments);\n    });\n\n    var _sqlite3_data_count = (Module['_sqlite3_data_count'] = function () {\n      return (_sqlite3_data_count = Module['_sqlite3_data_count'] =\n        Module['asm']['sqlite3_data_count']).apply(null, arguments);\n    });\n\n    var _sqlite3_column_blob = (Module['_sqlite3_column_blob'] = function () {\n      return (_sqlite3_column_blob = Module['_sqlite3_column_blob'] =\n        Module['asm']['sqlite3_column_blob']).apply(null, arguments);\n    });\n\n    var _sqlite3_column_bytes = (Module['_sqlite3_column_bytes'] = function () {\n      return (_sqlite3_column_bytes = Module['_sqlite3_column_bytes'] =\n        Module['asm']['sqlite3_column_bytes']).apply(null, arguments);\n    });\n\n    var _sqlite3_column_double = (Module['_sqlite3_column_double'] =\n      function () {\n        return (_sqlite3_column_double = Module['_sqlite3_column_double'] =\n          Module['asm']['sqlite3_column_double']).apply(null, arguments);\n      });\n\n    var _sqlite3_column_text = (Module['_sqlite3_column_text'] = function () {\n      return (_sqlite3_column_text = Module['_sqlite3_column_text'] =\n        Module['asm']['sqlite3_column_text']).apply(null, arguments);\n    });\n\n    var _sqlite3_column_value = (Module['_sqlite3_column_value'] = function () {\n      return (_sqlite3_column_value = Module['_sqlite3_column_value'] =\n        Module['asm']['sqlite3_column_value']).apply(null, arguments);\n    });\n\n    var _sqlite3_column_type = (Module['_sqlite3_column_type'] = function () {\n      return (_sqlite3_column_type = Module['_sqlite3_column_type'] =\n        Module['asm']['sqlite3_column_type']).apply(null, arguments);\n    });\n\n    var _sqlite3_column_name = (Module['_sqlite3_column_name'] = function () {\n      return (_sqlite3_column_name = Module['_sqlite3_column_name'] =\n        Module['asm']['sqlite3_column_name']).apply(null, arguments);\n    });\n\n    var _sqlite3_bind_blob = (Module['_sqlite3_bind_blob'] = function () {\n      return (_sqlite3_bind_blob = Module['_sqlite3_bind_blob'] =\n        Module['asm']['sqlite3_bind_blob']).apply(null, arguments);\n    });\n\n    var _sqlite3_bind_double = (Module['_sqlite3_bind_double'] = function () {\n      return (_sqlite3_bind_double = Module['_sqlite3_bind_double'] =\n        Module['asm']['sqlite3_bind_double']).apply(null, arguments);\n    });\n\n    var _sqlite3_bind_int = (Module['_sqlite3_bind_int'] = function () {\n      return (_sqlite3_bind_int = Module['_sqlite3_bind_int'] =\n        Module['asm']['sqlite3_bind_int']).apply(null, arguments);\n    });\n\n    var _sqlite3_bind_int64 = (Module['_sqlite3_bind_int64'] = function () {\n      return (_sqlite3_bind_int64 = Module['_sqlite3_bind_int64'] =\n        Module['asm']['sqlite3_bind_int64']).apply(null, arguments);\n    });\n\n    var _sqlite3_bind_null = (Module['_sqlite3_bind_null'] = function () {\n      return (_sqlite3_bind_null = Module['_sqlite3_bind_null'] =\n        Module['asm']['sqlite3_bind_null']).apply(null, arguments);\n    });\n\n    var _sqlite3_bind_pointer = (Module['_sqlite3_bind_pointer'] = function () {\n      return (_sqlite3_bind_pointer = Module['_sqlite3_bind_pointer'] =\n        Module['asm']['sqlite3_bind_pointer']).apply(null, arguments);\n    });\n\n    var _sqlite3_bind_text = (Module['_sqlite3_bind_text'] = function () {\n      return (_sqlite3_bind_text = Module['_sqlite3_bind_text'] =\n        Module['asm']['sqlite3_bind_text']).apply(null, arguments);\n    });\n\n    var _sqlite3_bind_parameter_count = (Module[\n      '_sqlite3_bind_parameter_count'\n    ] = function () {\n      return (_sqlite3_bind_parameter_count = Module[\n        '_sqlite3_bind_parameter_count'\n      ] =\n        Module['asm']['sqlite3_bind_parameter_count']).apply(null, arguments);\n    });\n\n    var _sqlite3_bind_parameter_index = (Module[\n      '_sqlite3_bind_parameter_index'\n    ] = function () {\n      return (_sqlite3_bind_parameter_index = Module[\n        '_sqlite3_bind_parameter_index'\n      ] =\n        Module['asm']['sqlite3_bind_parameter_index']).apply(null, arguments);\n    });\n\n    var _sqlite3_db_handle = (Module['_sqlite3_db_handle'] = function () {\n      return (_sqlite3_db_handle = Module['_sqlite3_db_handle'] =\n        Module['asm']['sqlite3_db_handle']).apply(null, arguments);\n    });\n\n    var _sqlite3_stmt_readonly = (Module['_sqlite3_stmt_readonly'] =\n      function () {\n        return (_sqlite3_stmt_readonly = Module['_sqlite3_stmt_readonly'] =\n          Module['asm']['sqlite3_stmt_readonly']).apply(null, arguments);\n      });\n\n    var _sqlite3_stmt_isexplain = (Module['_sqlite3_stmt_isexplain'] =\n      function () {\n        return (_sqlite3_stmt_isexplain = Module['_sqlite3_stmt_isexplain'] =\n          Module['asm']['sqlite3_stmt_isexplain']).apply(null, arguments);\n      });\n\n    var _sqlite3_stmt_status = (Module['_sqlite3_stmt_status'] = function () {\n      return (_sqlite3_stmt_status = Module['_sqlite3_stmt_status'] =\n        Module['asm']['sqlite3_stmt_status']).apply(null, arguments);\n    });\n\n    var _sqlite3_sql = (Module['_sqlite3_sql'] = function () {\n      return (_sqlite3_sql = Module['_sqlite3_sql'] =\n        Module['asm']['sqlite3_sql']).apply(null, arguments);\n    });\n\n    var _sqlite3_expanded_sql = (Module['_sqlite3_expanded_sql'] = function () {\n      return (_sqlite3_expanded_sql = Module['_sqlite3_expanded_sql'] =\n        Module['asm']['sqlite3_expanded_sql']).apply(null, arguments);\n    });\n\n    var _sqlite3_preupdate_old = (Module['_sqlite3_preupdate_old'] =\n      function () {\n        return (_sqlite3_preupdate_old = Module['_sqlite3_preupdate_old'] =\n          Module['asm']['sqlite3_preupdate_old']).apply(null, arguments);\n      });\n\n    var _sqlite3_preupdate_count = (Module['_sqlite3_preupdate_count'] =\n      function () {\n        return (_sqlite3_preupdate_count = Module['_sqlite3_preupdate_count'] =\n          Module['asm']['sqlite3_preupdate_count']).apply(null, arguments);\n      });\n\n    var _sqlite3_preupdate_depth = (Module['_sqlite3_preupdate_depth'] =\n      function () {\n        return (_sqlite3_preupdate_depth = Module['_sqlite3_preupdate_depth'] =\n          Module['asm']['sqlite3_preupdate_depth']).apply(null, arguments);\n      });\n\n    var _sqlite3_preupdate_blobwrite = (Module['_sqlite3_preupdate_blobwrite'] =\n      function () {\n        return (_sqlite3_preupdate_blobwrite = Module[\n          '_sqlite3_preupdate_blobwrite'\n        ] =\n          Module['asm']['sqlite3_preupdate_blobwrite']).apply(null, arguments);\n      });\n\n    var _sqlite3_preupdate_new = (Module['_sqlite3_preupdate_new'] =\n      function () {\n        return (_sqlite3_preupdate_new = Module['_sqlite3_preupdate_new'] =\n          Module['asm']['sqlite3_preupdate_new']).apply(null, arguments);\n      });\n\n    var _sqlite3_value_numeric_type = (Module['_sqlite3_value_numeric_type'] =\n      function () {\n        return (_sqlite3_value_numeric_type = Module[\n          '_sqlite3_value_numeric_type'\n        ] =\n          Module['asm']['sqlite3_value_numeric_type']).apply(null, arguments);\n      });\n\n    var _sqlite3_errmsg = (Module['_sqlite3_errmsg'] = function () {\n      return (_sqlite3_errmsg = Module['_sqlite3_errmsg'] =\n        Module['asm']['sqlite3_errmsg']).apply(null, arguments);\n    });\n\n    var _sqlite3_set_authorizer = (Module['_sqlite3_set_authorizer'] =\n      function () {\n        return (_sqlite3_set_authorizer = Module['_sqlite3_set_authorizer'] =\n          Module['asm']['sqlite3_set_authorizer']).apply(null, arguments);\n      });\n\n    var _sqlite3_strglob = (Module['_sqlite3_strglob'] = function () {\n      return (_sqlite3_strglob = Module['_sqlite3_strglob'] =\n        Module['asm']['sqlite3_strglob']).apply(null, arguments);\n    });\n\n    var _sqlite3_strlike = (Module['_sqlite3_strlike'] = function () {\n      return (_sqlite3_strlike = Module['_sqlite3_strlike'] =\n        Module['asm']['sqlite3_strlike']).apply(null, arguments);\n    });\n\n    var _sqlite3_exec = (Module['_sqlite3_exec'] = function () {\n      return (_sqlite3_exec = Module['_sqlite3_exec'] =\n        Module['asm']['sqlite3_exec']).apply(null, arguments);\n    });\n\n    var _sqlite3_auto_extension = (Module['_sqlite3_auto_extension'] =\n      function () {\n        return (_sqlite3_auto_extension = Module['_sqlite3_auto_extension'] =\n          Module['asm']['sqlite3_auto_extension']).apply(null, arguments);\n      });\n\n    var _sqlite3_cancel_auto_extension = (Module[\n      '_sqlite3_cancel_auto_extension'\n    ] = function () {\n      return (_sqlite3_cancel_auto_extension = Module[\n        '_sqlite3_cancel_auto_extension'\n      ] =\n        Module['asm']['sqlite3_cancel_auto_extension']).apply(null, arguments);\n    });\n\n    var _sqlite3_reset_auto_extension = (Module[\n      '_sqlite3_reset_auto_extension'\n    ] = function () {\n      return (_sqlite3_reset_auto_extension = Module[\n        '_sqlite3_reset_auto_extension'\n      ] =\n        Module['asm']['sqlite3_reset_auto_extension']).apply(null, arguments);\n    });\n\n    var _sqlite3_prepare_v3 = (Module['_sqlite3_prepare_v3'] = function () {\n      return (_sqlite3_prepare_v3 = Module['_sqlite3_prepare_v3'] =\n        Module['asm']['sqlite3_prepare_v3']).apply(null, arguments);\n    });\n\n    var _sqlite3_create_module = (Module['_sqlite3_create_module'] =\n      function () {\n        return (_sqlite3_create_module = Module['_sqlite3_create_module'] =\n          Module['asm']['sqlite3_create_module']).apply(null, arguments);\n      });\n\n    var _sqlite3_create_module_v2 = (Module['_sqlite3_create_module_v2'] =\n      function () {\n        return (_sqlite3_create_module_v2 = Module[\n          '_sqlite3_create_module_v2'\n        ] =\n          Module['asm']['sqlite3_create_module_v2']).apply(null, arguments);\n      });\n\n    var _sqlite3_drop_modules = (Module['_sqlite3_drop_modules'] = function () {\n      return (_sqlite3_drop_modules = Module['_sqlite3_drop_modules'] =\n        Module['asm']['sqlite3_drop_modules']).apply(null, arguments);\n    });\n\n    var _sqlite3_declare_vtab = (Module['_sqlite3_declare_vtab'] = function () {\n      return (_sqlite3_declare_vtab = Module['_sqlite3_declare_vtab'] =\n        Module['asm']['sqlite3_declare_vtab']).apply(null, arguments);\n    });\n\n    var _sqlite3_vtab_on_conflict = (Module['_sqlite3_vtab_on_conflict'] =\n      function () {\n        return (_sqlite3_vtab_on_conflict = Module[\n          '_sqlite3_vtab_on_conflict'\n        ] =\n          Module['asm']['sqlite3_vtab_on_conflict']).apply(null, arguments);\n      });\n\n    var _sqlite3_vtab_collation = (Module['_sqlite3_vtab_collation'] =\n      function () {\n        return (_sqlite3_vtab_collation = Module['_sqlite3_vtab_collation'] =\n          Module['asm']['sqlite3_vtab_collation']).apply(null, arguments);\n      });\n\n    var _sqlite3_vtab_in = (Module['_sqlite3_vtab_in'] = function () {\n      return (_sqlite3_vtab_in = Module['_sqlite3_vtab_in'] =\n        Module['asm']['sqlite3_vtab_in']).apply(null, arguments);\n    });\n\n    var _sqlite3_vtab_rhs_value = (Module['_sqlite3_vtab_rhs_value'] =\n      function () {\n        return (_sqlite3_vtab_rhs_value = Module['_sqlite3_vtab_rhs_value'] =\n          Module['asm']['sqlite3_vtab_rhs_value']).apply(null, arguments);\n      });\n\n    var _sqlite3_vtab_distinct = (Module['_sqlite3_vtab_distinct'] =\n      function () {\n        return (_sqlite3_vtab_distinct = Module['_sqlite3_vtab_distinct'] =\n          Module['asm']['sqlite3_vtab_distinct']).apply(null, arguments);\n      });\n\n    var _sqlite3_keyword_name = (Module['_sqlite3_keyword_name'] = function () {\n      return (_sqlite3_keyword_name = Module['_sqlite3_keyword_name'] =\n        Module['asm']['sqlite3_keyword_name']).apply(null, arguments);\n    });\n\n    var _sqlite3_keyword_count = (Module['_sqlite3_keyword_count'] =\n      function () {\n        return (_sqlite3_keyword_count = Module['_sqlite3_keyword_count'] =\n          Module['asm']['sqlite3_keyword_count']).apply(null, arguments);\n      });\n\n    var _sqlite3_keyword_check = (Module['_sqlite3_keyword_check'] =\n      function () {\n        return (_sqlite3_keyword_check = Module['_sqlite3_keyword_check'] =\n          Module['asm']['sqlite3_keyword_check']).apply(null, arguments);\n      });\n\n    var _sqlite3_complete = (Module['_sqlite3_complete'] = function () {\n      return (_sqlite3_complete = Module['_sqlite3_complete'] =\n        Module['asm']['sqlite3_complete']).apply(null, arguments);\n    });\n\n    var _sqlite3_libversion = (Module['_sqlite3_libversion'] = function () {\n      return (_sqlite3_libversion = Module['_sqlite3_libversion'] =\n        Module['asm']['sqlite3_libversion']).apply(null, arguments);\n    });\n\n    var _sqlite3_libversion_number = (Module['_sqlite3_libversion_number'] =\n      function () {\n        return (_sqlite3_libversion_number = Module[\n          '_sqlite3_libversion_number'\n        ] =\n          Module['asm']['sqlite3_libversion_number']).apply(null, arguments);\n      });\n\n    var _sqlite3_shutdown = (Module['_sqlite3_shutdown'] = function () {\n      return (_sqlite3_shutdown = Module['_sqlite3_shutdown'] =\n        Module['asm']['sqlite3_shutdown']).apply(null, arguments);\n    });\n\n    var _sqlite3_last_insert_rowid = (Module['_sqlite3_last_insert_rowid'] =\n      function () {\n        return (_sqlite3_last_insert_rowid = Module[\n          '_sqlite3_last_insert_rowid'\n        ] =\n          Module['asm']['sqlite3_last_insert_rowid']).apply(null, arguments);\n      });\n\n    var _sqlite3_set_last_insert_rowid = (Module[\n      '_sqlite3_set_last_insert_rowid'\n    ] = function () {\n      return (_sqlite3_set_last_insert_rowid = Module[\n        '_sqlite3_set_last_insert_rowid'\n      ] =\n        Module['asm']['sqlite3_set_last_insert_rowid']).apply(null, arguments);\n    });\n\n    var _sqlite3_changes64 = (Module['_sqlite3_changes64'] = function () {\n      return (_sqlite3_changes64 = Module['_sqlite3_changes64'] =\n        Module['asm']['sqlite3_changes64']).apply(null, arguments);\n    });\n\n    var _sqlite3_changes = (Module['_sqlite3_changes'] = function () {\n      return (_sqlite3_changes = Module['_sqlite3_changes'] =\n        Module['asm']['sqlite3_changes']).apply(null, arguments);\n    });\n\n    var _sqlite3_total_changes64 = (Module['_sqlite3_total_changes64'] =\n      function () {\n        return (_sqlite3_total_changes64 = Module['_sqlite3_total_changes64'] =\n          Module['asm']['sqlite3_total_changes64']).apply(null, arguments);\n      });\n\n    var _sqlite3_total_changes = (Module['_sqlite3_total_changes'] =\n      function () {\n        return (_sqlite3_total_changes = Module['_sqlite3_total_changes'] =\n          Module['asm']['sqlite3_total_changes']).apply(null, arguments);\n      });\n\n    var _sqlite3_txn_state = (Module['_sqlite3_txn_state'] = function () {\n      return (_sqlite3_txn_state = Module['_sqlite3_txn_state'] =\n        Module['asm']['sqlite3_txn_state']).apply(null, arguments);\n    });\n\n    var _sqlite3_close_v2 = (Module['_sqlite3_close_v2'] = function () {\n      return (_sqlite3_close_v2 = Module['_sqlite3_close_v2'] =\n        Module['asm']['sqlite3_close_v2']).apply(null, arguments);\n    });\n\n    var _sqlite3_busy_handler = (Module['_sqlite3_busy_handler'] = function () {\n      return (_sqlite3_busy_handler = Module['_sqlite3_busy_handler'] =\n        Module['asm']['sqlite3_busy_handler']).apply(null, arguments);\n    });\n\n    var _sqlite3_progress_handler = (Module['_sqlite3_progress_handler'] =\n      function () {\n        return (_sqlite3_progress_handler = Module[\n          '_sqlite3_progress_handler'\n        ] =\n          Module['asm']['sqlite3_progress_handler']).apply(null, arguments);\n      });\n\n    var _sqlite3_busy_timeout = (Module['_sqlite3_busy_timeout'] = function () {\n      return (_sqlite3_busy_timeout = Module['_sqlite3_busy_timeout'] =\n        Module['asm']['sqlite3_busy_timeout']).apply(null, arguments);\n    });\n\n    var _sqlite3_create_function = (Module['_sqlite3_create_function'] =\n      function () {\n        return (_sqlite3_create_function = Module['_sqlite3_create_function'] =\n          Module['asm']['sqlite3_create_function']).apply(null, arguments);\n      });\n\n    var _sqlite3_create_function_v2 = (Module['_sqlite3_create_function_v2'] =\n      function () {\n        return (_sqlite3_create_function_v2 = Module[\n          '_sqlite3_create_function_v2'\n        ] =\n          Module['asm']['sqlite3_create_function_v2']).apply(null, arguments);\n      });\n\n    var _sqlite3_create_window_function = (Module[\n      '_sqlite3_create_window_function'\n    ] = function () {\n      return (_sqlite3_create_window_function = Module[\n        '_sqlite3_create_window_function'\n      ] =\n        Module['asm']['sqlite3_create_window_function']).apply(null, arguments);\n    });\n\n    var _sqlite3_overload_function = (Module['_sqlite3_overload_function'] =\n      function () {\n        return (_sqlite3_overload_function = Module[\n          '_sqlite3_overload_function'\n        ] =\n          Module['asm']['sqlite3_overload_function']).apply(null, arguments);\n      });\n\n    var _sqlite3_trace_v2 = (Module['_sqlite3_trace_v2'] = function () {\n      return (_sqlite3_trace_v2 = Module['_sqlite3_trace_v2'] =\n        Module['asm']['sqlite3_trace_v2']).apply(null, arguments);\n    });\n\n    var _sqlite3_commit_hook = (Module['_sqlite3_commit_hook'] = function () {\n      return (_sqlite3_commit_hook = Module['_sqlite3_commit_hook'] =\n        Module['asm']['sqlite3_commit_hook']).apply(null, arguments);\n    });\n\n    var _sqlite3_update_hook = (Module['_sqlite3_update_hook'] = function () {\n      return (_sqlite3_update_hook = Module['_sqlite3_update_hook'] =\n        Module['asm']['sqlite3_update_hook']).apply(null, arguments);\n    });\n\n    var _sqlite3_rollback_hook = (Module['_sqlite3_rollback_hook'] =\n      function () {\n        return (_sqlite3_rollback_hook = Module['_sqlite3_rollback_hook'] =\n          Module['asm']['sqlite3_rollback_hook']).apply(null, arguments);\n      });\n\n    var _sqlite3_preupdate_hook = (Module['_sqlite3_preupdate_hook'] =\n      function () {\n        return (_sqlite3_preupdate_hook = Module['_sqlite3_preupdate_hook'] =\n          Module['asm']['sqlite3_preupdate_hook']).apply(null, arguments);\n      });\n\n    var _sqlite3_error_offset = (Module['_sqlite3_error_offset'] = function () {\n      return (_sqlite3_error_offset = Module['_sqlite3_error_offset'] =\n        Module['asm']['sqlite3_error_offset']).apply(null, arguments);\n    });\n\n    var _sqlite3_errcode = (Module['_sqlite3_errcode'] = function () {\n      return (_sqlite3_errcode = Module['_sqlite3_errcode'] =\n        Module['asm']['sqlite3_errcode']).apply(null, arguments);\n    });\n\n    var _sqlite3_extended_errcode = (Module['_sqlite3_extended_errcode'] =\n      function () {\n        return (_sqlite3_extended_errcode = Module[\n          '_sqlite3_extended_errcode'\n        ] =\n          Module['asm']['sqlite3_extended_errcode']).apply(null, arguments);\n      });\n\n    var _sqlite3_errstr = (Module['_sqlite3_errstr'] = function () {\n      return (_sqlite3_errstr = Module['_sqlite3_errstr'] =\n        Module['asm']['sqlite3_errstr']).apply(null, arguments);\n    });\n\n    var _sqlite3_limit = (Module['_sqlite3_limit'] = function () {\n      return (_sqlite3_limit = Module['_sqlite3_limit'] =\n        Module['asm']['sqlite3_limit']).apply(null, arguments);\n    });\n\n    var _sqlite3_open = (Module['_sqlite3_open'] = function () {\n      return (_sqlite3_open = Module['_sqlite3_open'] =\n        Module['asm']['sqlite3_open']).apply(null, arguments);\n    });\n\n    var _sqlite3_open_v2 = (Module['_sqlite3_open_v2'] = function () {\n      return (_sqlite3_open_v2 = Module['_sqlite3_open_v2'] =\n        Module['asm']['sqlite3_open_v2']).apply(null, arguments);\n    });\n\n    var _sqlite3_create_collation = (Module['_sqlite3_create_collation'] =\n      function () {\n        return (_sqlite3_create_collation = Module[\n          '_sqlite3_create_collation'\n        ] =\n          Module['asm']['sqlite3_create_collation']).apply(null, arguments);\n      });\n\n    var _sqlite3_create_collation_v2 = (Module['_sqlite3_create_collation_v2'] =\n      function () {\n        return (_sqlite3_create_collation_v2 = Module[\n          '_sqlite3_create_collation_v2'\n        ] =\n          Module['asm']['sqlite3_create_collation_v2']).apply(null, arguments);\n      });\n\n    var _sqlite3_collation_needed = (Module['_sqlite3_collation_needed'] =\n      function () {\n        return (_sqlite3_collation_needed = Module[\n          '_sqlite3_collation_needed'\n        ] =\n          Module['asm']['sqlite3_collation_needed']).apply(null, arguments);\n      });\n\n    var _sqlite3_table_column_metadata = (Module[\n      '_sqlite3_table_column_metadata'\n    ] = function () {\n      return (_sqlite3_table_column_metadata = Module[\n        '_sqlite3_table_column_metadata'\n      ] =\n        Module['asm']['sqlite3_table_column_metadata']).apply(null, arguments);\n    });\n\n    var _sqlite3_extended_result_codes = (Module[\n      '_sqlite3_extended_result_codes'\n    ] = function () {\n      return (_sqlite3_extended_result_codes = Module[\n        '_sqlite3_extended_result_codes'\n      ] =\n        Module['asm']['sqlite3_extended_result_codes']).apply(null, arguments);\n    });\n\n    var _sqlite3_uri_key = (Module['_sqlite3_uri_key'] = function () {\n      return (_sqlite3_uri_key = Module['_sqlite3_uri_key'] =\n        Module['asm']['sqlite3_uri_key']).apply(null, arguments);\n    });\n\n    var _sqlite3_uri_int64 = (Module['_sqlite3_uri_int64'] = function () {\n      return (_sqlite3_uri_int64 = Module['_sqlite3_uri_int64'] =\n        Module['asm']['sqlite3_uri_int64']).apply(null, arguments);\n    });\n\n    var _sqlite3_db_name = (Module['_sqlite3_db_name'] = function () {\n      return (_sqlite3_db_name = Module['_sqlite3_db_name'] =\n        Module['asm']['sqlite3_db_name']).apply(null, arguments);\n    });\n\n    var _sqlite3_db_filename = (Module['_sqlite3_db_filename'] = function () {\n      return (_sqlite3_db_filename = Module['_sqlite3_db_filename'] =\n        Module['asm']['sqlite3_db_filename']).apply(null, arguments);\n    });\n\n    var _sqlite3_compileoption_used = (Module['_sqlite3_compileoption_used'] =\n      function () {\n        return (_sqlite3_compileoption_used = Module[\n          '_sqlite3_compileoption_used'\n        ] =\n          Module['asm']['sqlite3_compileoption_used']).apply(null, arguments);\n      });\n\n    var _sqlite3_compileoption_get = (Module['_sqlite3_compileoption_get'] =\n      function () {\n        return (_sqlite3_compileoption_get = Module[\n          '_sqlite3_compileoption_get'\n        ] =\n          Module['asm']['sqlite3_compileoption_get']).apply(null, arguments);\n      });\n\n    var _sqlite3session_diff = (Module['_sqlite3session_diff'] = function () {\n      return (_sqlite3session_diff = Module['_sqlite3session_diff'] =\n        Module['asm']['sqlite3session_diff']).apply(null, arguments);\n    });\n\n    var _sqlite3session_attach = (Module['_sqlite3session_attach'] =\n      function () {\n        return (_sqlite3session_attach = Module['_sqlite3session_attach'] =\n          Module['asm']['sqlite3session_attach']).apply(null, arguments);\n      });\n\n    var _sqlite3session_create = (Module['_sqlite3session_create'] =\n      function () {\n        return (_sqlite3session_create = Module['_sqlite3session_create'] =\n          Module['asm']['sqlite3session_create']).apply(null, arguments);\n      });\n\n    var _sqlite3session_delete = (Module['_sqlite3session_delete'] =\n      function () {\n        return (_sqlite3session_delete = Module['_sqlite3session_delete'] =\n          Module['asm']['sqlite3session_delete']).apply(null, arguments);\n      });\n\n    var _sqlite3session_table_filter = (Module['_sqlite3session_table_filter'] =\n      function () {\n        return (_sqlite3session_table_filter = Module[\n          '_sqlite3session_table_filter'\n        ] =\n          Module['asm']['sqlite3session_table_filter']).apply(null, arguments);\n      });\n\n    var _sqlite3session_changeset = (Module['_sqlite3session_changeset'] =\n      function () {\n        return (_sqlite3session_changeset = Module[\n          '_sqlite3session_changeset'\n        ] =\n          Module['asm']['sqlite3session_changeset']).apply(null, arguments);\n      });\n\n    var _sqlite3session_changeset_strm = (Module[\n      '_sqlite3session_changeset_strm'\n    ] = function () {\n      return (_sqlite3session_changeset_strm = Module[\n        '_sqlite3session_changeset_strm'\n      ] =\n        Module['asm']['sqlite3session_changeset_strm']).apply(null, arguments);\n    });\n\n    var _sqlite3session_patchset_strm = (Module[\n      '_sqlite3session_patchset_strm'\n    ] = function () {\n      return (_sqlite3session_patchset_strm = Module[\n        '_sqlite3session_patchset_strm'\n      ] =\n        Module['asm']['sqlite3session_patchset_strm']).apply(null, arguments);\n    });\n\n    var _sqlite3session_patchset = (Module['_sqlite3session_patchset'] =\n      function () {\n        return (_sqlite3session_patchset = Module['_sqlite3session_patchset'] =\n          Module['asm']['sqlite3session_patchset']).apply(null, arguments);\n      });\n\n    var _sqlite3session_enable = (Module['_sqlite3session_enable'] =\n      function () {\n        return (_sqlite3session_enable = Module['_sqlite3session_enable'] =\n          Module['asm']['sqlite3session_enable']).apply(null, arguments);\n      });\n\n    var _sqlite3session_indirect = (Module['_sqlite3session_indirect'] =\n      function () {\n        return (_sqlite3session_indirect = Module['_sqlite3session_indirect'] =\n          Module['asm']['sqlite3session_indirect']).apply(null, arguments);\n      });\n\n    var _sqlite3session_isempty = (Module['_sqlite3session_isempty'] =\n      function () {\n        return (_sqlite3session_isempty = Module['_sqlite3session_isempty'] =\n          Module['asm']['sqlite3session_isempty']).apply(null, arguments);\n      });\n\n    var _sqlite3session_memory_used = (Module['_sqlite3session_memory_used'] =\n      function () {\n        return (_sqlite3session_memory_used = Module[\n          '_sqlite3session_memory_used'\n        ] =\n          Module['asm']['sqlite3session_memory_used']).apply(null, arguments);\n      });\n\n    var _sqlite3session_object_config = (Module[\n      '_sqlite3session_object_config'\n    ] = function () {\n      return (_sqlite3session_object_config = Module[\n        '_sqlite3session_object_config'\n      ] =\n        Module['asm']['sqlite3session_object_config']).apply(null, arguments);\n    });\n\n    var _sqlite3session_changeset_size = (Module[\n      '_sqlite3session_changeset_size'\n    ] = function () {\n      return (_sqlite3session_changeset_size = Module[\n        '_sqlite3session_changeset_size'\n      ] =\n        Module['asm']['sqlite3session_changeset_size']).apply(null, arguments);\n    });\n\n    var _sqlite3changeset_start = (Module['_sqlite3changeset_start'] =\n      function () {\n        return (_sqlite3changeset_start = Module['_sqlite3changeset_start'] =\n          Module['asm']['sqlite3changeset_start']).apply(null, arguments);\n      });\n\n    var _sqlite3changeset_start_v2 = (Module['_sqlite3changeset_start_v2'] =\n      function () {\n        return (_sqlite3changeset_start_v2 = Module[\n          '_sqlite3changeset_start_v2'\n        ] =\n          Module['asm']['sqlite3changeset_start_v2']).apply(null, arguments);\n      });\n\n    var _sqlite3changeset_start_strm = (Module['_sqlite3changeset_start_strm'] =\n      function () {\n        return (_sqlite3changeset_start_strm = Module[\n          '_sqlite3changeset_start_strm'\n        ] =\n          Module['asm']['sqlite3changeset_start_strm']).apply(null, arguments);\n      });\n\n    var _sqlite3changeset_start_v2_strm = (Module[\n      '_sqlite3changeset_start_v2_strm'\n    ] = function () {\n      return (_sqlite3changeset_start_v2_strm = Module[\n        '_sqlite3changeset_start_v2_strm'\n      ] =\n        Module['asm']['sqlite3changeset_start_v2_strm']).apply(null, arguments);\n    });\n\n    var _sqlite3changeset_next = (Module['_sqlite3changeset_next'] =\n      function () {\n        return (_sqlite3changeset_next = Module['_sqlite3changeset_next'] =\n          Module['asm']['sqlite3changeset_next']).apply(null, arguments);\n      });\n\n    var _sqlite3changeset_op = (Module['_sqlite3changeset_op'] = function () {\n      return (_sqlite3changeset_op = Module['_sqlite3changeset_op'] =\n        Module['asm']['sqlite3changeset_op']).apply(null, arguments);\n    });\n\n    var _sqlite3changeset_pk = (Module['_sqlite3changeset_pk'] = function () {\n      return (_sqlite3changeset_pk = Module['_sqlite3changeset_pk'] =\n        Module['asm']['sqlite3changeset_pk']).apply(null, arguments);\n    });\n\n    var _sqlite3changeset_old = (Module['_sqlite3changeset_old'] = function () {\n      return (_sqlite3changeset_old = Module['_sqlite3changeset_old'] =\n        Module['asm']['sqlite3changeset_old']).apply(null, arguments);\n    });\n\n    var _sqlite3changeset_new = (Module['_sqlite3changeset_new'] = function () {\n      return (_sqlite3changeset_new = Module['_sqlite3changeset_new'] =\n        Module['asm']['sqlite3changeset_new']).apply(null, arguments);\n    });\n\n    var _sqlite3changeset_conflict = (Module['_sqlite3changeset_conflict'] =\n      function () {\n        return (_sqlite3changeset_conflict = Module[\n          '_sqlite3changeset_conflict'\n        ] =\n          Module['asm']['sqlite3changeset_conflict']).apply(null, arguments);\n      });\n\n    var _sqlite3changeset_fk_conflicts = (Module[\n      '_sqlite3changeset_fk_conflicts'\n    ] = function () {\n      return (_sqlite3changeset_fk_conflicts = Module[\n        '_sqlite3changeset_fk_conflicts'\n      ] =\n        Module['asm']['sqlite3changeset_fk_conflicts']).apply(null, arguments);\n    });\n\n    var _sqlite3changeset_finalize = (Module['_sqlite3changeset_finalize'] =\n      function () {\n        return (_sqlite3changeset_finalize = Module[\n          '_sqlite3changeset_finalize'\n        ] =\n          Module['asm']['sqlite3changeset_finalize']).apply(null, arguments);\n      });\n\n    var _sqlite3changeset_invert = (Module['_sqlite3changeset_invert'] =\n      function () {\n        return (_sqlite3changeset_invert = Module['_sqlite3changeset_invert'] =\n          Module['asm']['sqlite3changeset_invert']).apply(null, arguments);\n      });\n\n    var _sqlite3changeset_invert_strm = (Module[\n      '_sqlite3changeset_invert_strm'\n    ] = function () {\n      return (_sqlite3changeset_invert_strm = Module[\n        '_sqlite3changeset_invert_strm'\n      ] =\n        Module['asm']['sqlite3changeset_invert_strm']).apply(null, arguments);\n    });\n\n    var _sqlite3changeset_apply_v2 = (Module['_sqlite3changeset_apply_v2'] =\n      function () {\n        return (_sqlite3changeset_apply_v2 = Module[\n          '_sqlite3changeset_apply_v2'\n        ] =\n          Module['asm']['sqlite3changeset_apply_v2']).apply(null, arguments);\n      });\n\n    var _sqlite3changeset_apply = (Module['_sqlite3changeset_apply'] =\n      function () {\n        return (_sqlite3changeset_apply = Module['_sqlite3changeset_apply'] =\n          Module['asm']['sqlite3changeset_apply']).apply(null, arguments);\n      });\n\n    var _sqlite3changeset_apply_v2_strm = (Module[\n      '_sqlite3changeset_apply_v2_strm'\n    ] = function () {\n      return (_sqlite3changeset_apply_v2_strm = Module[\n        '_sqlite3changeset_apply_v2_strm'\n      ] =\n        Module['asm']['sqlite3changeset_apply_v2_strm']).apply(null, arguments);\n    });\n\n    var _sqlite3changeset_apply_strm = (Module['_sqlite3changeset_apply_strm'] =\n      function () {\n        return (_sqlite3changeset_apply_strm = Module[\n          '_sqlite3changeset_apply_strm'\n        ] =\n          Module['asm']['sqlite3changeset_apply_strm']).apply(null, arguments);\n      });\n\n    var _sqlite3changegroup_new = (Module['_sqlite3changegroup_new'] =\n      function () {\n        return (_sqlite3changegroup_new = Module['_sqlite3changegroup_new'] =\n          Module['asm']['sqlite3changegroup_new']).apply(null, arguments);\n      });\n\n    var _sqlite3changegroup_add = (Module['_sqlite3changegroup_add'] =\n      function () {\n        return (_sqlite3changegroup_add = Module['_sqlite3changegroup_add'] =\n          Module['asm']['sqlite3changegroup_add']).apply(null, arguments);\n      });\n\n    var _sqlite3changegroup_output = (Module['_sqlite3changegroup_output'] =\n      function () {\n        return (_sqlite3changegroup_output = Module[\n          '_sqlite3changegroup_output'\n        ] =\n          Module['asm']['sqlite3changegroup_output']).apply(null, arguments);\n      });\n\n    var _sqlite3changegroup_add_strm = (Module['_sqlite3changegroup_add_strm'] =\n      function () {\n        return (_sqlite3changegroup_add_strm = Module[\n          '_sqlite3changegroup_add_strm'\n        ] =\n          Module['asm']['sqlite3changegroup_add_strm']).apply(null, arguments);\n      });\n\n    var _sqlite3changegroup_output_strm = (Module[\n      '_sqlite3changegroup_output_strm'\n    ] = function () {\n      return (_sqlite3changegroup_output_strm = Module[\n        '_sqlite3changegroup_output_strm'\n      ] =\n        Module['asm']['sqlite3changegroup_output_strm']).apply(null, arguments);\n    });\n\n    var _sqlite3changegroup_delete = (Module['_sqlite3changegroup_delete'] =\n      function () {\n        return (_sqlite3changegroup_delete = Module[\n          '_sqlite3changegroup_delete'\n        ] =\n          Module['asm']['sqlite3changegroup_delete']).apply(null, arguments);\n      });\n\n    var _sqlite3changeset_concat = (Module['_sqlite3changeset_concat'] =\n      function () {\n        return (_sqlite3changeset_concat = Module['_sqlite3changeset_concat'] =\n          Module['asm']['sqlite3changeset_concat']).apply(null, arguments);\n      });\n\n    var _sqlite3changeset_concat_strm = (Module[\n      '_sqlite3changeset_concat_strm'\n    ] = function () {\n      return (_sqlite3changeset_concat_strm = Module[\n        '_sqlite3changeset_concat_strm'\n      ] =\n        Module['asm']['sqlite3changeset_concat_strm']).apply(null, arguments);\n    });\n\n    var _sqlite3session_config = (Module['_sqlite3session_config'] =\n      function () {\n        return (_sqlite3session_config = Module['_sqlite3session_config'] =\n          Module['asm']['sqlite3session_config']).apply(null, arguments);\n      });\n\n    var _sqlite3_sourceid = (Module['_sqlite3_sourceid'] = function () {\n      return (_sqlite3_sourceid = Module['_sqlite3_sourceid'] =\n        Module['asm']['sqlite3_sourceid']).apply(null, arguments);\n    });\n\n    var _sqlite3_wasm_pstack_ptr = (Module['_sqlite3_wasm_pstack_ptr'] =\n      function () {\n        return (_sqlite3_wasm_pstack_ptr = Module['_sqlite3_wasm_pstack_ptr'] =\n          Module['asm']['sqlite3_wasm_pstack_ptr']).apply(null, arguments);\n      });\n\n    var _sqlite3_wasm_pstack_restore = (Module['_sqlite3_wasm_pstack_restore'] =\n      function () {\n        return (_sqlite3_wasm_pstack_restore = Module[\n          '_sqlite3_wasm_pstack_restore'\n        ] =\n          Module['asm']['sqlite3_wasm_pstack_restore']).apply(null, arguments);\n      });\n\n    var _sqlite3_wasm_pstack_alloc = (Module['_sqlite3_wasm_pstack_alloc'] =\n      function () {\n        return (_sqlite3_wasm_pstack_alloc = Module[\n          '_sqlite3_wasm_pstack_alloc'\n        ] =\n          Module['asm']['sqlite3_wasm_pstack_alloc']).apply(null, arguments);\n      });\n\n    var _sqlite3_wasm_pstack_remaining = (Module[\n      '_sqlite3_wasm_pstack_remaining'\n    ] = function () {\n      return (_sqlite3_wasm_pstack_remaining = Module[\n        '_sqlite3_wasm_pstack_remaining'\n      ] =\n        Module['asm']['sqlite3_wasm_pstack_remaining']).apply(null, arguments);\n    });\n\n    var _sqlite3_wasm_pstack_quota = (Module['_sqlite3_wasm_pstack_quota'] =\n      function () {\n        return (_sqlite3_wasm_pstack_quota = Module[\n          '_sqlite3_wasm_pstack_quota'\n        ] =\n          Module['asm']['sqlite3_wasm_pstack_quota']).apply(null, arguments);\n      });\n\n    var _sqlite3_wasm_db_error = (Module['_sqlite3_wasm_db_error'] =\n      function () {\n        return (_sqlite3_wasm_db_error = Module['_sqlite3_wasm_db_error'] =\n          Module['asm']['sqlite3_wasm_db_error']).apply(null, arguments);\n      });\n\n    var _sqlite3_wasm_test_struct = (Module['_sqlite3_wasm_test_struct'] =\n      function () {\n        return (_sqlite3_wasm_test_struct = Module[\n          '_sqlite3_wasm_test_struct'\n        ] =\n          Module['asm']['sqlite3_wasm_test_struct']).apply(null, arguments);\n      });\n\n    var _sqlite3_wasm_enum_json = (Module['_sqlite3_wasm_enum_json'] =\n      function () {\n        return (_sqlite3_wasm_enum_json = Module['_sqlite3_wasm_enum_json'] =\n          Module['asm']['sqlite3_wasm_enum_json']).apply(null, arguments);\n      });\n\n    var _sqlite3_wasm_vfs_unlink = (Module['_sqlite3_wasm_vfs_unlink'] =\n      function () {\n        return (_sqlite3_wasm_vfs_unlink = Module['_sqlite3_wasm_vfs_unlink'] =\n          Module['asm']['sqlite3_wasm_vfs_unlink']).apply(null, arguments);\n      });\n\n    var _sqlite3_wasm_db_vfs = (Module['_sqlite3_wasm_db_vfs'] = function () {\n      return (_sqlite3_wasm_db_vfs = Module['_sqlite3_wasm_db_vfs'] =\n        Module['asm']['sqlite3_wasm_db_vfs']).apply(null, arguments);\n    });\n\n    var _sqlite3_wasm_db_reset = (Module['_sqlite3_wasm_db_reset'] =\n      function () {\n        return (_sqlite3_wasm_db_reset = Module['_sqlite3_wasm_db_reset'] =\n          Module['asm']['sqlite3_wasm_db_reset']).apply(null, arguments);\n      });\n\n    var _sqlite3_wasm_db_export_chunked = (Module[\n      '_sqlite3_wasm_db_export_chunked'\n    ] = function () {\n      return (_sqlite3_wasm_db_export_chunked = Module[\n        '_sqlite3_wasm_db_export_chunked'\n      ] =\n        Module['asm']['sqlite3_wasm_db_export_chunked']).apply(null, arguments);\n    });\n\n    var _sqlite3_wasm_db_serialize = (Module['_sqlite3_wasm_db_serialize'] =\n      function () {\n        return (_sqlite3_wasm_db_serialize = Module[\n          '_sqlite3_wasm_db_serialize'\n        ] =\n          Module['asm']['sqlite3_wasm_db_serialize']).apply(null, arguments);\n      });\n\n    var _sqlite3_wasm_vfs_create_file = (Module[\n      '_sqlite3_wasm_vfs_create_file'\n    ] = function () {\n      return (_sqlite3_wasm_vfs_create_file = Module[\n        '_sqlite3_wasm_vfs_create_file'\n      ] =\n        Module['asm']['sqlite3_wasm_vfs_create_file']).apply(null, arguments);\n    });\n\n    var _sqlite3_wasm_kvvfsMakeKeyOnPstack = (Module[\n      '_sqlite3_wasm_kvvfsMakeKeyOnPstack'\n    ] = function () {\n      return (_sqlite3_wasm_kvvfsMakeKeyOnPstack = Module[\n        '_sqlite3_wasm_kvvfsMakeKeyOnPstack'\n      ] =\n        Module['asm']['sqlite3_wasm_kvvfsMakeKeyOnPstack']).apply(\n        null,\n        arguments,\n      );\n    });\n\n    var _sqlite3_wasm_kvvfs_methods = (Module['_sqlite3_wasm_kvvfs_methods'] =\n      function () {\n        return (_sqlite3_wasm_kvvfs_methods = Module[\n          '_sqlite3_wasm_kvvfs_methods'\n        ] =\n          Module['asm']['sqlite3_wasm_kvvfs_methods']).apply(null, arguments);\n      });\n\n    var _sqlite3_wasm_vtab_config = (Module['_sqlite3_wasm_vtab_config'] =\n      function () {\n        return (_sqlite3_wasm_vtab_config = Module[\n          '_sqlite3_wasm_vtab_config'\n        ] =\n          Module['asm']['sqlite3_wasm_vtab_config']).apply(null, arguments);\n      });\n\n    var _sqlite3_wasm_db_config_ip = (Module['_sqlite3_wasm_db_config_ip'] =\n      function () {\n        return (_sqlite3_wasm_db_config_ip = Module[\n          '_sqlite3_wasm_db_config_ip'\n        ] =\n          Module['asm']['sqlite3_wasm_db_config_ip']).apply(null, arguments);\n      });\n\n    var _sqlite3_wasm_db_config_pii = (Module['_sqlite3_wasm_db_config_pii'] =\n      function () {\n        return (_sqlite3_wasm_db_config_pii = Module[\n          '_sqlite3_wasm_db_config_pii'\n        ] =\n          Module['asm']['sqlite3_wasm_db_config_pii']).apply(null, arguments);\n      });\n\n    var _sqlite3_wasm_db_config_s = (Module['_sqlite3_wasm_db_config_s'] =\n      function () {\n        return (_sqlite3_wasm_db_config_s = Module[\n          '_sqlite3_wasm_db_config_s'\n        ] =\n          Module['asm']['sqlite3_wasm_db_config_s']).apply(null, arguments);\n      });\n\n    var _sqlite3_wasm_config_i = (Module['_sqlite3_wasm_config_i'] =\n      function () {\n        return (_sqlite3_wasm_config_i = Module['_sqlite3_wasm_config_i'] =\n          Module['asm']['sqlite3_wasm_config_i']).apply(null, arguments);\n      });\n\n    var _sqlite3_wasm_config_ii = (Module['_sqlite3_wasm_config_ii'] =\n      function () {\n        return (_sqlite3_wasm_config_ii = Module['_sqlite3_wasm_config_ii'] =\n          Module['asm']['sqlite3_wasm_config_ii']).apply(null, arguments);\n      });\n\n    var _sqlite3_wasm_config_j = (Module['_sqlite3_wasm_config_j'] =\n      function () {\n        return (_sqlite3_wasm_config_j = Module['_sqlite3_wasm_config_j'] =\n          Module['asm']['sqlite3_wasm_config_j']).apply(null, arguments);\n      });\n\n    var _sqlite3_wasm_init_wasmfs = (Module['_sqlite3_wasm_init_wasmfs'] =\n      function () {\n        return (_sqlite3_wasm_init_wasmfs = Module[\n          '_sqlite3_wasm_init_wasmfs'\n        ] =\n          Module['asm']['sqlite3_wasm_init_wasmfs']).apply(null, arguments);\n      });\n\n    var _sqlite3_wasm_test_intptr = (Module['_sqlite3_wasm_test_intptr'] =\n      function () {\n        return (_sqlite3_wasm_test_intptr = Module[\n          '_sqlite3_wasm_test_intptr'\n        ] =\n          Module['asm']['sqlite3_wasm_test_intptr']).apply(null, arguments);\n      });\n\n    var _sqlite3_wasm_test_voidptr = (Module['_sqlite3_wasm_test_voidptr'] =\n      function () {\n        return (_sqlite3_wasm_test_voidptr = Module[\n          '_sqlite3_wasm_test_voidptr'\n        ] =\n          Module['asm']['sqlite3_wasm_test_voidptr']).apply(null, arguments);\n      });\n\n    var _sqlite3_wasm_test_int64_max = (Module['_sqlite3_wasm_test_int64_max'] =\n      function () {\n        return (_sqlite3_wasm_test_int64_max = Module[\n          '_sqlite3_wasm_test_int64_max'\n        ] =\n          Module['asm']['sqlite3_wasm_test_int64_max']).apply(null, arguments);\n      });\n\n    var _sqlite3_wasm_test_int64_min = (Module['_sqlite3_wasm_test_int64_min'] =\n      function () {\n        return (_sqlite3_wasm_test_int64_min = Module[\n          '_sqlite3_wasm_test_int64_min'\n        ] =\n          Module['asm']['sqlite3_wasm_test_int64_min']).apply(null, arguments);\n      });\n\n    var _sqlite3_wasm_test_int64_times2 = (Module[\n      '_sqlite3_wasm_test_int64_times2'\n    ] = function () {\n      return (_sqlite3_wasm_test_int64_times2 = Module[\n        '_sqlite3_wasm_test_int64_times2'\n      ] =\n        Module['asm']['sqlite3_wasm_test_int64_times2']).apply(null, arguments);\n    });\n\n    var _sqlite3_wasm_test_int64_minmax = (Module[\n      '_sqlite3_wasm_test_int64_minmax'\n    ] = function () {\n      return (_sqlite3_wasm_test_int64_minmax = Module[\n        '_sqlite3_wasm_test_int64_minmax'\n      ] =\n        Module['asm']['sqlite3_wasm_test_int64_minmax']).apply(null, arguments);\n    });\n\n    var _sqlite3_wasm_test_int64ptr = (Module['_sqlite3_wasm_test_int64ptr'] =\n      function () {\n        return (_sqlite3_wasm_test_int64ptr = Module[\n          '_sqlite3_wasm_test_int64ptr'\n        ] =\n          Module['asm']['sqlite3_wasm_test_int64ptr']).apply(null, arguments);\n      });\n\n    var _sqlite3_wasm_test_stack_overflow = (Module[\n      '_sqlite3_wasm_test_stack_overflow'\n    ] = function () {\n      return (_sqlite3_wasm_test_stack_overflow = Module[\n        '_sqlite3_wasm_test_stack_overflow'\n      ] =\n        Module['asm']['sqlite3_wasm_test_stack_overflow']).apply(\n        null,\n        arguments,\n      );\n    });\n\n    var _sqlite3_wasm_test_str_hello = (Module['_sqlite3_wasm_test_str_hello'] =\n      function () {\n        return (_sqlite3_wasm_test_str_hello = Module[\n          '_sqlite3_wasm_test_str_hello'\n        ] =\n          Module['asm']['sqlite3_wasm_test_str_hello']).apply(null, arguments);\n      });\n\n    var _malloc = (Module['_malloc'] = function () {\n      return (_malloc = Module['_malloc'] = Module['asm']['malloc']).apply(\n        null,\n        arguments,\n      );\n    });\n\n    var _free = (Module['_free'] = function () {\n      return (_free = Module['_free'] = Module['asm']['free']).apply(\n        null,\n        arguments,\n      );\n    });\n\n    var _realloc = (Module['_realloc'] = function () {\n      return (_realloc = Module['_realloc'] = Module['asm']['realloc']).apply(\n        null,\n        arguments,\n      );\n    });\n\n    var stackSave = (Module['stackSave'] = function () {\n      return (stackSave = Module['stackSave'] =\n        Module['asm']['stackSave']).apply(null, arguments);\n    });\n\n    var stackRestore = (Module['stackRestore'] = function () {\n      return (stackRestore = Module['stackRestore'] =\n        Module['asm']['stackRestore']).apply(null, arguments);\n    });\n\n    var stackAlloc = (Module['stackAlloc'] = function () {\n      return (stackAlloc = Module['stackAlloc'] =\n        Module['asm']['stackAlloc']).apply(null, arguments);\n    });\n\n    Module['wasmMemory'] = wasmMemory;\n\n    var calledRun;\n\n    dependenciesFulfilled = function runCaller() {\n      if (!calledRun) run();\n      if (!calledRun) dependenciesFulfilled = runCaller;\n    };\n\n    function run(args) {\n      args = args || arguments_;\n\n      if (runDependencies > 0) {\n        return;\n      }\n\n      preRun();\n\n      if (runDependencies > 0) {\n        return;\n      }\n\n      function doRun() {\n        if (calledRun) return;\n        calledRun = true;\n        Module['calledRun'] = true;\n\n        if (ABORT) return;\n\n        initRuntime();\n\n        readyPromiseResolve(Module);\n        if (Module['onRuntimeInitialized']) Module['onRuntimeInitialized']();\n\n        postRun();\n      }\n\n      if (Module['setStatus']) {\n        Module['setStatus']('Running...');\n        setTimeout(function () {\n          setTimeout(function () {\n            Module['setStatus']('');\n          }, 1);\n          doRun();\n        }, 1);\n      } else {\n        doRun();\n      }\n    }\n\n    if (Module['preInit']) {\n      if (typeof Module['preInit'] == 'function')\n        Module['preInit'] = [Module['preInit']];\n      while (Module['preInit'].length > 0) {\n        Module['preInit'].pop()();\n      }\n    }\n\n    run();\n\n    if (!Module.postRun) Module.postRun = [];\n    Module.postRun.push(function (Module) {\n      'use strict';\n\n      'use strict';\n      self.sqlite3ApiBootstrap = function sqlite3ApiBootstrap(\n        apiConfig = self.sqlite3ApiConfig || sqlite3ApiBootstrap.defaultConfig,\n      ) {\n        if (sqlite3ApiBootstrap.sqlite3) {\n          console.warn(\n            'sqlite3ApiBootstrap() called multiple times.',\n            'Config and external initializers are ignored on calls after the first.',\n          );\n          return sqlite3ApiBootstrap.sqlite3;\n        }\n        const config = Object.assign(\n          Object.create(null),\n          {\n            exports: undefined,\n            memory: undefined,\n            bigIntEnabled: (() => {\n              if ('undefined' !== typeof Module) {\n                return !!Module.HEAPU64;\n              }\n              return !!self.BigInt64Array;\n            })(),\n            debug: console.debug.bind(console),\n            warn: console.warn.bind(console),\n            error: console.error.bind(console),\n            log: console.log.bind(console),\n            wasmfsOpfsDir: '/opfs',\n\n            useStdAlloc: false,\n          },\n          apiConfig || {},\n        );\n\n        Object.assign(\n          config,\n          {\n            allocExportName: config.useStdAlloc ? 'malloc' : 'sqlite3_malloc',\n            deallocExportName: config.useStdAlloc ? 'free' : 'sqlite3_free',\n            reallocExportName: config.useStdAlloc\n              ? 'realloc'\n              : 'sqlite3_realloc',\n          },\n          config,\n        );\n\n        ['exports', 'memory', 'wasmfsOpfsDir'].forEach((k) => {\n          if ('function' === typeof config[k]) {\n            config[k] = config[k]();\n          }\n        });\n        config.wasmOpfsDir = false;\n\n        const capi = Object.create(null);\n\n        const wasm = Object.create(null);\n\n        const __rcStr = (rc) => {\n          return (\n            (capi.sqlite3_js_rc_str && capi.sqlite3_js_rc_str(rc)) ||\n            'Unknown result code #' + rc\n          );\n        };\n\n        const __isInt = (n) => 'number' === typeof n && n === (n | 0);\n\n        class SQLite3Error extends Error {\n          constructor(...args) {\n            let rc;\n            if (args.length) {\n              if (__isInt(args[0])) {\n                rc = args[0];\n                if (1 === args.length) {\n                  super(__rcStr(args[0]));\n                } else {\n                  const rcStr = __rcStr(rc);\n                  if ('object' === typeof args[1]) {\n                    super(rcStr, args[1]);\n                  } else {\n                    args[0] = rcStr + ':';\n                    super(args.join(' '));\n                  }\n                }\n              } else {\n                if (2 === args.length && 'object' === typeof args[1]) {\n                  super(...args);\n                } else {\n                  super(args.join(' '));\n                }\n              }\n            }\n            this.resultCode = rc || capi.SQLITE_ERROR;\n            this.name = 'SQLite3Error';\n          }\n        }\n\n        SQLite3Error.toss = (...args) => {\n          throw new SQLite3Error(...args);\n        };\n        const toss3 = SQLite3Error.toss;\n\n        if (config.wasmfsOpfsDir && !/^\\/[^/]+$/.test(config.wasmfsOpfsDir)) {\n          toss3(\n            \"config.wasmfsOpfsDir must be falsy or in the form '/dir-name'.\",\n          );\n        }\n\n        const isInt32 = (n) => {\n          return (\n            'bigint' !== typeof n &&\n            !!(n === (n | 0) && n <= 2147483647 && n >= -2147483648)\n          );\n        };\n\n        const bigIntFits64 = function f(b) {\n          if (!f._max) {\n            f._max = BigInt('0x7fffffffffffffff');\n            f._min = ~f._max;\n          }\n          return b >= f._min && b <= f._max;\n        };\n\n        const bigIntFits32 = (b) => b >= -0x7fffffffn - 1n && b <= 0x7fffffffn;\n\n        const bigIntFitsDouble = function f(b) {\n          if (!f._min) {\n            f._min = Number.MIN_SAFE_INTEGER;\n            f._max = Number.MAX_SAFE_INTEGER;\n          }\n          return b >= f._min && b <= f._max;\n        };\n\n        const isTypedArray = (v) => {\n          return v && v.constructor && isInt32(v.constructor.BYTES_PER_ELEMENT)\n            ? v\n            : false;\n        };\n\n        const __SAB =\n          'undefined' === typeof SharedArrayBuffer\n            ? function () {}\n            : SharedArrayBuffer;\n\n        const isSharedTypedArray = (aTypedArray) =>\n          aTypedArray.buffer instanceof __SAB;\n\n        const typedArrayPart = (aTypedArray, begin, end) => {\n          return isSharedTypedArray(aTypedArray)\n            ? aTypedArray.slice(begin, end)\n            : aTypedArray.subarray(begin, end);\n        };\n\n        const isBindableTypedArray = (v) => {\n          return (\n            v &&\n            (v instanceof Uint8Array ||\n              v instanceof Int8Array ||\n              v instanceof ArrayBuffer)\n          );\n        };\n\n        const isSQLableTypedArray = (v) => {\n          return (\n            v &&\n            (v instanceof Uint8Array ||\n              v instanceof Int8Array ||\n              v instanceof ArrayBuffer)\n          );\n        };\n\n        const affirmBindableTypedArray = (v) => {\n          return (\n            isBindableTypedArray(v) ||\n            toss3('Value is not of a supported TypedArray type.')\n          );\n        };\n\n        const utf8Decoder = new TextDecoder('utf-8');\n\n        const typedArrayToString = function (typedArray, begin, end) {\n          return utf8Decoder.decode(typedArrayPart(typedArray, begin, end));\n        };\n\n        const flexibleString = function (v) {\n          if (isSQLableTypedArray(v)) {\n            return typedArrayToString(\n              v instanceof ArrayBuffer ? new Uint8Array(v) : v,\n            );\n          } else if (Array.isArray(v)) return v.join('');\n          else if (wasm.isPtr(v)) v = wasm.cstrToJs(v);\n          return v;\n        };\n\n        class WasmAllocError extends Error {\n          constructor(...args) {\n            if (2 === args.length && 'object' === typeof args[1]) {\n              super(...args);\n            } else if (args.length) {\n              super(args.join(' '));\n            } else {\n              super('Allocation failed.');\n            }\n            this.resultCode = capi.SQLITE_NOMEM;\n            this.name = 'WasmAllocError';\n          }\n        }\n\n        WasmAllocError.toss = (...args) => {\n          throw new WasmAllocError(...args);\n        };\n\n        Object.assign(capi, {\n          sqlite3_bind_blob: undefined,\n\n          sqlite3_bind_text: undefined,\n\n          sqlite3_create_function_v2: (\n            pDb,\n            funcName,\n            nArg,\n            eTextRep,\n            pApp,\n            xFunc,\n            xStep,\n            xFinal,\n            xDestroy,\n          ) => {},\n\n          sqlite3_create_function: (\n            pDb,\n            funcName,\n            nArg,\n            eTextRep,\n            pApp,\n            xFunc,\n            xStep,\n            xFinal,\n          ) => {},\n\n          sqlite3_create_window_function: (\n            pDb,\n            funcName,\n            nArg,\n            eTextRep,\n            pApp,\n            xStep,\n            xFinal,\n            xValue,\n            xInverse,\n            xDestroy,\n          ) => {},\n\n          sqlite3_prepare_v3: (\n            dbPtr,\n            sql,\n            sqlByteLen,\n            prepFlags,\n            stmtPtrPtr,\n            strPtrPtr,\n          ) => {},\n\n          sqlite3_prepare_v2: (\n            dbPtr,\n            sql,\n            sqlByteLen,\n            stmtPtrPtr,\n            strPtrPtr,\n          ) => {},\n\n          sqlite3_exec: (pDb, sql, callback, pVoid, pErrMsg) => {},\n\n          sqlite3_randomness: (n, outPtr) => {},\n        });\n\n        const util = {\n          affirmBindableTypedArray,\n          flexibleString,\n          bigIntFits32,\n          bigIntFits64,\n          bigIntFitsDouble,\n          isBindableTypedArray,\n          isInt32,\n          isSQLableTypedArray,\n          isTypedArray,\n          typedArrayToString,\n          isUIThread: () => self.window === self && !!self.document,\n\n          isSharedTypedArray,\n          toss: function (...args) {\n            throw new Error(args.join(' '));\n          },\n          toss3,\n          typedArrayPart,\n        };\n\n        Object.assign(wasm, {\n          ptrSizeof: config.wasmPtrSizeof || 4,\n\n          ptrIR: config.wasmPtrIR || 'i32',\n\n          bigIntEnabled: !!config.bigIntEnabled,\n\n          exports:\n            config.exports ||\n            toss3('Missing API config.exports (WASM module exports).'),\n\n          memory:\n            config.memory ||\n            config.exports['memory'] ||\n            toss3(\n              'API config object requires a WebAssembly.Memory object',\n              'in either config.exports.memory (exported)',\n              'or config.memory (imported).',\n            ),\n\n          alloc: undefined,\n\n          realloc: undefined,\n\n          dealloc: undefined,\n        });\n\n        wasm.allocFromTypedArray = function (srcTypedArray) {\n          if (srcTypedArray instanceof ArrayBuffer) {\n            srcTypedArray = new Uint8Array(srcTypedArray);\n          }\n          affirmBindableTypedArray(srcTypedArray);\n          const pRet = wasm.alloc(srcTypedArray.byteLength || 1);\n          wasm\n            .heapForSize(srcTypedArray.constructor)\n            .set(srcTypedArray.byteLength ? srcTypedArray : [0], pRet);\n          return pRet;\n        };\n\n        {\n          const keyAlloc = config.allocExportName,\n            keyDealloc = config.deallocExportName,\n            keyRealloc = config.reallocExportName;\n          for (const key of [keyAlloc, keyDealloc, keyRealloc]) {\n            const f = wasm.exports[key];\n            if (!(f instanceof Function))\n              toss3('Missing required exports[', key, '] function.');\n          }\n\n          wasm.alloc = function f(n) {\n            return (\n              f.impl(n) ||\n              WasmAllocError.toss('Failed to allocate', n, ' bytes.')\n            );\n          };\n          wasm.alloc.impl = wasm.exports[keyAlloc];\n          wasm.realloc = function f(m, n) {\n            const m2 = f.impl(m, n);\n            return n\n              ? m2 || WasmAllocError.toss('Failed to reallocate', n, ' bytes.')\n              : 0;\n          };\n          wasm.realloc.impl = wasm.exports[keyRealloc];\n          wasm.dealloc = wasm.exports[keyDealloc];\n        }\n\n        wasm.compileOptionUsed = function f(optName) {\n          if (!arguments.length) {\n            if (f._result) return f._result;\n            else if (!f._opt) {\n              f._rx = /^([^=]+)=(.+)/;\n              f._rxInt = /^-?\\d+$/;\n              f._opt = function (opt, rv) {\n                const m = f._rx.exec(opt);\n                rv[0] = m ? m[1] : opt;\n                rv[1] = m ? (f._rxInt.test(m[2]) ? +m[2] : m[2]) : true;\n              };\n            }\n            const rc = {},\n              ov = [0, 0];\n            let i = 0,\n              k;\n            while ((k = capi.sqlite3_compileoption_get(i++))) {\n              f._opt(k, ov);\n              rc[ov[0]] = ov[1];\n            }\n            return (f._result = rc);\n          } else if (Array.isArray(optName)) {\n            const rc = {};\n            optName.forEach((v) => {\n              rc[v] = capi.sqlite3_compileoption_used(v);\n            });\n            return rc;\n          } else if ('object' === typeof optName) {\n            Object.keys(optName).forEach((k) => {\n              optName[k] = capi.sqlite3_compileoption_used(k);\n            });\n            return optName;\n          }\n          return 'string' === typeof optName\n            ? !!capi.sqlite3_compileoption_used(optName)\n            : false;\n        };\n\n        wasm.pstack = Object.assign(Object.create(null), {\n          restore: wasm.exports.sqlite3_wasm_pstack_restore,\n\n          alloc: function (n) {\n            if ('string' === typeof n && !(n = wasm.sizeofIR(n))) {\n              WasmAllocError.toss(\n                'Invalid value for pstack.alloc(',\n                arguments[0],\n                ')',\n              );\n            }\n            return (\n              wasm.exports.sqlite3_wasm_pstack_alloc(n) ||\n              WasmAllocError.toss(\n                'Could not allocate',\n                n,\n                'bytes from the pstack.',\n              )\n            );\n          },\n\n          allocChunks: function (n, sz) {\n            if ('string' === typeof sz && !(sz = wasm.sizeofIR(sz))) {\n              WasmAllocError.toss(\n                'Invalid size value for allocChunks(',\n                arguments[1],\n                ')',\n              );\n            }\n            const mem = wasm.pstack.alloc(n * sz);\n            const rc = [];\n            let i = 0,\n              offset = 0;\n            for (; i < n; ++i, offset += sz) rc.push(mem + offset);\n            return rc;\n          },\n\n          allocPtr: (n = 1, safePtrSize = true) => {\n            return 1 === n\n              ? wasm.pstack.alloc(safePtrSize ? 8 : wasm.ptrSizeof)\n              : wasm.pstack.allocChunks(n, safePtrSize ? 8 : wasm.ptrSizeof);\n          },\n        });\n        Object.defineProperties(wasm.pstack, {\n          pointer: {\n            configurable: false,\n            iterable: true,\n            writeable: false,\n            get: wasm.exports.sqlite3_wasm_pstack_ptr,\n          },\n\n          quota: {\n            configurable: false,\n            iterable: true,\n            writeable: false,\n            get: wasm.exports.sqlite3_wasm_pstack_quota,\n          },\n\n          remaining: {\n            configurable: false,\n            iterable: true,\n            writeable: false,\n            get: wasm.exports.sqlite3_wasm_pstack_remaining,\n          },\n        });\n\n        capi.sqlite3_randomness = (...args) => {\n          if (\n            1 === args.length &&\n            util.isTypedArray(args[0]) &&\n            1 === args[0].BYTES_PER_ELEMENT\n          ) {\n            const ta = args[0];\n            if (0 === ta.byteLength) {\n              wasm.exports.sqlite3_randomness(0, 0);\n              return ta;\n            }\n            const stack = wasm.pstack.pointer;\n            try {\n              let n = ta.byteLength,\n                offset = 0;\n              const r = wasm.exports.sqlite3_randomness;\n              const heap = wasm.heap8u();\n              const nAlloc = n < 512 ? n : 512;\n              const ptr = wasm.pstack.alloc(nAlloc);\n              do {\n                const j = n > nAlloc ? nAlloc : n;\n                r(j, ptr);\n                ta.set(typedArrayPart(heap, ptr, ptr + j), offset);\n                n -= j;\n                offset += j;\n              } while (n > 0);\n            } catch (e) {\n              console.error(\n                'Highly unexpected (and ignored!) ' +\n                  'exception in sqlite3_randomness():',\n                e,\n              );\n            } finally {\n              wasm.pstack.restore(stack);\n            }\n            return ta;\n          }\n          wasm.exports.sqlite3_randomness(...args);\n        };\n\n        let __wasmfsOpfsDir = undefined;\n\n        capi.sqlite3_wasmfs_opfs_dir = function () {\n          if (undefined !== __wasmfsOpfsDir) return __wasmfsOpfsDir;\n\n          const pdir = config.wasmfsOpfsDir;\n          console.error(\n            'sqlite3_wasmfs_opfs_dir() can no longer work due ' +\n              'to incompatible WASMFS changes. It will be removed.',\n          );\n          if (\n            !pdir ||\n            !self.FileSystemHandle ||\n            !self.FileSystemDirectoryHandle ||\n            !self.FileSystemFileHandle\n          ) {\n            return (__wasmfsOpfsDir = '');\n          }\n          try {\n            if (\n              pdir &&\n              0 ===\n                wasm.xCallWrapped(\n                  'sqlite3_wasm_init_wasmfs',\n                  'i32',\n                  ['string'],\n                  pdir,\n                )\n            ) {\n              return (__wasmfsOpfsDir = pdir);\n            } else {\n              return (__wasmfsOpfsDir = '');\n            }\n          } catch (e) {\n            return (__wasmfsOpfsDir = '');\n          }\n        };\n\n        capi.sqlite3_wasmfs_filename_is_persistent = function (name) {\n          const p = capi.sqlite3_wasmfs_opfs_dir();\n          return p && name ? name.startsWith(p + '/') : false;\n        };\n\n        if (false && 0 === wasm.exports.sqlite3_vfs_find(0)) {\n          wasm.exports.sqlite3_initialize();\n        }\n\n        capi.sqlite3_js_db_uses_vfs = function (pDb, vfsName, dbName = 0) {\n          try {\n            const pK = capi.sqlite3_vfs_find(vfsName);\n            if (!pK) return false;\n            else if (!pDb) {\n              return pK === capi.sqlite3_vfs_find(0) ? pK : false;\n            } else {\n              return pK === capi.sqlite3_js_db_vfs(pDb, dbName) ? pK : false;\n            }\n          } catch (e) {\n            return false;\n          }\n        };\n\n        capi.sqlite3_js_vfs_list = function () {\n          const rc = [];\n          let pVfs = capi.sqlite3_vfs_find(0);\n          while (pVfs) {\n            const oVfs = new capi.sqlite3_vfs(pVfs);\n            rc.push(wasm.cstrToJs(oVfs.$zName));\n            pVfs = oVfs.$pNext;\n            oVfs.dispose();\n          }\n          return rc;\n        };\n\n        capi.sqlite3_js_db_export = function (pDb, schema = 0) {\n          pDb = wasm.xWrap.testConvertArg('sqlite3*', pDb);\n          if (!pDb) toss3('Invalid sqlite3* argument.');\n          if (!wasm.bigIntEnabled) toss3('BigInt64 support is not enabled.');\n          const scope = wasm.scopedAllocPush();\n          let pOut;\n          try {\n            const pSize = wasm.scopedAlloc(8 + wasm.ptrSizeof);\n            const ppOut = pSize + 8;\n\n            const zSchema = schema\n              ? wasm.isPtr(schema)\n                ? schema\n                : wasm.scopedAllocCString('' + schema)\n              : 0;\n            let rc = wasm.exports.sqlite3_wasm_db_serialize(\n              pDb,\n              zSchema,\n              ppOut,\n              pSize,\n              0,\n            );\n            if (rc) {\n              toss3(\n                'Database serialization failed with code',\n                sqlite3.capi.sqlite3_js_rc_str(rc),\n              );\n            }\n            pOut = wasm.peekPtr(ppOut);\n            const nOut = wasm.peek(pSize, 'i64');\n            rc = nOut\n              ? wasm.heap8u().slice(pOut, pOut + Number(nOut))\n              : new Uint8Array();\n            return rc;\n          } finally {\n            if (pOut) wasm.exports.sqlite3_free(pOut);\n            wasm.scopedAllocPop(scope);\n          }\n        };\n\n        capi.sqlite3_js_db_vfs = (dbPointer, dbName = 0) =>\n          wasm.sqlite3_wasm_db_vfs(dbPointer, dbName);\n\n        capi.sqlite3_js_aggregate_context = (pCtx, n) => {\n          return (\n            capi.sqlite3_aggregate_context(pCtx, n) ||\n            (n\n              ? WasmAllocError.toss(\n                  'Cannot allocate',\n                  n,\n                  'bytes for sqlite3_aggregate_context()',\n                )\n              : 0)\n          );\n        };\n\n        capi.sqlite3_js_vfs_create_file = function (\n          vfs,\n          filename,\n          data,\n          dataLen,\n        ) {\n          let pData;\n          if (data) {\n            if (wasm.isPtr(data)) {\n              pData = data;\n            } else if (data instanceof ArrayBuffer) {\n              data = new Uint8Array(data);\n            }\n            if (data instanceof Uint8Array) {\n              pData = wasm.allocFromTypedArray(data);\n              if (\n                arguments.length < 4 ||\n                !util.isInt32(dataLen) ||\n                dataLen < 0\n              ) {\n                dataLen = data.byteLength;\n              }\n            } else {\n              SQLite3Error.toss(\n                'Invalid 3rd argument type for sqlite3_js_vfs_create_file().',\n              );\n            }\n          } else {\n            pData = 0;\n          }\n          if (!util.isInt32(dataLen) || dataLen < 0) {\n            wasm.dealloc(pData);\n            SQLite3Error.toss(\n              'Invalid 4th argument for sqlite3_js_vfs_create_file().',\n            );\n          }\n          try {\n            const rc = wasm.sqlite3_wasm_vfs_create_file(\n              vfs,\n              filename,\n              pData,\n              dataLen,\n            );\n            if (rc)\n              SQLite3Error.toss(\n                'Creation of file failed with sqlite3 result code',\n                capi.sqlite3_js_rc_str(rc),\n              );\n          } finally {\n            wasm.dealloc(pData);\n          }\n        };\n\n        if (util.isUIThread()) {\n          const __kvvfsInfo = function (which) {\n            const rc = Object.create(null);\n            rc.prefix = 'kvvfs-' + which;\n            rc.stores = [];\n            if ('session' === which || '' === which)\n              rc.stores.push(self.sessionStorage);\n            if ('local' === which || '' === which)\n              rc.stores.push(self.localStorage);\n            return rc;\n          };\n\n          capi.sqlite3_js_kvvfs_clear = function (which = '') {\n            let rc = 0;\n            const kvinfo = __kvvfsInfo(which);\n            kvinfo.stores.forEach((s) => {\n              const toRm = [];\n              let i;\n              for (i = 0; i < s.length; ++i) {\n                const k = s.key(i);\n                if (k.startsWith(kvinfo.prefix)) toRm.push(k);\n              }\n              toRm.forEach((kk) => s.removeItem(kk));\n              rc += toRm.length;\n            });\n            return rc;\n          };\n\n          capi.sqlite3_js_kvvfs_size = function (which = '') {\n            let sz = 0;\n            const kvinfo = __kvvfsInfo(which);\n            kvinfo.stores.forEach((s) => {\n              let i;\n              for (i = 0; i < s.length; ++i) {\n                const k = s.key(i);\n                if (k.startsWith(kvinfo.prefix)) {\n                  sz += k.length;\n                  sz += s.getItem(k).length;\n                }\n              }\n            });\n            return sz * 2;\n          };\n        }\n\n        capi.sqlite3_db_config = function f(pDb, op, ...args) {\n          if (!this.s) {\n            this.s = wasm.xWrap('sqlite3_wasm_db_config_s', 'int', [\n              'sqlite3*',\n              'int',\n              'string:static',\n            ]);\n            this.pii = wasm.xWrap('sqlite3_wasm_db_config_pii', 'int', [\n              'sqlite3*',\n              'int',\n              '*',\n              'int',\n              'int',\n            ]);\n            this.ip = wasm.xWrap('sqlite3_wasm_db_config_ip', 'int', [\n              'sqlite3*',\n              'int',\n              'int',\n              '*',\n            ]);\n          }\n          const c = capi;\n          switch (op) {\n            case c.SQLITE_DBCONFIG_ENABLE_FKEY:\n            case c.SQLITE_DBCONFIG_ENABLE_TRIGGER:\n            case c.SQLITE_DBCONFIG_ENABLE_FTS3_TOKENIZER:\n            case c.SQLITE_DBCONFIG_ENABLE_LOAD_EXTENSION:\n            case c.SQLITE_DBCONFIG_NO_CKPT_ON_CLOSE:\n            case c.SQLITE_DBCONFIG_ENABLE_QPSG:\n            case c.SQLITE_DBCONFIG_TRIGGER_EQP:\n            case c.SQLITE_DBCONFIG_RESET_DATABASE:\n            case c.SQLITE_DBCONFIG_DEFENSIVE:\n            case c.SQLITE_DBCONFIG_WRITABLE_SCHEMA:\n            case c.SQLITE_DBCONFIG_LEGACY_ALTER_TABLE:\n            case c.SQLITE_DBCONFIG_DQS_DML:\n            case c.SQLITE_DBCONFIG_DQS_DDL:\n            case c.SQLITE_DBCONFIG_ENABLE_VIEW:\n            case c.SQLITE_DBCONFIG_LEGACY_FILE_FORMAT:\n            case c.SQLITE_DBCONFIG_TRUSTED_SCHEMA:\n              return this.ip(pDb, op, args[0], args[1] || 0);\n            case c.SQLITE_DBCONFIG_LOOKASIDE:\n              return this.pii(pDb, op, args[0], args[1], args[2]);\n            case c.SQLITE_DBCONFIG_MAINDBNAME:\n              return this.s(pDb, op, args[0]);\n            default:\n              return c.SQLITE_MISUSE;\n          }\n        }.bind(Object.create(null));\n\n        capi.sqlite3_value_to_js = function (\n          pVal,\n          throwIfCannotConvert = true,\n        ) {\n          let arg;\n          const valType = capi.sqlite3_value_type(pVal);\n          switch (valType) {\n            case capi.SQLITE_INTEGER:\n              if (wasm.bigIntEnabled) {\n                arg = capi.sqlite3_value_int64(pVal);\n                if (util.bigIntFitsDouble(arg)) arg = Number(arg);\n              } else arg = capi.sqlite3_value_double(pVal);\n              break;\n            case capi.SQLITE_FLOAT:\n              arg = capi.sqlite3_value_double(pVal);\n              break;\n            case capi.SQLITE_TEXT:\n              arg = capi.sqlite3_value_text(pVal);\n              break;\n            case capi.SQLITE_BLOB: {\n              const n = capi.sqlite3_value_bytes(pVal);\n              const pBlob = capi.sqlite3_value_blob(pVal);\n              if (n && !pBlob)\n                sqlite3.WasmAllocError.toss(\n                  'Cannot allocate memory for blob argument of',\n                  n,\n                  'byte(s)',\n                );\n              arg = n ? wasm.heap8u().slice(pBlob, pBlob + Number(n)) : null;\n              break;\n            }\n            case capi.SQLITE_NULL:\n              arg = null;\n              break;\n            default:\n              if (throwIfCannotConvert) {\n                toss3(\n                  capi.SQLITE_MISMATCH,\n                  'Unhandled sqlite3_value_type():',\n                  valType,\n                );\n              }\n              arg = undefined;\n          }\n          return arg;\n        };\n\n        capi.sqlite3_values_to_js = function (\n          argc,\n          pArgv,\n          throwIfCannotConvert = true,\n        ) {\n          let i;\n          const tgt = [];\n          for (i = 0; i < argc; ++i) {\n            tgt.push(\n              capi.sqlite3_value_to_js(\n                wasm.peekPtr(pArgv + wasm.ptrSizeof * i),\n              ),\n            );\n          }\n          return tgt;\n        };\n\n        capi.sqlite3_result_error_js = function (pCtx, e) {\n          if (e instanceof WasmAllocError) {\n            capi.sqlite3_result_error_nomem(pCtx);\n          } else {\n            capi.sqlite3_result_error(pCtx, '' + e, -1);\n          }\n        };\n\n        capi.sqlite3_result_js = function (pCtx, val) {\n          if (val instanceof Error) {\n            capi.sqlite3_result_error_js(pCtx, val);\n            return;\n          }\n          try {\n            switch (typeof val) {\n              case 'undefined':\n                break;\n              case 'boolean':\n                capi.sqlite3_result_int(pCtx, val ? 1 : 0);\n                break;\n              case 'bigint':\n                if (util.bigIntFits32(val)) {\n                  capi.sqlite3_result_int(pCtx, Number(val));\n                } else if (util.bigIntFitsDouble(val)) {\n                  capi.sqlite3_result_double(pCtx, Number(val));\n                } else if (wasm.bigIntEnabled) {\n                  if (util.bigIntFits64(val))\n                    capi.sqlite3_result_int64(pCtx, val);\n                  else\n                    toss3(\n                      'BigInt value',\n                      val.toString(),\n                      'is too BigInt for int64.',\n                    );\n                } else {\n                  toss3('BigInt value', val.toString(), 'is too BigInt.');\n                }\n                break;\n              case 'number': {\n                let f;\n                if (util.isInt32(val)) {\n                  f = capi.sqlite3_result_int;\n                } else if (\n                  wasm.bigIntEnabled &&\n                  Number.isInteger(val) &&\n                  util.bigIntFits64(BigInt(val))\n                ) {\n                  f = capi.sqlite3_result_int64;\n                } else {\n                  f = capi.sqlite3_result_double;\n                }\n                f(pCtx, val);\n                break;\n              }\n              case 'string': {\n                const [p, n] = wasm.allocCString(val, true);\n                capi.sqlite3_result_text(pCtx, p, n, capi.SQLITE_WASM_DEALLOC);\n                break;\n              }\n              case 'object':\n                if (null === val) {\n                  capi.sqlite3_result_null(pCtx);\n                  break;\n                } else if (util.isBindableTypedArray(val)) {\n                  const pBlob = wasm.allocFromTypedArray(val);\n                  capi.sqlite3_result_blob(\n                    pCtx,\n                    pBlob,\n                    val.byteLength,\n                    capi.SQLITE_WASM_DEALLOC,\n                  );\n                  break;\n                }\n\n              default:\n                toss3(\n                  \"Don't not how to handle this UDF result value:\",\n                  typeof val,\n                  val,\n                );\n            }\n          } catch (e) {\n            capi.sqlite3_result_error_js(pCtx, e);\n          }\n        };\n\n        capi.sqlite3_column_js = function (\n          pStmt,\n          iCol,\n          throwIfCannotConvert = true,\n        ) {\n          const v = capi.sqlite3_column_value(pStmt, iCol);\n          return 0 === v\n            ? undefined\n            : capi.sqlite3_value_to_js(v, throwIfCannotConvert);\n        };\n\n        const __newOldValue = function (pObj, iCol, impl) {\n          impl = capi[impl];\n          if (!this.ptr) this.ptr = wasm.allocPtr();\n          else wasm.pokePtr(this.ptr, 0);\n          const rc = impl(pObj, iCol, this.ptr);\n          if (rc)\n            return SQLite3Error.toss(\n              rc,\n              arguments[2] + '() failed with code ' + rc,\n            );\n          const pv = wasm.peekPtr(this.ptr);\n          return pv ? capi.sqlite3_value_to_js(pv, true) : undefined;\n        }.bind(Object.create(null));\n\n        capi.sqlite3_preupdate_new_js = (pDb, iCol) =>\n          __newOldValue(pDb, iCol, 'sqlite3_preupdate_new');\n\n        capi.sqlite3_preupdate_old_js = (pDb, iCol) =>\n          __newOldValue(pDb, iCol, 'sqlite3_preupdate_old');\n\n        capi.sqlite3changeset_new_js = (pChangesetIter, iCol) =>\n          __newOldValue(pChangesetIter, iCol, 'sqlite3changeset_new');\n\n        capi.sqlite3changeset_old_js = (pChangesetIter, iCol) =>\n          __newOldValue(pChangesetIter, iCol, 'sqlite3changeset_old');\n\n        const sqlite3 = {\n          WasmAllocError: WasmAllocError,\n          SQLite3Error: SQLite3Error,\n          capi,\n          util,\n          wasm,\n          config,\n\n          version: Object.create(null),\n\n          client: undefined,\n\n          asyncPostInit: async function () {\n            let lip = sqlite3ApiBootstrap.initializersAsync;\n            delete sqlite3ApiBootstrap.initializersAsync;\n            if (!lip || !lip.length) return Promise.resolve(sqlite3);\n            lip = lip.map((f) => {\n              const p = f instanceof Promise ? f : f(sqlite3);\n              return p.catch((e) => {\n                console.error('an async sqlite3 initializer failed:', e);\n                throw e;\n              });\n            });\n            const postInit = () => {\n              if (!sqlite3.__isUnderTest) {\n                delete sqlite3.util;\n\n                delete sqlite3.StructBinder;\n              }\n              return sqlite3;\n            };\n            if (1) {\n              let p = lip.shift();\n              while (lip.length) p = p.then(lip.shift());\n              return p.then(postInit);\n            } else {\n              return Promise.all(lip).then(postInit);\n            }\n          },\n\n          scriptInfo: undefined,\n        };\n        try {\n          sqlite3ApiBootstrap.initializers.forEach((f) => {\n            f(sqlite3);\n          });\n        } catch (e) {\n          console.error('sqlite3 bootstrap initializer threw:', e);\n          throw e;\n        }\n        delete sqlite3ApiBootstrap.initializers;\n        sqlite3ApiBootstrap.sqlite3 = sqlite3;\n        return sqlite3;\n      };\n\n      self.sqlite3ApiBootstrap.initializers = [];\n\n      self.sqlite3ApiBootstrap.initializersAsync = [];\n\n      self.sqlite3ApiBootstrap.defaultConfig = Object.create(null);\n\n      self.sqlite3ApiBootstrap.sqlite3 = undefined;\n\n      self.WhWasmUtilInstaller = function (target) {\n        'use strict';\n        if (undefined === target.bigIntEnabled) {\n          target.bigIntEnabled = !!self['BigInt64Array'];\n        }\n\n        const toss = (...args) => {\n          throw new Error(args.join(' '));\n        };\n\n        if (!target.exports) {\n          Object.defineProperty(target, 'exports', {\n            enumerable: true,\n            configurable: true,\n            get: () => target.instance && target.instance.exports,\n          });\n        }\n\n        const ptrIR = target.pointerIR || 'i32';\n        const ptrSizeof = (target.ptrSizeof =\n          'i32' === ptrIR\n            ? 4\n            : 'i64' === ptrIR\n            ? 8\n            : toss('Unhandled ptrSizeof:', ptrIR));\n\n        const cache = Object.create(null);\n\n        cache.heapSize = 0;\n\n        cache.memory = null;\n\n        cache.freeFuncIndexes = [];\n\n        cache.scopedAlloc = [];\n\n        cache.utf8Decoder = new TextDecoder();\n        cache.utf8Encoder = new TextEncoder('utf-8');\n\n        target.sizeofIR = (n) => {\n          switch (n) {\n            case 'i8':\n              return 1;\n            case 'i16':\n              return 2;\n            case 'i32':\n            case 'f32':\n            case 'float':\n              return 4;\n            case 'i64':\n            case 'f64':\n            case 'double':\n              return 8;\n            case '*':\n              return ptrSizeof;\n            default:\n              return ('' + n).endsWith('*') ? ptrSizeof : undefined;\n          }\n        };\n\n        const heapWrappers = function () {\n          if (!cache.memory) {\n            cache.memory =\n              target.memory instanceof WebAssembly.Memory\n                ? target.memory\n                : target.exports.memory;\n          } else if (cache.heapSize === cache.memory.buffer.byteLength) {\n            return cache;\n          }\n\n          const b = cache.memory.buffer;\n          cache.HEAP8 = new Int8Array(b);\n          cache.HEAP8U = new Uint8Array(b);\n          cache.HEAP16 = new Int16Array(b);\n          cache.HEAP16U = new Uint16Array(b);\n          cache.HEAP32 = new Int32Array(b);\n          cache.HEAP32U = new Uint32Array(b);\n          if (target.bigIntEnabled) {\n            cache.HEAP64 = new BigInt64Array(b);\n            cache.HEAP64U = new BigUint64Array(b);\n          }\n          cache.HEAP32F = new Float32Array(b);\n          cache.HEAP64F = new Float64Array(b);\n          cache.heapSize = b.byteLength;\n          return cache;\n        };\n\n        target.heap8 = () => heapWrappers().HEAP8;\n\n        target.heap8u = () => heapWrappers().HEAP8U;\n\n        target.heap16 = () => heapWrappers().HEAP16;\n\n        target.heap16u = () => heapWrappers().HEAP16U;\n\n        target.heap32 = () => heapWrappers().HEAP32;\n\n        target.heap32u = () => heapWrappers().HEAP32U;\n\n        target.heapForSize = function (n, unsigned = true) {\n          let ctor;\n          const c =\n            cache.memory && cache.heapSize === cache.memory.buffer.byteLength\n              ? cache\n              : heapWrappers();\n          switch (n) {\n            case Int8Array:\n              return c.HEAP8;\n            case Uint8Array:\n              return c.HEAP8U;\n            case Int16Array:\n              return c.HEAP16;\n            case Uint16Array:\n              return c.HEAP16U;\n            case Int32Array:\n              return c.HEAP32;\n            case Uint32Array:\n              return c.HEAP32U;\n            case 8:\n              return unsigned ? c.HEAP8U : c.HEAP8;\n            case 16:\n              return unsigned ? c.HEAP16U : c.HEAP16;\n            case 32:\n              return unsigned ? c.HEAP32U : c.HEAP32;\n            case 64:\n              if (c.HEAP64) return unsigned ? c.HEAP64U : c.HEAP64;\n              break;\n            default:\n              if (target.bigIntEnabled) {\n                if (n === self['BigUint64Array']) return c.HEAP64U;\n                else if (n === self['BigInt64Array']) return c.HEAP64;\n                break;\n              }\n          }\n          toss(\n            'Invalid heapForSize() size: expecting 8, 16, 32,',\n            'or (if BigInt is enabled) 64.',\n          );\n        };\n\n        target.functionTable = function () {\n          return target.exports.__indirect_function_table;\n        };\n\n        target.functionEntry = function (fptr) {\n          const ft = target.functionTable();\n          return fptr < ft.length ? ft.get(fptr) : undefined;\n        };\n\n        target.jsFuncToWasm = function f(func, sig) {\n          if (!f._) {\n            f._ = {\n              sigTypes: Object.assign(Object.create(null), {\n                i: 'i32',\n                p: 'i32',\n                P: 'i32',\n                s: 'i32',\n                j: 'i64',\n                f: 'f32',\n                d: 'f64',\n              }),\n\n              typeCodes: Object.assign(Object.create(null), {\n                f64: 0x7c,\n                f32: 0x7d,\n                i64: 0x7e,\n                i32: 0x7f,\n              }),\n\n              uleb128Encode: function (tgt, method, n) {\n                if (n < 128) tgt[method](n);\n                else tgt[method](n % 128 | 128, n >> 7);\n              },\n\n              rxJSig: /^(\\w)\\((\\w*)\\)$/,\n\n              sigParams: function (sig) {\n                const m = f._.rxJSig.exec(sig);\n                return m ? m[2] : sig.substr(1);\n              },\n\n              letterType: (x) =>\n                f._.sigTypes[x] || toss('Invalid signature letter:', x),\n\n              pushSigType: (dest, letter) =>\n                dest.push(f._.typeCodes[f._.letterType(letter)]),\n            };\n          }\n          if ('string' === typeof func) {\n            const x = sig;\n            sig = func;\n            func = x;\n          }\n          const sigParams = f._.sigParams(sig);\n          const wasmCode = [0x01, 0x60];\n          f._.uleb128Encode(wasmCode, 'push', sigParams.length);\n          for (const x of sigParams) f._.pushSigType(wasmCode, x);\n          if ('v' === sig[0]) wasmCode.push(0);\n          else {\n            wasmCode.push(1);\n            f._.pushSigType(wasmCode, sig[0]);\n          }\n          f._.uleb128Encode(wasmCode, 'unshift', wasmCode.length);\n          wasmCode.unshift(\n            0x00,\n            0x61,\n            0x73,\n            0x6d,\n            0x01,\n            0x00,\n            0x00,\n            0x00,\n            0x01,\n          );\n          wasmCode.push(\n            0x02,\n            0x07,\n\n            0x01,\n            0x01,\n            0x65,\n            0x01,\n            0x66,\n            0x00,\n            0x00,\n            0x07,\n            0x05,\n\n            0x01,\n            0x01,\n            0x66,\n            0x00,\n            0x00,\n          );\n          return new WebAssembly.Instance(\n            new WebAssembly.Module(new Uint8Array(wasmCode)),\n            {\n              e: { f: func },\n            },\n          ).exports['f'];\n        };\n\n        const __installFunction = function f(func, sig, scoped) {\n          if (scoped && !cache.scopedAlloc.length) {\n            toss('No scopedAllocPush() scope is active.');\n          }\n          if ('string' === typeof func) {\n            const x = sig;\n            sig = func;\n            func = x;\n          }\n          if ('string' !== typeof sig || !(func instanceof Function)) {\n            toss(\n              'Invalid arguments: expecting (function,signature) ' +\n                'or (signature,function).',\n            );\n          }\n          const ft = target.functionTable();\n          const oldLen = ft.length;\n          let ptr;\n          while (cache.freeFuncIndexes.length) {\n            ptr = cache.freeFuncIndexes.pop();\n            if (ft.get(ptr)) {\n              ptr = null;\n              continue;\n            } else {\n              break;\n            }\n          }\n          if (!ptr) {\n            ptr = oldLen;\n            ft.grow(1);\n          }\n          try {\n            ft.set(ptr, func);\n            if (scoped) {\n              cache.scopedAlloc[cache.scopedAlloc.length - 1].push(ptr);\n            }\n            return ptr;\n          } catch (e) {\n            if (!(e instanceof TypeError)) {\n              if (ptr === oldLen) cache.freeFuncIndexes.push(oldLen);\n              throw e;\n            }\n          }\n\n          try {\n            const fptr = target.jsFuncToWasm(func, sig);\n            ft.set(ptr, fptr);\n            if (scoped) {\n              cache.scopedAlloc[cache.scopedAlloc.length - 1].push(ptr);\n            }\n          } catch (e) {\n            if (ptr === oldLen) cache.freeFuncIndexes.push(oldLen);\n            throw e;\n          }\n          return ptr;\n        };\n\n        target.installFunction = (func, sig) =>\n          __installFunction(func, sig, false);\n\n        target.scopedInstallFunction = (func, sig) =>\n          __installFunction(func, sig, true);\n\n        target.uninstallFunction = function (ptr) {\n          if (!ptr && 0 !== ptr) return undefined;\n          const fi = cache.freeFuncIndexes;\n          const ft = target.functionTable();\n          fi.push(ptr);\n          const rc = ft.get(ptr);\n          ft.set(ptr, null);\n          return rc;\n        };\n\n        target.peek = function f(ptr, type = 'i8') {\n          if (type.endsWith('*')) type = ptrIR;\n          const c =\n            cache.memory && cache.heapSize === cache.memory.buffer.byteLength\n              ? cache\n              : heapWrappers();\n          const list = Array.isArray(ptr) ? [] : undefined;\n          let rc;\n          do {\n            if (list) ptr = arguments[0].shift();\n            switch (type) {\n              case 'i1':\n              case 'i8':\n                rc = c.HEAP8[ptr >> 0];\n                break;\n              case 'i16':\n                rc = c.HEAP16[ptr >> 1];\n                break;\n              case 'i32':\n                rc = c.HEAP32[ptr >> 2];\n                break;\n              case 'float':\n              case 'f32':\n                rc = c.HEAP32F[ptr >> 2];\n                break;\n              case 'double':\n              case 'f64':\n                rc = Number(c.HEAP64F[ptr >> 3]);\n                break;\n              case 'i64':\n                if (target.bigIntEnabled) {\n                  rc = BigInt(c.HEAP64[ptr >> 3]);\n                  break;\n                }\n\n              default:\n                toss('Invalid type for peek():', type);\n            }\n            if (list) list.push(rc);\n          } while (list && arguments[0].length);\n          return list || rc;\n        };\n\n        target.poke = function (ptr, value, type = 'i8') {\n          if (type.endsWith('*')) type = ptrIR;\n          const c =\n            cache.memory && cache.heapSize === cache.memory.buffer.byteLength\n              ? cache\n              : heapWrappers();\n          for (const p of Array.isArray(ptr) ? ptr : [ptr]) {\n            switch (type) {\n              case 'i1':\n              case 'i8':\n                c.HEAP8[p >> 0] = value;\n                continue;\n              case 'i16':\n                c.HEAP16[p >> 1] = value;\n                continue;\n              case 'i32':\n                c.HEAP32[p >> 2] = value;\n                continue;\n              case 'float':\n              case 'f32':\n                c.HEAP32F[p >> 2] = value;\n                continue;\n              case 'double':\n              case 'f64':\n                c.HEAP64F[p >> 3] = value;\n                continue;\n              case 'i64':\n                if (c.HEAP64) {\n                  c.HEAP64[p >> 3] = BigInt(value);\n                  continue;\n                }\n\n              default:\n                toss('Invalid type for poke(): ' + type);\n            }\n          }\n          return this;\n        };\n\n        target.peekPtr = (...ptr) =>\n          target.peek(1 === ptr.length ? ptr[0] : ptr, ptrIR);\n\n        target.pokePtr = (ptr, value = 0) => target.poke(ptr, value, ptrIR);\n\n        target.peek8 = (...ptr) =>\n          target.peek(1 === ptr.length ? ptr[0] : ptr, 'i8');\n\n        target.poke8 = (ptr, value) => target.poke(ptr, value, 'i8');\n\n        target.peek16 = (...ptr) =>\n          target.peek(1 === ptr.length ? ptr[0] : ptr, 'i16');\n\n        target.poke16 = (ptr, value) => target.poke(ptr, value, 'i16');\n\n        target.peek32 = (...ptr) =>\n          target.peek(1 === ptr.length ? ptr[0] : ptr, 'i32');\n\n        target.poke32 = (ptr, value) => target.poke(ptr, value, 'i32');\n\n        target.peek64 = (...ptr) =>\n          target.peek(1 === ptr.length ? ptr[0] : ptr, 'i64');\n\n        target.poke64 = (ptr, value) => target.poke(ptr, value, 'i64');\n\n        target.peek32f = (...ptr) =>\n          target.peek(1 === ptr.length ? ptr[0] : ptr, 'f32');\n\n        target.poke32f = (ptr, value) => target.poke(ptr, value, 'f32');\n\n        target.peek64f = (...ptr) =>\n          target.peek(1 === ptr.length ? ptr[0] : ptr, 'f64');\n\n        target.poke64f = (ptr, value) => target.poke(ptr, value, 'f64');\n\n        target.getMemValue = target.peek;\n\n        target.getPtrValue = target.peekPtr;\n\n        target.setMemValue = target.poke;\n\n        target.setPtrValue = target.pokePtr;\n\n        target.isPtr32 = (ptr) =>\n          'number' === typeof ptr && ptr === (ptr | 0) && ptr >= 0;\n\n        target.isPtr = target.isPtr32;\n\n        target.cstrlen = function (ptr) {\n          if (!ptr || !target.isPtr(ptr)) return null;\n          const h = heapWrappers().HEAP8U;\n          let pos = ptr;\n          for (; h[pos] !== 0; ++pos) {}\n          return pos - ptr;\n        };\n\n        const __SAB =\n          'undefined' === typeof SharedArrayBuffer\n            ? function () {}\n            : SharedArrayBuffer;\n        const __utf8Decode = function (arrayBuffer, begin, end) {\n          return cache.utf8Decoder.decode(\n            arrayBuffer.buffer instanceof __SAB\n              ? arrayBuffer.slice(begin, end)\n              : arrayBuffer.subarray(begin, end),\n          );\n        };\n\n        target.cstrToJs = function (ptr) {\n          const n = target.cstrlen(ptr);\n          return n\n            ? __utf8Decode(heapWrappers().HEAP8U, ptr, ptr + n)\n            : null === n\n            ? n\n            : '';\n        };\n\n        target.jstrlen = function (str) {\n          if ('string' !== typeof str) return null;\n          const n = str.length;\n          let len = 0;\n          for (let i = 0; i < n; ++i) {\n            let u = str.charCodeAt(i);\n            if (u >= 0xd800 && u <= 0xdfff) {\n              u =\n                (0x10000 + ((u & 0x3ff) << 10)) | (str.charCodeAt(++i) & 0x3ff);\n            }\n            if (u <= 0x7f) ++len;\n            else if (u <= 0x7ff) len += 2;\n            else if (u <= 0xffff) len += 3;\n            else len += 4;\n          }\n          return len;\n        };\n\n        target.jstrcpy = function (\n          jstr,\n          tgt,\n          offset = 0,\n          maxBytes = -1,\n          addNul = true,\n        ) {\n          if (\n            !tgt ||\n            (!(tgt instanceof Int8Array) && !(tgt instanceof Uint8Array))\n          ) {\n            toss('jstrcpy() target must be an Int8Array or Uint8Array.');\n          }\n          if (maxBytes < 0) maxBytes = tgt.length - offset;\n          if (!(maxBytes > 0) || !(offset >= 0)) return 0;\n          let i = 0,\n            max = jstr.length;\n          const begin = offset,\n            end = offset + maxBytes - (addNul ? 1 : 0);\n          for (; i < max && offset < end; ++i) {\n            let u = jstr.charCodeAt(i);\n            if (u >= 0xd800 && u <= 0xdfff) {\n              u =\n                (0x10000 + ((u & 0x3ff) << 10)) |\n                (jstr.charCodeAt(++i) & 0x3ff);\n            }\n            if (u <= 0x7f) {\n              if (offset >= end) break;\n              tgt[offset++] = u;\n            } else if (u <= 0x7ff) {\n              if (offset + 1 >= end) break;\n              tgt[offset++] = 0xc0 | (u >> 6);\n              tgt[offset++] = 0x80 | (u & 0x3f);\n            } else if (u <= 0xffff) {\n              if (offset + 2 >= end) break;\n              tgt[offset++] = 0xe0 | (u >> 12);\n              tgt[offset++] = 0x80 | ((u >> 6) & 0x3f);\n              tgt[offset++] = 0x80 | (u & 0x3f);\n            } else {\n              if (offset + 3 >= end) break;\n              tgt[offset++] = 0xf0 | (u >> 18);\n              tgt[offset++] = 0x80 | ((u >> 12) & 0x3f);\n              tgt[offset++] = 0x80 | ((u >> 6) & 0x3f);\n              tgt[offset++] = 0x80 | (u & 0x3f);\n            }\n          }\n          if (addNul) tgt[offset++] = 0;\n          return offset - begin;\n        };\n\n        target.cstrncpy = function (tgtPtr, srcPtr, n) {\n          if (!tgtPtr || !srcPtr)\n            toss('cstrncpy() does not accept NULL strings.');\n          if (n < 0) n = target.cstrlen(strPtr) + 1;\n          else if (!(n > 0)) return 0;\n          const heap = target.heap8u();\n          let i = 0,\n            ch;\n          for (; i < n && (ch = heap[srcPtr + i]); ++i) {\n            heap[tgtPtr + i] = ch;\n          }\n          if (i < n) heap[tgtPtr + i++] = 0;\n          return i;\n        };\n\n        target.jstrToUintArray = (str, addNul = false) => {\n          return cache.utf8Encoder.encode(addNul ? str + '\\0' : str);\n        };\n\n        const __affirmAlloc = (obj, funcName) => {\n          if (\n            !(obj.alloc instanceof Function) ||\n            !(obj.dealloc instanceof Function)\n          ) {\n            toss(\n              'Object is missing alloc() and/or dealloc() function(s)',\n              'required by',\n              funcName + '().',\n            );\n          }\n        };\n\n        const __allocCStr = function (\n          jstr,\n          returnWithLength,\n          allocator,\n          funcName,\n        ) {\n          __affirmAlloc(target, funcName);\n          if ('string' !== typeof jstr) return null;\n          if (0) {\n            const n = target.jstrlen(jstr),\n              ptr = allocator(n + 1);\n            target.jstrcpy(jstr, target.heap8u(), ptr, n + 1, true);\n            return returnWithLength ? [ptr, n] : ptr;\n          } else {\n            const u = cache.utf8Encoder.encode(jstr),\n              ptr = allocator(u.length + 1),\n              heap = heapWrappers().HEAP8U;\n            heap.set(u, ptr);\n            heap[ptr + u.length] = 0;\n            return returnWithLength ? [ptr, u.length] : ptr;\n          }\n        };\n\n        target.allocCString = (jstr, returnWithLength = false) =>\n          __allocCStr(jstr, returnWithLength, target.alloc, 'allocCString()');\n\n        target.scopedAllocPush = function () {\n          __affirmAlloc(target, 'scopedAllocPush');\n          const a = [];\n          cache.scopedAlloc.push(a);\n          return a;\n        };\n\n        target.scopedAllocPop = function (state) {\n          __affirmAlloc(target, 'scopedAllocPop');\n          const n = arguments.length\n            ? cache.scopedAlloc.indexOf(state)\n            : cache.scopedAlloc.length - 1;\n          if (n < 0) toss('Invalid state object for scopedAllocPop().');\n          if (0 === arguments.length) state = cache.scopedAlloc[n];\n          cache.scopedAlloc.splice(n, 1);\n          for (let p; (p = state.pop()); ) {\n            if (target.functionEntry(p)) {\n              target.uninstallFunction(p);\n            } else target.dealloc(p);\n          }\n        };\n\n        target.scopedAlloc = function (n) {\n          if (!cache.scopedAlloc.length) {\n            toss('No scopedAllocPush() scope is active.');\n          }\n          const p = target.alloc(n);\n          cache.scopedAlloc[cache.scopedAlloc.length - 1].push(p);\n          return p;\n        };\n\n        Object.defineProperty(target.scopedAlloc, 'level', {\n          configurable: false,\n          enumerable: false,\n          get: () => cache.scopedAlloc.length,\n          set: () => toss(\"The 'active' property is read-only.\"),\n        });\n\n        target.scopedAllocCString = (jstr, returnWithLength = false) =>\n          __allocCStr(\n            jstr,\n            returnWithLength,\n            target.scopedAlloc,\n            'scopedAllocCString()',\n          );\n\n        const __allocMainArgv = function (isScoped, list) {\n          const pList = target[isScoped ? 'scopedAlloc' : 'alloc'](\n            (list.length + 1) * target.ptrSizeof,\n          );\n          let i = 0;\n          list.forEach((e) => {\n            target.pokePtr(\n              pList + target.ptrSizeof * i++,\n              target[isScoped ? 'scopedAllocCString' : 'allocCString']('' + e),\n            );\n          });\n          target.pokePtr(pList + target.ptrSizeof * i, 0);\n          return pList;\n        };\n\n        target.scopedAllocMainArgv = (list) => __allocMainArgv(true, list);\n\n        target.allocMainArgv = (list) => __allocMainArgv(false, list);\n\n        target.cArgvToJs = (argc, pArgv) => {\n          const list = [];\n          for (let i = 0; i < argc; ++i) {\n            const arg = target.peekPtr(pArgv + target.ptrSizeof * i);\n            list.push(arg ? target.cstrToJs(arg) : null);\n          }\n          return list;\n        };\n\n        target.scopedAllocCall = function (func) {\n          target.scopedAllocPush();\n          try {\n            return func();\n          } finally {\n            target.scopedAllocPop();\n          }\n        };\n\n        const __allocPtr = function (howMany, safePtrSize, method) {\n          __affirmAlloc(target, method);\n          const pIr = safePtrSize ? 'i64' : ptrIR;\n          let m = target[method](howMany * (safePtrSize ? 8 : ptrSizeof));\n          target.poke(m, 0, pIr);\n          if (1 === howMany) {\n            return m;\n          }\n          const a = [m];\n          for (let i = 1; i < howMany; ++i) {\n            m += safePtrSize ? 8 : ptrSizeof;\n            a[i] = m;\n            target.poke(m, 0, pIr);\n          }\n          return a;\n        };\n\n        target.allocPtr = (howMany = 1, safePtrSize = true) =>\n          __allocPtr(howMany, safePtrSize, 'alloc');\n\n        target.scopedAllocPtr = (howMany = 1, safePtrSize = true) =>\n          __allocPtr(howMany, safePtrSize, 'scopedAlloc');\n\n        target.xGet = function (name) {\n          return (\n            target.exports[name] || toss('Cannot find exported symbol:', name)\n          );\n        };\n\n        const __argcMismatch = (f, n) =>\n          toss(f + '() requires', n, 'argument(s).');\n\n        target.xCall = function (fname, ...args) {\n          const f = target.xGet(fname);\n          if (!(f instanceof Function))\n            toss('Exported symbol', fname, 'is not a function.');\n          if (f.length !== args.length) __argcMismatch(fname, f.length);\n          return 2 === arguments.length && Array.isArray(arguments[1])\n            ? f.apply(null, arguments[1])\n            : f.apply(null, args);\n        };\n\n        cache.xWrap = Object.create(null);\n        cache.xWrap.convert = Object.create(null);\n\n        cache.xWrap.convert.arg = new Map();\n\n        cache.xWrap.convert.result = new Map();\n        const xArg = cache.xWrap.convert.arg,\n          xResult = cache.xWrap.convert.result;\n\n        if (target.bigIntEnabled) {\n          xArg.set('i64', (i) => BigInt(i));\n        }\n        const __xArgPtr =\n          'i32' === ptrIR ? (i) => i | 0 : (i) => BigInt(i) | BigInt(0);\n        xArg\n          .set('i32', __xArgPtr)\n          .set('i16', (i) => (i | 0) & 0xffff)\n          .set('i8', (i) => (i | 0) & 0xff)\n          .set('f32', (i) => Number(i).valueOf())\n          .set('float', xArg.get('f32'))\n          .set('f64', xArg.get('f32'))\n          .set('double', xArg.get('f64'))\n          .set('int', xArg.get('i32'))\n          .set('null', (i) => i)\n          .set(null, xArg.get('null'))\n          .set('**', __xArgPtr)\n          .set('*', __xArgPtr);\n        xResult\n          .set('*', __xArgPtr)\n          .set('pointer', __xArgPtr)\n          .set('number', (v) => Number(v))\n          .set('void', (v) => undefined)\n          .set('null', (v) => v)\n          .set(null, xResult.get('null'));\n\n        {\n          const copyToResult = [\n            'i8',\n            'i16',\n            'i32',\n            'int',\n            'f32',\n            'float',\n            'f64',\n            'double',\n          ];\n          if (target.bigIntEnabled) copyToResult.push('i64');\n          const adaptPtr = xArg.get(ptrIR);\n          for (const t of copyToResult) {\n            xArg.set(t + '*', adaptPtr);\n            xResult.set(t + '*', adaptPtr);\n            xResult.set(t, xArg.get(t) || toss('Missing arg converter:', t));\n          }\n        }\n\n        const __xArgString = function (v) {\n          if ('string' === typeof v) return target.scopedAllocCString(v);\n          return v ? __xArgPtr(v) : null;\n        };\n        xArg\n          .set('string', __xArgString)\n          .set('utf8', __xArgString)\n          .set('pointer', __xArgString);\n\n        xResult\n          .set('string', (i) => target.cstrToJs(i))\n          .set('utf8', xResult.get('string'))\n          .set('string:dealloc', (i) => {\n            try {\n              return i ? target.cstrToJs(i) : null;\n            } finally {\n              target.dealloc(i);\n            }\n          })\n          .set('utf8:dealloc', xResult.get('string:dealloc'))\n          .set('json', (i) => JSON.parse(target.cstrToJs(i)))\n          .set('json:dealloc', (i) => {\n            try {\n              return i ? JSON.parse(target.cstrToJs(i)) : null;\n            } finally {\n              target.dealloc(i);\n            }\n          });\n\n        const AbstractArgAdapter = class {\n          constructor(opt) {\n            this.name = opt.name || 'unnamed adapter';\n          }\n\n          convertArg(v, argv, argIndex) {\n            toss('AbstractArgAdapter must be subclassed.');\n          }\n        };\n\n        xArg.FuncPtrAdapter = class FuncPtrAdapter extends AbstractArgAdapter {\n          constructor(opt) {\n            super(opt);\n            if (xArg.FuncPtrAdapter.warnOnUse) {\n              console.warn(\n                'xArg.FuncPtrAdapter is an internal-only API',\n                'and is not intended to be invoked from',\n                'client-level code. Invoked with:',\n                opt,\n              );\n            }\n            this.signature = opt.signature;\n            if (opt.contextKey instanceof Function) {\n              this.contextKey = opt.contextKey;\n              if (!opt.bindScope) opt.bindScope = 'context';\n            }\n            this.bindScope =\n              opt.bindScope ||\n              toss(\n                'FuncPtrAdapter options requires a bindScope (explicit or implied).',\n              );\n            if (FuncPtrAdapter.bindScopes.indexOf(opt.bindScope) < 0) {\n              toss(\n                'Invalid options.bindScope (' +\n                  opt.bindMod +\n                  ') for FuncPtrAdapter. ' +\n                  'Expecting one of: (' +\n                  FuncPtrAdapter.bindScopes.join(', ') +\n                  ')',\n              );\n            }\n            this.isTransient = 'transient' === this.bindScope;\n            this.isContext = 'context' === this.bindScope;\n            this.isPermanent = 'permanent' === this.bindScope;\n            this.singleton = 'singleton' === this.bindScope ? [] : undefined;\n\n            this.callProxy =\n              opt.callProxy instanceof Function ? opt.callProxy : undefined;\n          }\n\n          static warnOnUse = false;\n\n          static debugFuncInstall = false;\n\n          static debugOut = console.debug.bind(console);\n\n          static bindScopes = [\n            'transient',\n            'context',\n            'singleton',\n            'permanent',\n          ];\n\n          contextKey(argv, argIndex) {\n            return this;\n          }\n\n          contextMap(key) {\n            const cm = this.__cmap || (this.__cmap = new Map());\n            let rc = cm.get(key);\n            if (undefined === rc) cm.set(key, (rc = []));\n            return rc;\n          }\n\n          convertArg(v, argv, argIndex) {\n            let pair = this.singleton;\n            if (!pair && this.isContext) {\n              pair = this.contextMap(this.contextKey(argv, argIndex));\n            }\n            if (pair && pair[0] === v) return pair[1];\n            if (v instanceof Function) {\n              if (this.callProxy) v = this.callProxy(v);\n              const fp = __installFunction(v, this.signature, this.isTransient);\n              if (FuncPtrAdapter.debugFuncInstall) {\n                FuncPtrAdapter.debugOut(\n                  'FuncPtrAdapter installed',\n                  this,\n                  this.contextKey(argv, argIndex),\n                  '@' + fp,\n                  v,\n                );\n              }\n              if (pair) {\n                if (pair[1]) {\n                  if (FuncPtrAdapter.debugFuncInstall) {\n                    FuncPtrAdapter.debugOut(\n                      'FuncPtrAdapter uninstalling',\n                      this,\n                      this.contextKey(argv, argIndex),\n                      '@' + pair[1],\n                      v,\n                    );\n                  }\n                  try {\n                    target.uninstallFunction(pair[1]);\n                  } catch (e) {}\n                }\n                pair[0] = v;\n                pair[1] = fp;\n              }\n              return fp;\n            } else if (target.isPtr(v) || null === v || undefined === v) {\n              if (pair && pair[1] && pair[1] !== v) {\n                if (FuncPtrAdapter.debugFuncInstall) {\n                  FuncPtrAdapter.debugOut(\n                    'FuncPtrAdapter uninstalling',\n                    this,\n                    this.contextKey(argv, argIndex),\n                    '@' + pair[1],\n                    v,\n                  );\n                }\n                try {\n                  target.uninstallFunction(pair[1]);\n                } catch (e) {}\n                pair[0] = pair[1] = v | 0;\n              }\n              return v || 0;\n            } else {\n              throw new TypeError(\n                'Invalid FuncPtrAdapter argument type. ' +\n                  'Expecting a function pointer or a ' +\n                  (this.name ? this.name + ' ' : '') +\n                  'function matching signature ' +\n                  this.signature +\n                  '.',\n              );\n            }\n          }\n        };\n\n        const __xArgAdapterCheck = (t) =>\n          xArg.get(t) || toss('Argument adapter not found:', t);\n\n        const __xResultAdapterCheck = (t) =>\n          xResult.get(t) || toss('Result adapter not found:', t);\n\n        cache.xWrap.convertArg = (t, ...args) => __xArgAdapterCheck(t)(...args);\n        cache.xWrap.convertArgNoCheck = (t, ...args) => xArg.get(t)(...args);\n\n        cache.xWrap.convertResult = (t, v) =>\n          null === t ? v : t ? __xResultAdapterCheck(t)(v) : undefined;\n        cache.xWrap.convertResultNoCheck = (t, v) =>\n          null === t ? v : t ? xResult.get(t)(v) : undefined;\n\n        target.xWrap = function (fArg, resultType, ...argTypes) {\n          if (3 === arguments.length && Array.isArray(arguments[2])) {\n            argTypes = arguments[2];\n          }\n          if (target.isPtr(fArg)) {\n            fArg =\n              target.functionEntry(fArg) ||\n              toss('Function pointer not found in WASM function table.');\n          }\n          const fIsFunc = fArg instanceof Function;\n          const xf = fIsFunc ? fArg : target.xGet(fArg);\n          if (fIsFunc) fArg = xf.name || 'unnamed function';\n          if (argTypes.length !== xf.length) __argcMismatch(fArg, xf.length);\n          if (null === resultType && 0 === xf.length) {\n            return xf;\n          }\n          if (undefined !== resultType && null !== resultType)\n            __xResultAdapterCheck(resultType);\n          for (const t of argTypes) {\n            if (t instanceof AbstractArgAdapter)\n              xArg.set(t, (...args) => t.convertArg(...args));\n            else __xArgAdapterCheck(t);\n          }\n          const cxw = cache.xWrap;\n          if (0 === xf.length) {\n            return (...args) =>\n              args.length\n                ? __argcMismatch(fArg, xf.length)\n                : cxw.convertResult(resultType, xf.call(null));\n          }\n          return function (...args) {\n            if (args.length !== xf.length) __argcMismatch(fArg, xf.length);\n            const scope = target.scopedAllocPush();\n            try {\n              for (const i in args)\n                args[i] = cxw.convertArgNoCheck(argTypes[i], args[i], args, i);\n              return cxw.convertResultNoCheck(resultType, xf.apply(null, args));\n            } finally {\n              target.scopedAllocPop(scope);\n            }\n          };\n        };\n\n        const __xAdapter = function (\n          func,\n          argc,\n          typeName,\n          adapter,\n          modeName,\n          xcvPart,\n        ) {\n          if ('string' === typeof typeName) {\n            if (1 === argc) return xcvPart.get(typeName);\n            else if (2 === argc) {\n              if (!adapter) {\n                delete xcvPart.get(typeName);\n                return func;\n              } else if (!(adapter instanceof Function)) {\n                toss(modeName, 'requires a function argument.');\n              }\n              xcvPart.set(typeName, adapter);\n              return func;\n            }\n          }\n          toss('Invalid arguments to', modeName);\n        };\n\n        target.xWrap.resultAdapter = function f(typeName, adapter) {\n          return __xAdapter(\n            f,\n            arguments.length,\n            typeName,\n            adapter,\n            'resultAdapter()',\n            xResult,\n          );\n        };\n\n        target.xWrap.argAdapter = function f(typeName, adapter) {\n          return __xAdapter(\n            f,\n            arguments.length,\n            typeName,\n            adapter,\n            'argAdapter()',\n            xArg,\n          );\n        };\n\n        target.xWrap.FuncPtrAdapter = xArg.FuncPtrAdapter;\n\n        target.xCallWrapped = function (fArg, resultType, argTypes, ...args) {\n          if (Array.isArray(arguments[3])) args = arguments[3];\n          return target\n            .xWrap(fArg, resultType, argTypes || [])\n            .apply(null, args || []);\n        };\n\n        target.xWrap.testConvertArg = cache.xWrap.convertArg;\n\n        target.xWrap.testConvertResult = cache.xWrap.convertResult;\n\n        return target;\n      };\n\n      self.WhWasmUtilInstaller.yawl = function (config) {\n        const wfetch = () => fetch(config.uri, { credentials: 'same-origin' });\n        const wui = this;\n        const finalThen = function (arg) {\n          if (config.wasmUtilTarget) {\n            const toss = (...args) => {\n              throw new Error(args.join(' '));\n            };\n            const tgt = config.wasmUtilTarget;\n            tgt.module = arg.module;\n            tgt.instance = arg.instance;\n\n            if (!tgt.instance.exports.memory) {\n              tgt.memory =\n                (config.imports &&\n                  config.imports.env &&\n                  config.imports.env.memory) ||\n                toss(\"Missing 'memory' object!\");\n            }\n            if (!tgt.alloc && arg.instance.exports.malloc) {\n              const exports = arg.instance.exports;\n              tgt.alloc = function (n) {\n                return (\n                  exports.malloc(n) || toss('Allocation of', n, 'bytes failed.')\n                );\n              };\n              tgt.dealloc = function (m) {\n                exports.free(m);\n              };\n            }\n            wui(tgt);\n          }\n          if (config.onload) config.onload(arg, config);\n          return arg;\n        };\n        const loadWasm = WebAssembly.instantiateStreaming\n          ? function loadWasmStreaming() {\n              return WebAssembly.instantiateStreaming(\n                wfetch(),\n                config.imports || {},\n              ).then(finalThen);\n            }\n          : function loadWasmOldSchool() {\n              return wfetch()\n                .then((response) => response.arrayBuffer())\n                .then((bytes) =>\n                  WebAssembly.instantiate(bytes, config.imports || {}),\n                )\n                .then(finalThen);\n            };\n        return loadWasm;\n      }.bind(self.WhWasmUtilInstaller);\n\n      ('use strict');\n      self.Jaccwabyt = function StructBinderFactory(config) {\n        const toss = (...args) => {\n          throw new Error(args.join(' '));\n        };\n\n        if (\n          !(config.heap instanceof WebAssembly.Memory) &&\n          !(config.heap instanceof Function)\n        ) {\n          toss(\n            'config.heap must be WebAssembly.Memory instance or a function.',\n          );\n        }\n        ['alloc', 'dealloc'].forEach(function (k) {\n          config[k] instanceof Function ||\n            toss(\"Config option '\" + k + \"' must be a function.\");\n        });\n        const SBF = StructBinderFactory;\n        const heap =\n            config.heap instanceof Function\n              ? config.heap\n              : () => new Uint8Array(config.heap.buffer),\n          alloc = config.alloc,\n          dealloc = config.dealloc,\n          log = config.log || console.log.bind(console),\n          memberPrefix = config.memberPrefix || '',\n          memberSuffix = config.memberSuffix || '',\n          bigIntEnabled =\n            undefined === config.bigIntEnabled\n              ? !!self['BigInt64Array']\n              : !!config.bigIntEnabled,\n          BigInt = self['BigInt'],\n          BigInt64Array = self['BigInt64Array'],\n          ptrSizeof = config.ptrSizeof || 4,\n          ptrIR = config.ptrIR || 'i32';\n        if (!SBF.debugFlags) {\n          SBF.__makeDebugFlags = function (deriveFrom = null) {\n            if (deriveFrom && deriveFrom.__flags)\n              deriveFrom = deriveFrom.__flags;\n            const f = function f(flags) {\n              if (0 === arguments.length) {\n                return f.__flags;\n              }\n              if (flags < 0) {\n                delete f.__flags.getter;\n                delete f.__flags.setter;\n                delete f.__flags.alloc;\n                delete f.__flags.dealloc;\n              } else {\n                f.__flags.getter = 0 !== (0x01 & flags);\n                f.__flags.setter = 0 !== (0x02 & flags);\n                f.__flags.alloc = 0 !== (0x04 & flags);\n                f.__flags.dealloc = 0 !== (0x08 & flags);\n              }\n              return f._flags;\n            };\n            Object.defineProperty(f, '__flags', {\n              iterable: false,\n              writable: false,\n              value: Object.create(deriveFrom),\n            });\n            if (!deriveFrom) f(0);\n            return f;\n          };\n          SBF.debugFlags = SBF.__makeDebugFlags();\n        }\n\n        const isLittleEndian = (function () {\n          const buffer = new ArrayBuffer(2);\n          new DataView(buffer).setInt16(0, 256, true);\n\n          return new Int16Array(buffer)[0] === 256;\n        })();\n\n        const isFuncSig = (s) => '(' === s[1];\n\n        const isPtrSig = (s) => 'p' === s || 'P' === s;\n        const isAutoPtrSig = (s) => 'P' === s;\n        const sigLetter = (s) => (isFuncSig(s) ? 'p' : s[0]);\n\n        const sigIR = function (s) {\n          switch (sigLetter(s)) {\n            case 'c':\n            case 'C':\n              return 'i8';\n            case 'i':\n              return 'i32';\n            case 'p':\n            case 'P':\n            case 's':\n              return ptrIR;\n            case 'j':\n              return 'i64';\n            case 'f':\n              return 'float';\n            case 'd':\n              return 'double';\n          }\n          toss('Unhandled signature IR:', s);\n        };\n\n        const affirmBigIntArray = BigInt64Array\n          ? () => true\n          : () => toss('BigInt64Array is not available.');\n\n        const sigDVGetter = function (s) {\n          switch (sigLetter(s)) {\n            case 'p':\n            case 'P':\n            case 's': {\n              switch (ptrSizeof) {\n                case 4:\n                  return 'getInt32';\n                case 8:\n                  return affirmBigIntArray() && 'getBigInt64';\n              }\n              break;\n            }\n            case 'i':\n              return 'getInt32';\n            case 'c':\n              return 'getInt8';\n            case 'C':\n              return 'getUint8';\n            case 'j':\n              return affirmBigIntArray() && 'getBigInt64';\n            case 'f':\n              return 'getFloat32';\n            case 'd':\n              return 'getFloat64';\n          }\n          toss('Unhandled DataView getter for signature:', s);\n        };\n\n        const sigDVSetter = function (s) {\n          switch (sigLetter(s)) {\n            case 'p':\n            case 'P':\n            case 's': {\n              switch (ptrSizeof) {\n                case 4:\n                  return 'setInt32';\n                case 8:\n                  return affirmBigIntArray() && 'setBigInt64';\n              }\n              break;\n            }\n            case 'i':\n              return 'setInt32';\n            case 'c':\n              return 'setInt8';\n            case 'C':\n              return 'setUint8';\n            case 'j':\n              return affirmBigIntArray() && 'setBigInt64';\n            case 'f':\n              return 'setFloat32';\n            case 'd':\n              return 'setFloat64';\n          }\n          toss('Unhandled DataView setter for signature:', s);\n        };\n\n        const sigDVSetWrapper = function (s) {\n          switch (sigLetter(s)) {\n            case 'i':\n            case 'f':\n            case 'c':\n            case 'C':\n            case 'd':\n              return Number;\n            case 'j':\n              return affirmBigIntArray() && BigInt;\n            case 'p':\n            case 'P':\n            case 's':\n              switch (ptrSizeof) {\n                case 4:\n                  return Number;\n                case 8:\n                  return affirmBigIntArray() && BigInt;\n              }\n              break;\n          }\n          toss('Unhandled DataView set wrapper for signature:', s);\n        };\n\n        const sPropName = (s, k) => s + '::' + k;\n\n        const __propThrowOnSet = function (structName, propName) {\n          return () => toss(sPropName(structName, propName), 'is read-only.');\n        };\n\n        const __instancePointerMap = new WeakMap();\n\n        const xPtrPropName = '(pointer-is-external)';\n\n        const __freeStruct = function (ctor, obj, m) {\n          if (!m) m = __instancePointerMap.get(obj);\n          if (m) {\n            __instancePointerMap.delete(obj);\n            if (Array.isArray(obj.ondispose)) {\n              let x;\n              while ((x = obj.ondispose.shift())) {\n                try {\n                  if (x instanceof Function) x.call(obj);\n                  else if (x instanceof StructType) x.dispose();\n                  else if ('number' === typeof x) dealloc(x);\n                } catch (e) {\n                  console.warn(\n                    'ondispose() for',\n                    ctor.structName,\n                    '@',\n                    m,\n                    'threw. NOT propagating it.',\n                    e,\n                  );\n                }\n              }\n            } else if (obj.ondispose instanceof Function) {\n              try {\n                obj.ondispose();\n              } catch (e) {\n                console.warn(\n                  'ondispose() for',\n                  ctor.structName,\n                  '@',\n                  m,\n                  'threw. NOT propagating it.',\n                  e,\n                );\n              }\n            }\n            delete obj.ondispose;\n            if (ctor.debugFlags.__flags.dealloc) {\n              log(\n                'debug.dealloc:',\n                obj[xPtrPropName] ? 'EXTERNAL' : '',\n                ctor.structName,\n                'instance:',\n                ctor.structInfo.sizeof,\n                'bytes @' + m,\n              );\n            }\n            if (!obj[xPtrPropName]) dealloc(m);\n          }\n        };\n\n        const rop = (v) => {\n          return {\n            configurable: false,\n            writable: false,\n            iterable: false,\n            value: v,\n          };\n        };\n\n        const __allocStruct = function (ctor, obj, m) {\n          let fill = !m;\n          if (m) Object.defineProperty(obj, xPtrPropName, rop(m));\n          else {\n            m = alloc(ctor.structInfo.sizeof);\n            if (!m) toss('Allocation of', ctor.structName, 'structure failed.');\n          }\n          try {\n            if (ctor.debugFlags.__flags.alloc) {\n              log(\n                'debug.alloc:',\n                fill ? '' : 'EXTERNAL',\n                ctor.structName,\n                'instance:',\n                ctor.structInfo.sizeof,\n                'bytes @' + m,\n              );\n            }\n            if (fill) heap().fill(0, m, m + ctor.structInfo.sizeof);\n            __instancePointerMap.set(obj, m);\n          } catch (e) {\n            __freeStruct(ctor, obj, m);\n            throw e;\n          }\n        };\n\n        const __memoryDump = function () {\n          const p = this.pointer;\n          return p\n            ? new Uint8Array(heap().slice(p, p + this.structInfo.sizeof))\n            : null;\n        };\n\n        const __memberKey = (k) => memberPrefix + k + memberSuffix;\n        const __memberKeyProp = rop(__memberKey);\n\n        const __lookupMember = function (\n          structInfo,\n          memberName,\n          tossIfNotFound = true,\n        ) {\n          let m = structInfo.members[memberName];\n          if (!m && (memberPrefix || memberSuffix)) {\n            for (const v of Object.values(structInfo.members)) {\n              if (v.key === memberName) {\n                m = v;\n                break;\n              }\n            }\n            if (!m && tossIfNotFound) {\n              toss(\n                sPropName(structInfo.name, memberName),\n                'is not a mapped struct member.',\n              );\n            }\n          }\n          return m;\n        };\n\n        const __memberSignature = function f(\n          obj,\n          memberName,\n          emscriptenFormat = false,\n        ) {\n          if (!f._)\n            f._ = (x) =>\n              x.replace(/[^vipPsjrdcC]/g, '').replace(/[pPscC]/g, 'i');\n          const m = __lookupMember(obj.structInfo, memberName, true);\n          return emscriptenFormat ? f._(m.signature) : m.signature;\n        };\n\n        const __ptrPropDescriptor = {\n          configurable: false,\n          enumerable: false,\n          get: function () {\n            return __instancePointerMap.get(this);\n          },\n          set: () => toss(\"Cannot assign the 'pointer' property of a struct.\"),\n        };\n\n        const __structMemberKeys = rop(function () {\n          const a = [];\n          for (const k of Object.keys(this.structInfo.members)) {\n            a.push(this.memberKey(k));\n          }\n          return a;\n        });\n\n        const __utf8Decoder = new TextDecoder('utf-8');\n        const __utf8Encoder = new TextEncoder();\n\n        const __SAB =\n          'undefined' === typeof SharedArrayBuffer\n            ? function () {}\n            : SharedArrayBuffer;\n        const __utf8Decode = function (arrayBuffer, begin, end) {\n          return __utf8Decoder.decode(\n            arrayBuffer.buffer instanceof __SAB\n              ? arrayBuffer.slice(begin, end)\n              : arrayBuffer.subarray(begin, end),\n          );\n        };\n\n        const __memberIsString = function (\n          obj,\n          memberName,\n          tossIfNotFound = false,\n        ) {\n          const m = __lookupMember(obj.structInfo, memberName, tossIfNotFound);\n          return m && 1 === m.signature.length && 's' === m.signature[0]\n            ? m\n            : false;\n        };\n\n        const __affirmCStringSignature = function (member) {\n          if ('s' === member.signature) return;\n          toss(\n            'Invalid member type signature for C-string value:',\n            JSON.stringify(member),\n          );\n        };\n\n        const __memberToJsString = function f(obj, memberName) {\n          const m = __lookupMember(obj.structInfo, memberName, true);\n          __affirmCStringSignature(m);\n          const addr = obj[m.key];\n\n          if (!addr) return null;\n          let pos = addr;\n          const mem = heap();\n          for (; mem[pos] !== 0; ++pos) {}\n\n          return addr === pos ? '' : __utf8Decode(mem, addr, pos);\n        };\n\n        const __addOnDispose = function (obj, ...v) {\n          if (obj.ondispose) {\n            if (!Array.isArray(obj.ondispose)) {\n              obj.ondispose = [obj.ondispose];\n            }\n          } else {\n            obj.ondispose = [];\n          }\n          obj.ondispose.push(...v);\n        };\n\n        const __allocCString = function (str) {\n          const u = __utf8Encoder.encode(str);\n          const mem = alloc(u.length + 1);\n          if (!mem) toss('Allocation error while duplicating string:', str);\n          const h = heap();\n\n          h.set(u, mem);\n          h[mem + u.length] = 0;\n\n          return mem;\n        };\n\n        const __setMemberCString = function (obj, memberName, str) {\n          const m = __lookupMember(obj.structInfo, memberName, true);\n          __affirmCStringSignature(m);\n\n          const mem = __allocCString(str);\n          obj[m.key] = mem;\n          __addOnDispose(obj, mem);\n          return obj;\n        };\n\n        const StructType = function ctor(structName, structInfo) {\n          if (arguments[2] !== rop) {\n            toss(\n              'Do not call the StructType constructor',\n              'from client-level code.',\n            );\n          }\n          Object.defineProperties(this, {\n            structName: rop(structName),\n            structInfo: rop(structInfo),\n          });\n        };\n\n        StructType.prototype = Object.create(null, {\n          dispose: rop(function () {\n            __freeStruct(this.constructor, this);\n          }),\n          lookupMember: rop(function (memberName, tossIfNotFound = true) {\n            return __lookupMember(this.structInfo, memberName, tossIfNotFound);\n          }),\n          memberToJsString: rop(function (memberName) {\n            return __memberToJsString(this, memberName);\n          }),\n          memberIsString: rop(function (memberName, tossIfNotFound = true) {\n            return __memberIsString(this, memberName, tossIfNotFound);\n          }),\n          memberKey: __memberKeyProp,\n          memberKeys: __structMemberKeys,\n          memberSignature: rop(function (memberName, emscriptenFormat = false) {\n            return __memberSignature(this, memberName, emscriptenFormat);\n          }),\n          memoryDump: rop(__memoryDump),\n          pointer: __ptrPropDescriptor,\n          setMemberCString: rop(function (memberName, str) {\n            return __setMemberCString(this, memberName, str);\n          }),\n        });\n\n        Object.assign(StructType.prototype, {\n          addOnDispose: function (...v) {\n            __addOnDispose(this, ...v);\n            return this;\n          },\n        });\n\n        Object.defineProperties(StructType, {\n          allocCString: rop(__allocCString),\n          isA: rop((v) => v instanceof StructType),\n          hasExternalPointer: rop(\n            (v) => v instanceof StructType && !!v[xPtrPropName],\n          ),\n          memberKey: __memberKeyProp,\n        });\n\n        const isNumericValue = (v) =>\n          Number.isFinite(v) || v instanceof (BigInt || Number);\n\n        const makeMemberWrapper = function f(ctor, name, descr) {\n          if (!f._) {\n            f._ = { getters: {}, setters: {}, sw: {} };\n            const a = ['i', 'c', 'C', 'p', 'P', 's', 'f', 'd', 'v()'];\n            if (bigIntEnabled) a.push('j');\n            a.forEach(function (v) {\n              f._.getters[v] = sigDVGetter(v);\n              f._.setters[v] = sigDVSetter(v);\n              f._.sw[v] = sigDVSetWrapper(v);\n            });\n            const rxSig1 = /^[ipPsjfdcC]$/,\n              rxSig2 = /^[vipPsjfdcC]\\([ipPsjfdcC]*\\)$/;\n            f.sigCheck = function (obj, name, key, sig) {\n              if (Object.prototype.hasOwnProperty.call(obj, key)) {\n                toss(obj.structName, 'already has a property named', key + '.');\n              }\n              rxSig1.test(sig) ||\n                rxSig2.test(sig) ||\n                toss(\n                  'Malformed signature for',\n                  sPropName(obj.structName, name) + ':',\n                  sig,\n                );\n            };\n          }\n          const key = ctor.memberKey(name);\n          f.sigCheck(ctor.prototype, name, key, descr.signature);\n          descr.key = key;\n          descr.name = name;\n          const sigGlyph = sigLetter(descr.signature);\n          const xPropName = sPropName(ctor.prototype.structName, key);\n          const dbg = ctor.prototype.debugFlags.__flags;\n\n          const prop = Object.create(null);\n          prop.configurable = false;\n          prop.enumerable = false;\n          prop.get = function () {\n            if (dbg.getter) {\n              log(\n                'debug.getter:',\n                f._.getters[sigGlyph],\n                'for',\n                sigIR(sigGlyph),\n                xPropName,\n                '@',\n                this.pointer,\n                '+',\n                descr.offset,\n                'sz',\n                descr.sizeof,\n              );\n            }\n            let rc = new DataView(\n              heap().buffer,\n              this.pointer + descr.offset,\n              descr.sizeof,\n            )[f._.getters[sigGlyph]](0, isLittleEndian);\n            if (dbg.getter) log('debug.getter:', xPropName, 'result =', rc);\n            return rc;\n          };\n          if (descr.readOnly) {\n            prop.set = __propThrowOnSet(ctor.prototype.structName, key);\n          } else {\n            prop.set = function (v) {\n              if (dbg.setter) {\n                log(\n                  'debug.setter:',\n                  f._.setters[sigGlyph],\n                  'for',\n                  sigIR(sigGlyph),\n                  xPropName,\n                  '@',\n                  this.pointer,\n                  '+',\n                  descr.offset,\n                  'sz',\n                  descr.sizeof,\n                  v,\n                );\n              }\n              if (!this.pointer) {\n                toss('Cannot set struct property on disposed instance.');\n              }\n              if (null === v) v = 0;\n              else\n                while (!isNumericValue(v)) {\n                  if (\n                    isAutoPtrSig(descr.signature) &&\n                    v instanceof StructType\n                  ) {\n                    v = v.pointer || 0;\n                    if (dbg.setter)\n                      log('debug.setter:', xPropName, 'resolved to', v);\n                    break;\n                  }\n                  toss('Invalid value for pointer-type', xPropName + '.');\n                }\n              new DataView(\n                heap().buffer,\n                this.pointer + descr.offset,\n                descr.sizeof,\n              )[f._.setters[sigGlyph]](0, f._.sw[sigGlyph](v), isLittleEndian);\n            };\n          }\n          Object.defineProperty(ctor.prototype, key, prop);\n        };\n\n        const StructBinder = function StructBinder(structName, structInfo) {\n          if (1 === arguments.length) {\n            structInfo = structName;\n            structName = structInfo.name;\n          } else if (!structInfo.name) {\n            structInfo.name = structName;\n          }\n          if (!structName) toss('Struct name is required.');\n          let lastMember = false;\n          Object.keys(structInfo.members).forEach((k) => {\n            const m = structInfo.members[k];\n            if (!m.sizeof) toss(structName, 'member', k, 'is missing sizeof.');\n            else if (m.sizeof === 1) {\n              m.signature === 'c' ||\n                m.signature === 'C' ||\n                toss(\n                  'Unexpected sizeof==1 member',\n                  sPropName(structInfo.name, k),\n                  'with signature',\n                  m.signature,\n                );\n            } else {\n              if (0 !== m.sizeof % 4) {\n                console.warn(\n                  'Invalid struct member description =',\n                  m,\n                  'from',\n                  structInfo,\n                );\n                toss(\n                  structName,\n                  'member',\n                  k,\n                  'sizeof is not aligned. sizeof=' + m.sizeof,\n                );\n              }\n              if (0 !== m.offset % 4) {\n                console.warn(\n                  'Invalid struct member description =',\n                  m,\n                  'from',\n                  structInfo,\n                );\n                toss(\n                  structName,\n                  'member',\n                  k,\n                  'offset is not aligned. offset=' + m.offset,\n                );\n              }\n            }\n            if (!lastMember || lastMember.offset < m.offset) lastMember = m;\n          });\n          if (!lastMember) toss('No member property descriptions found.');\n          else if (structInfo.sizeof < lastMember.offset + lastMember.sizeof) {\n            toss(\n              'Invalid struct config:',\n              structName,\n              'max member offset (' + lastMember.offset + ') ',\n              'extends past end of struct (sizeof=' + structInfo.sizeof + ').',\n            );\n          }\n          const debugFlags = rop(SBF.__makeDebugFlags(StructBinder.debugFlags));\n\n          const StructCtor = function StructCtor(externalMemory) {\n            if (!(this instanceof StructCtor)) {\n              toss(\n                'The',\n                structName,\n                \"constructor may only be called via 'new'.\",\n              );\n            } else if (arguments.length) {\n              if (\n                externalMemory !== (externalMemory | 0) ||\n                externalMemory <= 0\n              ) {\n                toss('Invalid pointer value for', structName, 'constructor.');\n              }\n              __allocStruct(StructCtor, this, externalMemory);\n            } else {\n              __allocStruct(StructCtor, this);\n            }\n          };\n          Object.defineProperties(StructCtor, {\n            debugFlags: debugFlags,\n            isA: rop((v) => v instanceof StructCtor),\n            memberKey: __memberKeyProp,\n            memberKeys: __structMemberKeys,\n            methodInfoForKey: rop(function (mKey) {}),\n            structInfo: rop(structInfo),\n            structName: rop(structName),\n          });\n          StructCtor.prototype = new StructType(structName, structInfo, rop);\n          Object.defineProperties(StructCtor.prototype, {\n            debugFlags: debugFlags,\n            constructor: rop(StructCtor),\n          });\n          Object.keys(structInfo.members).forEach((name) =>\n            makeMemberWrapper(StructCtor, name, structInfo.members[name]),\n          );\n          return StructCtor;\n        };\n        StructBinder.StructType = StructType;\n        StructBinder.config = config;\n        StructBinder.allocCString = __allocCString;\n        if (!StructBinder.debugFlags) {\n          StructBinder.debugFlags = SBF.__makeDebugFlags(SBF.debugFlags);\n        }\n        return StructBinder;\n      };\n\n      self.sqlite3ApiBootstrap.initializers.push(function (sqlite3) {\n        'use strict';\n        const toss = (...args) => {\n          throw new Error(args.join(' '));\n        };\n        const toss3 = sqlite3.SQLite3Error.toss;\n        const capi = sqlite3.capi,\n          wasm = sqlite3.wasm,\n          util = sqlite3.util;\n        self.WhWasmUtilInstaller(wasm);\n        delete self.WhWasmUtilInstaller;\n\n        if (0) {\n          const dealloc = wasm.exports[sqlite3.config.deallocExportName];\n          const nFunc = wasm.functionTable().length;\n          let i;\n          for (i = 0; i < nFunc; ++i) {\n            const e = wasm.functionEntry(i);\n            if (dealloc === e) {\n              capi.SQLITE_WASM_DEALLOC = i;\n              break;\n            }\n          }\n          if (dealloc !== wasm.functionEntry(capi.SQLITE_WASM_DEALLOC)) {\n            toss(\n              'Internal error: cannot find function pointer for SQLITE_WASM_DEALLOC.',\n            );\n          }\n        }\n\n        wasm.bindingSignatures = [\n          ['sqlite3_aggregate_context', 'void*', 'sqlite3_context*', 'int'],\n\n          ['sqlite3_bind_double', 'int', 'sqlite3_stmt*', 'int', 'f64'],\n          ['sqlite3_bind_int', 'int', 'sqlite3_stmt*', 'int', 'int'],\n          ['sqlite3_bind_null', undefined, 'sqlite3_stmt*', 'int'],\n          ['sqlite3_bind_parameter_count', 'int', 'sqlite3_stmt*'],\n          ['sqlite3_bind_parameter_index', 'int', 'sqlite3_stmt*', 'string'],\n          [\n            'sqlite3_bind_pointer',\n            'int',\n            'sqlite3_stmt*',\n            'int',\n            '*',\n            'string:static',\n            '*',\n          ],\n          [\n            'sqlite3_busy_handler',\n            'int',\n            [\n              'sqlite3*',\n              new wasm.xWrap.FuncPtrAdapter({\n                signature: 'i(pi)',\n                contextKey: (argv, argIndex) => argv[0],\n              }),\n              '*',\n            ],\n          ],\n          ['sqlite3_busy_timeout', 'int', 'sqlite3*', 'int'],\n\n          ['sqlite3_changes', 'int', 'sqlite3*'],\n          ['sqlite3_clear_bindings', 'int', 'sqlite3_stmt*'],\n          ['sqlite3_collation_needed', 'int', 'sqlite3*', '*', '*'],\n          ['sqlite3_column_blob', '*', 'sqlite3_stmt*', 'int'],\n          ['sqlite3_column_bytes', 'int', 'sqlite3_stmt*', 'int'],\n          ['sqlite3_column_count', 'int', 'sqlite3_stmt*'],\n          ['sqlite3_column_double', 'f64', 'sqlite3_stmt*', 'int'],\n          ['sqlite3_column_int', 'int', 'sqlite3_stmt*', 'int'],\n          ['sqlite3_column_name', 'string', 'sqlite3_stmt*', 'int'],\n          ['sqlite3_column_text', 'string', 'sqlite3_stmt*', 'int'],\n          ['sqlite3_column_type', 'int', 'sqlite3_stmt*', 'int'],\n          ['sqlite3_column_value', 'sqlite3_value*', 'sqlite3_stmt*', 'int'],\n          [\n            'sqlite3_commit_hook',\n            'void*',\n            [\n              'sqlite3*',\n              new wasm.xWrap.FuncPtrAdapter({\n                name: 'sqlite3_commit_hook',\n                signature: 'i(p)',\n                contextKey: (argv) => argv[0],\n              }),\n              '*',\n            ],\n          ],\n          ['sqlite3_compileoption_get', 'string', 'int'],\n          ['sqlite3_compileoption_used', 'int', 'string'],\n          ['sqlite3_complete', 'int', 'string:flexible'],\n          ['sqlite3_context_db_handle', 'sqlite3*', 'sqlite3_context*'],\n\n          ['sqlite3_data_count', 'int', 'sqlite3_stmt*'],\n          ['sqlite3_db_filename', 'string', 'sqlite3*', 'string'],\n          ['sqlite3_db_handle', 'sqlite3*', 'sqlite3_stmt*'],\n          ['sqlite3_db_name', 'string', 'sqlite3*', 'int'],\n          ['sqlite3_db_status', 'int', 'sqlite3*', 'int', '*', '*', 'int'],\n          ['sqlite3_errcode', 'int', 'sqlite3*'],\n          ['sqlite3_errmsg', 'string', 'sqlite3*'],\n          ['sqlite3_error_offset', 'int', 'sqlite3*'],\n          ['sqlite3_errstr', 'string', 'int'],\n          [\n            'sqlite3_exec',\n            'int',\n            [\n              'sqlite3*',\n              'string:flexible',\n              new wasm.xWrap.FuncPtrAdapter({\n                signature: 'i(pipp)',\n                bindScope: 'transient',\n                callProxy: (callback) => {\n                  let aNames;\n                  return (pVoid, nCols, pColVals, pColNames) => {\n                    try {\n                      const aVals = wasm.cArgvToJs(nCols, pColVals);\n                      if (!aNames) aNames = wasm.cArgvToJs(nCols, pColNames);\n                      return callback(aVals, aNames) | 0;\n                    } catch (e) {\n                      return e.resultCode || capi.SQLITE_ERROR;\n                    }\n                  };\n                },\n              }),\n              '*',\n              '**',\n            ],\n          ],\n          ['sqlite3_expanded_sql', 'string', 'sqlite3_stmt*'],\n          ['sqlite3_extended_errcode', 'int', 'sqlite3*'],\n          ['sqlite3_extended_result_codes', 'int', 'sqlite3*', 'int'],\n          ['sqlite3_file_control', 'int', 'sqlite3*', 'string', 'int', '*'],\n          ['sqlite3_finalize', 'int', 'sqlite3_stmt*'],\n          ['sqlite3_free', undefined, '*'],\n          ['sqlite3_get_auxdata', '*', 'sqlite3_context*', 'int'],\n          ['sqlite3_initialize', undefined],\n\n          ['sqlite3_keyword_count', 'int'],\n          ['sqlite3_keyword_name', 'int', ['int', '**', '*']],\n          ['sqlite3_keyword_check', 'int', ['string', 'int']],\n          ['sqlite3_libversion', 'string'],\n          ['sqlite3_libversion_number', 'int'],\n          ['sqlite3_limit', 'int', ['sqlite3*', 'int', 'int']],\n          ['sqlite3_malloc', '*', 'int'],\n          ['sqlite3_open', 'int', 'string', '*'],\n          ['sqlite3_open_v2', 'int', 'string', '*', 'int', 'string'],\n\n          [\n            'sqlite3_progress_handler',\n            undefined,\n            [\n              'sqlite3*',\n              'int',\n              new wasm.xWrap.FuncPtrAdapter({\n                name: 'xProgressHandler',\n                signature: 'i(p)',\n                bindScope: 'context',\n                contextKey: (argv, argIndex) => argv[0],\n              }),\n              '*',\n            ],\n          ],\n          ['sqlite3_realloc', '*', '*', 'int'],\n          ['sqlite3_reset', 'int', 'sqlite3_stmt*'],\n\n          [\n            'sqlite3_result_blob',\n            undefined,\n            'sqlite3_context*',\n            '*',\n            'int',\n            '*',\n          ],\n          ['sqlite3_result_double', undefined, 'sqlite3_context*', 'f64'],\n          [\n            'sqlite3_result_error',\n            undefined,\n            'sqlite3_context*',\n            'string',\n            'int',\n          ],\n          ['sqlite3_result_error_code', undefined, 'sqlite3_context*', 'int'],\n          ['sqlite3_result_error_nomem', undefined, 'sqlite3_context*'],\n          ['sqlite3_result_error_toobig', undefined, 'sqlite3_context*'],\n          ['sqlite3_result_int', undefined, 'sqlite3_context*', 'int'],\n          ['sqlite3_result_null', undefined, 'sqlite3_context*'],\n          [\n            'sqlite3_result_pointer',\n            undefined,\n            'sqlite3_context*',\n            '*',\n            'string:static',\n            '*',\n          ],\n          ['sqlite3_result_subtype', undefined, 'sqlite3_value*', 'int'],\n          [\n            'sqlite3_result_text',\n            undefined,\n            'sqlite3_context*',\n            'string',\n            'int',\n            '*',\n          ],\n          ['sqlite3_result_zeroblob', undefined, 'sqlite3_context*', 'int'],\n          [\n            'sqlite3_rollback_hook',\n            'void*',\n            [\n              'sqlite3*',\n              new wasm.xWrap.FuncPtrAdapter({\n                name: 'sqlite3_rollback_hook',\n                signature: 'v(p)',\n                contextKey: (argv) => argv[0],\n              }),\n              '*',\n            ],\n          ],\n          [\n            'sqlite3_set_authorizer',\n            'int',\n            [\n              'sqlite3*',\n              new wasm.xWrap.FuncPtrAdapter({\n                name: 'sqlite3_set_authorizer::xAuth',\n                signature: 'i(pi' + 'ssss)',\n                contextKey: (argv, argIndex) => argv[0],\n                callProxy: (callback) => {\n                  return (pV, iCode, s0, s1, s2, s3) => {\n                    try {\n                      s0 = s0 && wasm.cstrToJs(s0);\n                      s1 = s1 && wasm.cstrToJs(s1);\n                      s2 = s2 && wasm.cstrToJs(s2);\n                      s3 = s3 && wasm.cstrToJs(s3);\n                      return callback(pV, iCode, s0, s1, s2, s3) || 0;\n                    } catch (e) {\n                      return e.resultCode || capi.SQLITE_ERROR;\n                    }\n                  };\n                },\n              }),\n              '*',\n            ],\n          ],\n          [\n            'sqlite3_set_auxdata',\n            undefined,\n            [\n              'sqlite3_context*',\n              'int',\n              '*',\n              new wasm.xWrap.FuncPtrAdapter({\n                name: 'xDestroyAuxData',\n                signature: 'v(*)',\n                contextKey: (argv, argIndex) => argv[0],\n              }),\n            ],\n          ],\n          ['sqlite3_shutdown', undefined],\n          ['sqlite3_sourceid', 'string'],\n          ['sqlite3_sql', 'string', 'sqlite3_stmt*'],\n          ['sqlite3_status', 'int', 'int', '*', '*', 'int'],\n          ['sqlite3_step', 'int', 'sqlite3_stmt*'],\n          ['sqlite3_stmt_isexplain', 'int', ['sqlite3_stmt*']],\n          ['sqlite3_stmt_readonly', 'int', ['sqlite3_stmt*']],\n          ['sqlite3_stmt_status', 'int', 'sqlite3_stmt*', 'int', 'int'],\n          ['sqlite3_strglob', 'int', 'string', 'string'],\n          ['sqlite3_stricmp', 'int', 'string', 'string'],\n          ['sqlite3_strlike', 'int', 'string', 'string', 'int'],\n          ['sqlite3_strnicmp', 'int', 'string', 'string', 'int'],\n          [\n            'sqlite3_table_column_metadata',\n            'int',\n            'sqlite3*',\n            'string',\n            'string',\n            'string',\n            '**',\n            '**',\n            '*',\n            '*',\n            '*',\n          ],\n          ['sqlite3_total_changes', 'int', 'sqlite3*'],\n          [\n            'sqlite3_trace_v2',\n            'int',\n            [\n              'sqlite3*',\n              'int',\n              new wasm.xWrap.FuncPtrAdapter({\n                name: 'sqlite3_trace_v2::callback',\n                signature: 'i(ippp)',\n                contextKey: (argv, argIndex) => argv[0],\n              }),\n              '*',\n            ],\n          ],\n          ['sqlite3_txn_state', 'int', ['sqlite3*', 'string']],\n\n          ['sqlite3_uri_boolean', 'int', 'sqlite3_filename', 'string', 'int'],\n          ['sqlite3_uri_key', 'string', 'sqlite3_filename', 'int'],\n          ['sqlite3_uri_parameter', 'string', 'sqlite3_filename', 'string'],\n          ['sqlite3_user_data', 'void*', 'sqlite3_context*'],\n          ['sqlite3_value_blob', '*', 'sqlite3_value*'],\n          ['sqlite3_value_bytes', 'int', 'sqlite3_value*'],\n          ['sqlite3_value_double', 'f64', 'sqlite3_value*'],\n          ['sqlite3_value_dup', 'sqlite3_value*', 'sqlite3_value*'],\n          ['sqlite3_value_free', undefined, 'sqlite3_value*'],\n          ['sqlite3_value_frombind', 'int', 'sqlite3_value*'],\n          ['sqlite3_value_int', 'int', 'sqlite3_value*'],\n          ['sqlite3_value_nochange', 'int', 'sqlite3_value*'],\n          ['sqlite3_value_numeric_type', 'int', 'sqlite3_value*'],\n          ['sqlite3_value_pointer', '*', 'sqlite3_value*', 'string:static'],\n          ['sqlite3_value_subtype', 'int', 'sqlite3_value*'],\n          ['sqlite3_value_text', 'string', 'sqlite3_value*'],\n          ['sqlite3_value_type', 'int', 'sqlite3_value*'],\n          ['sqlite3_vfs_find', '*', 'string'],\n          ['sqlite3_vfs_register', 'int', 'sqlite3_vfs*', 'int'],\n          ['sqlite3_vfs_unregister', 'int', 'sqlite3_vfs*'],\n        ];\n\n        if (false && wasm.compileOptionUsed('SQLITE_ENABLE_NORMALIZE')) {\n          wasm.bindingSignatures.push([\n            'sqlite3_normalized_sql',\n            'string',\n            'sqlite3_stmt*',\n          ]);\n        }\n\n        wasm.bindingSignatures.int64 = [\n          ['sqlite3_bind_int64', 'int', ['sqlite3_stmt*', 'int', 'i64']],\n          ['sqlite3_changes64', 'i64', ['sqlite3*']],\n          ['sqlite3_column_int64', 'i64', ['sqlite3_stmt*', 'int']],\n          [\n            'sqlite3_create_module',\n            'int',\n            ['sqlite3*', 'string', 'sqlite3_module*', '*'],\n          ],\n          [\n            'sqlite3_create_module_v2',\n            'int',\n            ['sqlite3*', 'string', 'sqlite3_module*', '*', '*'],\n          ],\n          ['sqlite3_declare_vtab', 'int', ['sqlite3*', 'string:flexible']],\n          [\n            'sqlite3_deserialize',\n            'int',\n            'sqlite3*',\n            'string',\n            '*',\n            'i64',\n            'i64',\n            'int',\n          ],\n          ['sqlite3_drop_modules', 'int', ['sqlite3*', '**']],\n          ['sqlite3_last_insert_rowid', 'i64', ['sqlite3*']],\n          ['sqlite3_malloc64', '*', 'i64'],\n          ['sqlite3_msize', 'i64', '*'],\n          ['sqlite3_overload_function', 'int', ['sqlite3*', 'string', 'int']],\n          ['sqlite3_preupdate_blobwrite', 'int', 'sqlite3*'],\n          ['sqlite3_preupdate_count', 'int', 'sqlite3*'],\n          ['sqlite3_preupdate_depth', 'int', 'sqlite3*'],\n          [\n            'sqlite3_preupdate_hook',\n            '*',\n            [\n              'sqlite3*',\n              new wasm.xWrap.FuncPtrAdapter({\n                name: 'sqlite3_preupdate_hook',\n                signature: 'v(ppippjj)',\n                contextKey: (argv) => argv[0],\n                callProxy: (callback) => {\n                  return (p, db, op, zDb, zTbl, iKey1, iKey2) => {\n                    callback(\n                      p,\n                      db,\n                      op,\n                      wasm.cstrToJs(zDb),\n                      wasm.cstrToJs(zTbl),\n                      iKey1,\n                      iKey2,\n                    );\n                  };\n                },\n              }),\n              '*',\n            ],\n          ],\n          ['sqlite3_preupdate_new', 'int', ['sqlite3*', 'int', '**']],\n          ['sqlite3_preupdate_old', 'int', ['sqlite3*', 'int', '**']],\n          ['sqlite3_realloc64', '*', '*', 'i64'],\n          ['sqlite3_result_int64', undefined, '*', 'i64'],\n          ['sqlite3_result_zeroblob64', 'int', '*', 'i64'],\n          ['sqlite3_serialize', '*', 'sqlite3*', 'string', '*', 'int'],\n          ['sqlite3_set_last_insert_rowid', undefined, ['sqlite3*', 'i64']],\n          ['sqlite3_status64', 'int', 'int', '*', '*', 'int'],\n          ['sqlite3_total_changes64', 'i64', ['sqlite3*']],\n          [\n            'sqlite3_update_hook',\n            '*',\n            [\n              'sqlite3*',\n              new wasm.xWrap.FuncPtrAdapter({\n                name: 'sqlite3_update_hook',\n                signature: 'v(iippj)',\n                contextKey: (argv) => argv[0],\n                callProxy: (callback) => {\n                  return (p, op, z0, z1, rowid) => {\n                    callback(\n                      p,\n                      op,\n                      wasm.cstrToJs(z0),\n                      wasm.cstrToJs(z1),\n                      rowid,\n                    );\n                  };\n                },\n              }),\n              '*',\n            ],\n          ],\n          ['sqlite3_uri_int64', 'i64', ['sqlite3_filename', 'string', 'i64']],\n          ['sqlite3_value_int64', 'i64', 'sqlite3_value*'],\n          ['sqlite3_vtab_collation', 'string', 'sqlite3_index_info*', 'int'],\n          ['sqlite3_vtab_distinct', 'int', 'sqlite3_index_info*'],\n          ['sqlite3_vtab_in', 'int', 'sqlite3_index_info*', 'int', 'int'],\n          ['sqlite3_vtab_in_first', 'int', 'sqlite3_value*', '**'],\n          ['sqlite3_vtab_in_next', 'int', 'sqlite3_value*', '**'],\n\n          ['sqlite3_vtab_nochange', 'int', 'sqlite3_context*'],\n          ['sqlite3_vtab_on_conflict', 'int', 'sqlite3*'],\n          ['sqlite3_vtab_rhs_value', 'int', 'sqlite3_index_info*', 'int', '**'],\n        ];\n\n        if (wasm.bigIntEnabled && !!wasm.exports.sqlite3changegroup_add) {\n          const __ipsProxy = {\n            signature: 'i(ps)',\n            callProxy: (callback) => {\n              return (p, s) => {\n                try {\n                  return callback(p, wasm.cstrToJs(s)) | 0;\n                } catch (e) {\n                  return e.resultCode || capi.SQLITE_ERROR;\n                }\n              };\n            },\n          };\n\n          wasm.bindingSignatures.int64.push(\n            ...[\n              [\n                'sqlite3changegroup_add',\n                'int',\n                ['sqlite3_changegroup*', 'int', 'void*'],\n              ],\n              [\n                'sqlite3changegroup_add_strm',\n                'int',\n                [\n                  'sqlite3_changegroup*',\n                  new wasm.xWrap.FuncPtrAdapter({\n                    name: 'xInput',\n                    signature: 'i(ppp)',\n                    bindScope: 'transient',\n                  }),\n                  'void*',\n                ],\n              ],\n              [\n                'sqlite3changegroup_delete',\n                undefined,\n                ['sqlite3_changegroup*'],\n              ],\n              ['sqlite3changegroup_new', 'int', ['**']],\n              [\n                'sqlite3changegroup_output',\n                'int',\n                ['sqlite3_changegroup*', 'int*', '**'],\n              ],\n              [\n                'sqlite3changegroup_output_strm',\n                'int',\n                [\n                  'sqlite3_changegroup*',\n                  new wasm.xWrap.FuncPtrAdapter({\n                    name: 'xOutput',\n                    signature: 'i(ppi)',\n                    bindScope: 'transient',\n                  }),\n                  'void*',\n                ],\n              ],\n              [\n                'sqlite3changeset_apply',\n                'int',\n                [\n                  'sqlite3*',\n                  'int',\n                  'void*',\n                  new wasm.xWrap.FuncPtrAdapter({\n                    name: 'xFilter',\n                    bindScope: 'transient',\n                    ...__ipsProxy,\n                  }),\n                  new wasm.xWrap.FuncPtrAdapter({\n                    name: 'xConflict',\n                    signature: 'i(pip)',\n                    bindScope: 'transient',\n                  }),\n                  'void*',\n                ],\n              ],\n              [\n                'sqlite3changeset_apply_strm',\n                'int',\n                [\n                  'sqlite3*',\n                  new wasm.xWrap.FuncPtrAdapter({\n                    name: 'xInput',\n                    signature: 'i(ppp)',\n                    bindScope: 'transient',\n                  }),\n                  'void*',\n                  new wasm.xWrap.FuncPtrAdapter({\n                    name: 'xFilter',\n                    bindScope: 'transient',\n                    ...__ipsProxy,\n                  }),\n                  new wasm.xWrap.FuncPtrAdapter({\n                    name: 'xConflict',\n                    signature: 'i(pip)',\n                    bindScope: 'transient',\n                  }),\n                  'void*',\n                ],\n              ],\n              [\n                'sqlite3changeset_apply_v2',\n                'int',\n                [\n                  'sqlite3*',\n                  'int',\n                  'void*',\n                  new wasm.xWrap.FuncPtrAdapter({\n                    name: 'xFilter',\n                    bindScope: 'transient',\n                    ...__ipsProxy,\n                  }),\n                  new wasm.xWrap.FuncPtrAdapter({\n                    name: 'xConflict',\n                    signature: 'i(pip)',\n                    bindScope: 'transient',\n                  }),\n                  'void*',\n                  '**',\n                  'int*',\n                  'int',\n                ],\n              ],\n              [\n                'sqlite3changeset_apply_v2_strm',\n                'int',\n                [\n                  'sqlite3*',\n                  new wasm.xWrap.FuncPtrAdapter({\n                    name: 'xInput',\n                    signature: 'i(ppp)',\n                    bindScope: 'transient',\n                  }),\n                  'void*',\n                  new wasm.xWrap.FuncPtrAdapter({\n                    name: 'xFilter',\n                    bindScope: 'transient',\n                    ...__ipsProxy,\n                  }),\n                  new wasm.xWrap.FuncPtrAdapter({\n                    name: 'xConflict',\n                    signature: 'i(pip)',\n                    bindScope: 'transient',\n                  }),\n                  'void*',\n                  '**',\n                  'int*',\n                  'int',\n                ],\n              ],\n              [\n                'sqlite3changeset_concat',\n                'int',\n                ['int', 'void*', 'int', 'void*', 'int*', '**'],\n              ],\n              [\n                'sqlite3changeset_concat_strm',\n                'int',\n                [\n                  new wasm.xWrap.FuncPtrAdapter({\n                    name: 'xInputA',\n                    signature: 'i(ppp)',\n                    bindScope: 'transient',\n                  }),\n                  'void*',\n                  new wasm.xWrap.FuncPtrAdapter({\n                    name: 'xInputB',\n                    signature: 'i(ppp)',\n                    bindScope: 'transient',\n                  }),\n                  'void*',\n                  new wasm.xWrap.FuncPtrAdapter({\n                    name: 'xOutput',\n                    signature: 'i(ppi)',\n                    bindScope: 'transient',\n                  }),\n                  'void*',\n                ],\n              ],\n              [\n                'sqlite3changeset_conflict',\n                'int',\n                ['sqlite3_changeset_iter*', 'int', '**'],\n              ],\n              ['sqlite3changeset_finalize', 'int', ['sqlite3_changeset_iter*']],\n              [\n                'sqlite3changeset_fk_conflicts',\n                'int',\n                ['sqlite3_changeset_iter*', 'int*'],\n              ],\n              [\n                'sqlite3changeset_invert',\n                'int',\n                ['int', 'void*', 'int*', '**'],\n              ],\n              [\n                'sqlite3changeset_invert_strm',\n                'int',\n                [\n                  new wasm.xWrap.FuncPtrAdapter({\n                    name: 'xInput',\n                    signature: 'i(ppp)',\n                    bindScope: 'transient',\n                  }),\n                  'void*',\n                  new wasm.xWrap.FuncPtrAdapter({\n                    name: 'xOutput',\n                    signature: 'i(ppi)',\n                    bindScope: 'transient',\n                  }),\n                  'void*',\n                ],\n              ],\n              [\n                'sqlite3changeset_new',\n                'int',\n                ['sqlite3_changeset_iter*', 'int', '**'],\n              ],\n              ['sqlite3changeset_next', 'int', ['sqlite3_changeset_iter*']],\n              [\n                'sqlite3changeset_old',\n                'int',\n                ['sqlite3_changeset_iter*', 'int', '**'],\n              ],\n              [\n                'sqlite3changeset_op',\n                'int',\n                ['sqlite3_changeset_iter*', '**', 'int*', 'int*', 'int*'],\n              ],\n              [\n                'sqlite3changeset_pk',\n                'int',\n                ['sqlite3_changeset_iter*', '**', 'int*'],\n              ],\n              ['sqlite3changeset_start', 'int', ['**', 'int', '*']],\n              [\n                'sqlite3changeset_start_strm',\n                'int',\n                [\n                  '**',\n                  new wasm.xWrap.FuncPtrAdapter({\n                    name: 'xInput',\n                    signature: 'i(ppp)',\n                    bindScope: 'transient',\n                  }),\n                  'void*',\n                ],\n              ],\n              ['sqlite3changeset_start_v2', 'int', ['**', 'int', '*', 'int']],\n              [\n                'sqlite3changeset_start_v2_strm',\n                'int',\n                [\n                  '**',\n                  new wasm.xWrap.FuncPtrAdapter({\n                    name: 'xInput',\n                    signature: 'i(ppp)',\n                    bindScope: 'transient',\n                  }),\n                  'void*',\n                  'int',\n                ],\n              ],\n              ['sqlite3session_attach', 'int', ['sqlite3_session*', 'string']],\n              [\n                'sqlite3session_changeset',\n                'int',\n                ['sqlite3_session*', 'int*', '**'],\n              ],\n              ['sqlite3session_changeset_size', 'i64', ['sqlite3_session*']],\n              [\n                'sqlite3session_changeset_strm',\n                'int',\n                [\n                  'sqlite3_session*',\n                  new wasm.xWrap.FuncPtrAdapter({\n                    name: 'xOutput',\n                    signature: 'i(ppp)',\n                    bindScope: 'transient',\n                  }),\n                  'void*',\n                ],\n              ],\n              ['sqlite3session_config', 'int', ['int', 'void*']],\n              ['sqlite3session_create', 'int', ['sqlite3*', 'string', '**']],\n\n              [\n                'sqlite3session_diff',\n                'int',\n                ['sqlite3_session*', 'string', 'string', '**'],\n              ],\n              ['sqlite3session_enable', 'int', ['sqlite3_session*', 'int']],\n              ['sqlite3session_indirect', 'int', ['sqlite3_session*', 'int']],\n              ['sqlite3session_isempty', 'int', ['sqlite3_session*']],\n              ['sqlite3session_memory_used', 'i64', ['sqlite3_session*']],\n              [\n                'sqlite3session_object_config',\n                'int',\n                ['sqlite3_session*', 'int', 'void*'],\n              ],\n              [\n                'sqlite3session_patchset',\n                'int',\n                ['sqlite3_session*', '*', '**'],\n              ],\n              [\n                'sqlite3session_patchset_strm',\n                'int',\n                [\n                  'sqlite3_session*',\n                  new wasm.xWrap.FuncPtrAdapter({\n                    name: 'xOutput',\n                    signature: 'i(ppp)',\n                    bindScope: 'transient',\n                  }),\n                  'void*',\n                ],\n              ],\n              [\n                'sqlite3session_table_filter',\n                undefined,\n                [\n                  'sqlite3_session*',\n                  new wasm.xWrap.FuncPtrAdapter({\n                    name: 'xFilter',\n                    ...__ipsProxy,\n                    contextKey: (argv, argIndex) => argv[0],\n                  }),\n                  '*',\n                ],\n              ],\n            ],\n          );\n        }\n\n        wasm.bindingSignatures.wasm = [\n          ['sqlite3_wasm_db_reset', 'int', 'sqlite3*'],\n          ['sqlite3_wasm_db_vfs', 'sqlite3_vfs*', 'sqlite3*', 'string'],\n          [\n            'sqlite3_wasm_vfs_create_file',\n            'int',\n            'sqlite3_vfs*',\n            'string',\n            '*',\n            'int',\n          ],\n          ['sqlite3_wasm_vfs_unlink', 'int', 'sqlite3_vfs*', 'string'],\n        ];\n\n        sqlite3.StructBinder = self.Jaccwabyt({\n          heap: 0 ? wasm.memory : wasm.heap8u,\n          alloc: wasm.alloc,\n          dealloc: wasm.dealloc,\n          bigIntEnabled: wasm.bigIntEnabled,\n          memberPrefix: '$',\n        });\n        delete self.Jaccwabyt;\n\n        {\n          const __xString = wasm.xWrap.argAdapter('string');\n          wasm.xWrap.argAdapter('string:flexible', (v) =>\n            __xString(util.flexibleString(v)),\n          );\n\n          wasm.xWrap.argAdapter(\n            'string:static',\n            function (v) {\n              if (wasm.isPtr(v)) return v;\n              v = '' + v;\n              let rc = this[v];\n              return rc || (this[v] = wasm.allocCString(v));\n            }.bind(Object.create(null)),\n          );\n\n          const __xArgPtr = wasm.xWrap.argAdapter('*');\n          const nilType = function () {};\n          wasm.xWrap.argAdapter('sqlite3_filename', __xArgPtr)(\n            'sqlite3_context*',\n            __xArgPtr,\n          )('sqlite3_value*', __xArgPtr)('void*', __xArgPtr)(\n            'sqlite3_changegroup*',\n            __xArgPtr,\n          )('sqlite3_changeset_iter*', __xArgPtr)(\n            'sqlite3_session*',\n            __xArgPtr,\n          )('sqlite3_stmt*', (v) =>\n            __xArgPtr(\n              v instanceof (sqlite3?.oo1?.Stmt || nilType) ? v.pointer : v,\n            ),\n          )('sqlite3*', (v) =>\n            __xArgPtr(\n              v instanceof (sqlite3?.oo1?.DB || nilType) ? v.pointer : v,\n            ),\n          )('sqlite3_index_info*', (v) =>\n            __xArgPtr(\n              v instanceof (capi.sqlite3_index_info || nilType) ? v.pointer : v,\n            ),\n          )('sqlite3_module*', (v) =>\n            __xArgPtr(\n              v instanceof (capi.sqlite3_module || nilType) ? v.pointer : v,\n            ),\n          )('sqlite3_vfs*', (v) => {\n            if ('string' === typeof v) {\n              return (\n                capi.sqlite3_vfs_find(v) ||\n                sqlite3.SQLite3Error.toss(\n                  capi.SQLITE_NOTFOUND,\n                  'Unknown sqlite3_vfs name:',\n                  v,\n                )\n              );\n            }\n            return __xArgPtr(\n              v instanceof (capi.sqlite3_vfs || nilType) ? v.pointer : v,\n            );\n          });\n\n          const __xRcPtr = wasm.xWrap.resultAdapter('*');\n          wasm.xWrap.resultAdapter('sqlite3*', __xRcPtr)(\n            'sqlite3_context*',\n            __xRcPtr,\n          )('sqlite3_stmt*', __xRcPtr)('sqlite3_value*', __xRcPtr)(\n            'sqlite3_vfs*',\n            __xRcPtr,\n          )('void*', __xRcPtr);\n\n          for (const e of wasm.bindingSignatures) {\n            capi[e[0]] = wasm.xWrap.apply(null, e);\n          }\n          for (const e of wasm.bindingSignatures.wasm) {\n            wasm[e[0]] = wasm.xWrap.apply(null, e);\n          }\n\n          const fI64Disabled = function (fname) {\n            return () =>\n              toss(\n                fname + '() is unavailable due to lack',\n                'of BigInt support in this build.',\n              );\n          };\n          for (const e of wasm.bindingSignatures.int64) {\n            capi[e[0]] = wasm.bigIntEnabled\n              ? wasm.xWrap.apply(null, e)\n              : fI64Disabled(e[0]);\n          }\n\n          delete wasm.bindingSignatures;\n\n          if (wasm.exports.sqlite3_wasm_db_error) {\n            const __db_err = wasm.xWrap(\n              'sqlite3_wasm_db_error',\n              'int',\n              'sqlite3*',\n              'int',\n              'string',\n            );\n\n            util.sqlite3_wasm_db_error = function (pDb, resultCode, message) {\n              if (resultCode instanceof sqlite3.WasmAllocError) {\n                resultCode = capi.SQLITE_NOMEM;\n                message = 0;\n              } else if (resultCode instanceof Error) {\n                message = message || '' + resultCode;\n                resultCode = resultCode.resultCode || capi.SQLITE_ERROR;\n              }\n              return pDb ? __db_err(pDb, resultCode, message) : resultCode;\n            };\n          } else {\n            util.sqlite3_wasm_db_error = function (pDb, errCode, msg) {\n              console.warn(\n                'sqlite3_wasm_db_error() is not exported.',\n                arguments,\n              );\n              return errCode;\n            };\n          }\n        }\n\n        {\n          const cJson = wasm.xCall('sqlite3_wasm_enum_json');\n          if (!cJson) {\n            toss(\n              \"Maintenance required: increase sqlite3_wasm_enum_json()'s\",\n              'static buffer size!',\n            );\n          }\n\n          wasm.ctype = JSON.parse(wasm.cstrToJs(cJson));\n\n          const defineGroups = [\n            'access',\n            'authorizer',\n            'blobFinalizers',\n            'changeset',\n            'config',\n            'dataTypes',\n            'dbConfig',\n            'dbStatus',\n            'encodings',\n            'fcntl',\n            'flock',\n            'ioCap',\n            'limits',\n            'openFlags',\n            'prepareFlags',\n            'resultCodes',\n            'sqlite3Status',\n            'stmtStatus',\n            'syncFlags',\n            'trace',\n            'txnState',\n            'udfFlags',\n            'version',\n          ];\n          if (wasm.bigIntEnabled) {\n            defineGroups.push('serialize', 'session', 'vtab');\n          }\n          for (const t of defineGroups) {\n            for (const e of Object.entries(wasm.ctype[t])) {\n              capi[e[0]] = e[1];\n            }\n          }\n          if (!wasm.functionEntry(capi.SQLITE_WASM_DEALLOC)) {\n            toss(\n              'Internal error: cannot resolve exported function',\n              'entry SQLITE_WASM_DEALLOC (==' + capi.SQLITE_WASM_DEALLOC + ').',\n            );\n          }\n          const __rcMap = Object.create(null);\n          for (const t of ['resultCodes']) {\n            for (const e of Object.entries(wasm.ctype[t])) {\n              __rcMap[e[1]] = e[0];\n            }\n          }\n\n          capi.sqlite3_js_rc_str = (rc) => __rcMap[rc];\n\n          const notThese = Object.assign(Object.create(null), {\n            WasmTestStruct: true,\n\n            sqlite3_kvvfs_methods: !util.isUIThread(),\n\n            sqlite3_index_info: !wasm.bigIntEnabled,\n            sqlite3_index_constraint: !wasm.bigIntEnabled,\n            sqlite3_index_orderby: !wasm.bigIntEnabled,\n            sqlite3_index_constraint_usage: !wasm.bigIntEnabled,\n          });\n          for (const s of wasm.ctype.structs) {\n            if (!notThese[s.name]) {\n              capi[s.name] = sqlite3.StructBinder(s);\n            }\n          }\n          if (capi.sqlite3_index_info) {\n            for (const k of [\n              'sqlite3_index_constraint',\n              'sqlite3_index_orderby',\n              'sqlite3_index_constraint_usage',\n            ]) {\n              capi.sqlite3_index_info[k] = capi[k];\n              delete capi[k];\n            }\n            capi.sqlite3_vtab_config = wasm.xWrap(\n              'sqlite3_wasm_vtab_config',\n              'int',\n              ['sqlite3*', 'int', 'int'],\n            );\n          }\n        }\n\n        const __dbArgcMismatch = (pDb, f, n) => {\n          return sqlite3.util.sqlite3_wasm_db_error(\n            pDb,\n            capi.SQLITE_MISUSE,\n            f + '() requires ' + n + ' argument' + (1 === n ? '' : 's') + '.',\n          );\n        };\n\n        const __errEncoding = (pDb) => {\n          return util.sqlite3_wasm_db_error(\n            pDb,\n            capi.SQLITE_FORMAT,\n            'SQLITE_UTF8 is the only supported encoding.',\n          );\n        };\n\n        const __argPDb = (pDb) => wasm.xWrap.argAdapter('sqlite3*')(pDb);\n        const __argStr = (str) => (wasm.isPtr(str) ? wasm.cstrToJs(str) : str);\n        const __dbCleanupMap = function (pDb, mode) {\n          pDb = __argPDb(pDb);\n          let m = this.dbMap.get(pDb);\n          if (!mode) {\n            this.dbMap.delete(pDb);\n            return m;\n          } else if (!m && mode > 0) {\n            this.dbMap.set(pDb, (m = Object.create(null)));\n          }\n          return m;\n        }.bind(\n          Object.assign(Object.create(null), {\n            dbMap: new Map(),\n          }),\n        );\n\n        __dbCleanupMap.addCollation = function (pDb, name) {\n          const m = __dbCleanupMap(pDb, 1);\n          if (!m.collation) m.collation = new Set();\n          m.collation.add(__argStr(name).toLowerCase());\n        };\n\n        __dbCleanupMap._addUDF = function (pDb, name, arity, map) {\n          name = __argStr(name).toLowerCase();\n          let u = map.get(name);\n          if (!u) map.set(name, (u = new Set()));\n          u.add(arity < 0 ? -1 : arity);\n        };\n\n        __dbCleanupMap.addFunction = function (pDb, name, arity) {\n          const m = __dbCleanupMap(pDb, 1);\n          if (!m.udf) m.udf = new Map();\n          this._addUDF(pDb, name, arity, m.udf);\n        };\n\n        __dbCleanupMap.addWindowFunc = function (pDb, name, arity) {\n          const m = __dbCleanupMap(pDb, 1);\n          if (!m.wudf) m.wudf = new Map();\n          this._addUDF(pDb, name, arity, m.wudf);\n        };\n\n        __dbCleanupMap.cleanup = function (pDb) {\n          pDb = __argPDb(pDb);\n\n          const closeArgs = [pDb];\n          for (const name of [\n            'sqlite3_busy_handler',\n            'sqlite3_commit_hook',\n            'sqlite3_preupdate_hook',\n            'sqlite3_progress_handler',\n            'sqlite3_rollback_hook',\n            'sqlite3_set_authorizer',\n            'sqlite3_trace_v2',\n            'sqlite3_update_hook',\n          ]) {\n            const x = wasm.exports[name];\n            closeArgs.length = x.length;\n            try {\n              capi[name](...closeArgs);\n            } catch (e) {\n              console.warn(\n                'close-time call of',\n                name + '(',\n                closeArgs,\n                ') threw:',\n                e,\n              );\n            }\n          }\n          const m = __dbCleanupMap(pDb, 0);\n          if (!m) return;\n          if (m.collation) {\n            for (const name of m.collation) {\n              try {\n                capi.sqlite3_create_collation_v2(\n                  pDb,\n                  name,\n                  capi.SQLITE_UTF8,\n                  0,\n                  0,\n                  0,\n                );\n              } catch (e) {}\n            }\n            delete m.collation;\n          }\n          let i;\n          for (i = 0; i < 2; ++i) {\n            const fmap = i ? m.wudf : m.udf;\n            if (!fmap) continue;\n            const func = i\n              ? capi.sqlite3_create_window_function\n              : capi.sqlite3_create_function_v2;\n            for (const e of fmap) {\n              const name = e[0],\n                arities = e[1];\n              const fargs = [pDb, name, 0, capi.SQLITE_UTF8, 0, 0, 0, 0, 0];\n              if (i) fargs.push(0);\n              for (const arity of arities) {\n                try {\n                  fargs[2] = arity;\n                  func.apply(null, fargs);\n                } catch (e) {}\n              }\n              arities.clear();\n            }\n            fmap.clear();\n          }\n          delete m.udf;\n          delete m.wudf;\n        };\n\n        {\n          const __sqlite3CloseV2 = wasm.xWrap(\n            'sqlite3_close_v2',\n            'int',\n            'sqlite3*',\n          );\n          capi.sqlite3_close_v2 = function (pDb) {\n            if (1 !== arguments.length)\n              return __dbArgcMismatch(pDb, 'sqlite3_close_v2', 1);\n            if (pDb) {\n              try {\n                __dbCleanupMap.cleanup(pDb);\n              } catch (e) {}\n            }\n            return __sqlite3CloseV2(pDb);\n          };\n        }\n\n        if (capi.sqlite3session_table_filter) {\n          const __sqlite3SessionDelete = wasm.xWrap(\n            'sqlite3session_delete',\n            undefined,\n            ['sqlite3_session*'],\n          );\n          capi.sqlite3session_delete = function (pSession) {\n            if (1 !== arguments.length) {\n              return __dbArgcMismatch(pDb, 'sqlite3session_delete', 1);\n            } else if (pSession) {\n              capi.sqlite3session_table_filter(pSession, 0, 0);\n            }\n            __sqlite3SessionDelete(pSession);\n          };\n        }\n\n        {\n          const contextKey = (argv, argIndex) => {\n            return (\n              'argv[' +\n              argIndex +\n              ']:' +\n              argv[0] +\n              ':' +\n              wasm.cstrToJs(argv[1]).toLowerCase()\n            );\n          };\n          const __sqlite3CreateCollationV2 = wasm.xWrap(\n            'sqlite3_create_collation_v2',\n            'int',\n            [\n              'sqlite3*',\n              'string',\n              'int',\n              '*',\n              new wasm.xWrap.FuncPtrAdapter({\n                name: 'xCompare',\n                signature: 'i(pipip)',\n                contextKey,\n              }),\n              new wasm.xWrap.FuncPtrAdapter({\n                name: 'xDestroy',\n                signature: 'v(p)',\n                contextKey,\n              }),\n            ],\n          );\n\n          capi.sqlite3_create_collation_v2 = function (\n            pDb,\n            zName,\n            eTextRep,\n            pArg,\n            xCompare,\n            xDestroy,\n          ) {\n            if (6 !== arguments.length)\n              return __dbArgcMismatch(pDb, 'sqlite3_create_collation_v2', 6);\n            else if (0 === (eTextRep & 0xf)) {\n              eTextRep |= capi.SQLITE_UTF8;\n            } else if (capi.SQLITE_UTF8 !== (eTextRep & 0xf)) {\n              return __errEncoding(pDb);\n            }\n            try {\n              const rc = __sqlite3CreateCollationV2(\n                pDb,\n                zName,\n                eTextRep,\n                pArg,\n                xCompare,\n                xDestroy,\n              );\n              if (0 === rc && xCompare instanceof Function) {\n                __dbCleanupMap.addCollation(pDb, zName);\n              }\n              return rc;\n            } catch (e) {\n              return util.sqlite3_wasm_db_error(pDb, e);\n            }\n          };\n\n          capi.sqlite3_create_collation = (\n            pDb,\n            zName,\n            eTextRep,\n            pArg,\n            xCompare,\n          ) => {\n            return 5 === arguments.length\n              ? capi.sqlite3_create_collation_v2(\n                  pDb,\n                  zName,\n                  eTextRep,\n                  pArg,\n                  xCompare,\n                  0,\n                )\n              : __dbArgcMismatch(pDb, 'sqlite3_create_collation', 5);\n          };\n        }\n\n        {\n          const contextKey = function (argv, argIndex) {\n            return (\n              argv[0] +\n              ':' +\n              (argv[2] < 0 ? -1 : argv[2]) +\n              ':' +\n              argIndex +\n              ':' +\n              wasm.cstrToJs(argv[1]).toLowerCase()\n            );\n          };\n\n          const __cfProxy = Object.assign(Object.create(null), {\n            xInverseAndStep: {\n              signature: 'v(pip)',\n              contextKey,\n              callProxy: (callback) => {\n                return (pCtx, argc, pArgv) => {\n                  try {\n                    callback(pCtx, ...capi.sqlite3_values_to_js(argc, pArgv));\n                  } catch (e) {\n                    capi.sqlite3_result_error_js(pCtx, e);\n                  }\n                };\n              },\n            },\n            xFinalAndValue: {\n              signature: 'v(p)',\n              contextKey,\n              callProxy: (callback) => {\n                return (pCtx) => {\n                  try {\n                    capi.sqlite3_result_js(pCtx, callback(pCtx));\n                  } catch (e) {\n                    capi.sqlite3_result_error_js(pCtx, e);\n                  }\n                };\n              },\n            },\n            xFunc: {\n              signature: 'v(pip)',\n              contextKey,\n              callProxy: (callback) => {\n                return (pCtx, argc, pArgv) => {\n                  try {\n                    capi.sqlite3_result_js(\n                      pCtx,\n                      callback(pCtx, ...capi.sqlite3_values_to_js(argc, pArgv)),\n                    );\n                  } catch (e) {\n                    capi.sqlite3_result_error_js(pCtx, e);\n                  }\n                };\n              },\n            },\n            xDestroy: {\n              signature: 'v(p)',\n              contextKey,\n\n              callProxy: (callback) => {\n                return (pVoid) => {\n                  try {\n                    callback(pVoid);\n                  } catch (e) {\n                    console.error('UDF xDestroy method threw:', e);\n                  }\n                };\n              },\n            },\n          });\n\n          const __sqlite3CreateFunction = wasm.xWrap(\n            'sqlite3_create_function_v2',\n            'int',\n            [\n              'sqlite3*',\n              'string',\n              'int',\n              'int',\n              '*',\n              new wasm.xWrap.FuncPtrAdapter({\n                name: 'xFunc',\n                ...__cfProxy.xFunc,\n              }),\n              new wasm.xWrap.FuncPtrAdapter({\n                name: 'xStep',\n                ...__cfProxy.xInverseAndStep,\n              }),\n              new wasm.xWrap.FuncPtrAdapter({\n                name: 'xFinal',\n                ...__cfProxy.xFinalAndValue,\n              }),\n              new wasm.xWrap.FuncPtrAdapter({\n                name: 'xDestroy',\n                ...__cfProxy.xDestroy,\n              }),\n            ],\n          );\n\n          const __sqlite3CreateWindowFunction = wasm.xWrap(\n            'sqlite3_create_window_function',\n            'int',\n            [\n              'sqlite3*',\n              'string',\n              'int',\n              'int',\n              '*',\n              new wasm.xWrap.FuncPtrAdapter({\n                name: 'xStep',\n                ...__cfProxy.xInverseAndStep,\n              }),\n              new wasm.xWrap.FuncPtrAdapter({\n                name: 'xFinal',\n                ...__cfProxy.xFinalAndValue,\n              }),\n              new wasm.xWrap.FuncPtrAdapter({\n                name: 'xValue',\n                ...__cfProxy.xFinalAndValue,\n              }),\n              new wasm.xWrap.FuncPtrAdapter({\n                name: 'xInverse',\n                ...__cfProxy.xInverseAndStep,\n              }),\n              new wasm.xWrap.FuncPtrAdapter({\n                name: 'xDestroy',\n                ...__cfProxy.xDestroy,\n              }),\n            ],\n          );\n\n          capi.sqlite3_create_function_v2 = function f(\n            pDb,\n            funcName,\n            nArg,\n            eTextRep,\n            pApp,\n            xFunc,\n            xStep,\n            xFinal,\n            xDestroy,\n          ) {\n            if (f.length !== arguments.length) {\n              return __dbArgcMismatch(\n                pDb,\n                'sqlite3_create_function_v2',\n                f.length,\n              );\n            } else if (0 === (eTextRep & 0xf)) {\n              eTextRep |= capi.SQLITE_UTF8;\n            } else if (capi.SQLITE_UTF8 !== (eTextRep & 0xf)) {\n              return __errEncoding(pDb);\n            }\n            try {\n              const rc = __sqlite3CreateFunction(\n                pDb,\n                funcName,\n                nArg,\n                eTextRep,\n                pApp,\n                xFunc,\n                xStep,\n                xFinal,\n                xDestroy,\n              );\n              if (\n                0 === rc &&\n                (xFunc instanceof Function ||\n                  xStep instanceof Function ||\n                  xFinal instanceof Function ||\n                  xDestroy instanceof Function)\n              ) {\n                __dbCleanupMap.addFunction(pDb, funcName, nArg);\n              }\n              return rc;\n            } catch (e) {\n              console.error('sqlite3_create_function_v2() setup threw:', e);\n              return util.sqlite3_wasm_db_error(\n                pDb,\n                e,\n                'Creation of UDF threw: ' + e,\n              );\n            }\n          };\n\n          capi.sqlite3_create_function = function f(\n            pDb,\n            funcName,\n            nArg,\n            eTextRep,\n            pApp,\n            xFunc,\n            xStep,\n            xFinal,\n          ) {\n            return f.length === arguments.length\n              ? capi.sqlite3_create_function_v2(\n                  pDb,\n                  funcName,\n                  nArg,\n                  eTextRep,\n                  pApp,\n                  xFunc,\n                  xStep,\n                  xFinal,\n                  0,\n                )\n              : __dbArgcMismatch(pDb, 'sqlite3_create_function', f.length);\n          };\n\n          capi.sqlite3_create_window_function = function f(\n            pDb,\n            funcName,\n            nArg,\n            eTextRep,\n            pApp,\n            xStep,\n            xFinal,\n            xValue,\n            xInverse,\n            xDestroy,\n          ) {\n            if (f.length !== arguments.length) {\n              return __dbArgcMismatch(\n                pDb,\n                'sqlite3_create_window_function',\n                f.length,\n              );\n            } else if (0 === (eTextRep & 0xf)) {\n              eTextRep |= capi.SQLITE_UTF8;\n            } else if (capi.SQLITE_UTF8 !== (eTextRep & 0xf)) {\n              return __errEncoding(pDb);\n            }\n            try {\n              const rc = __sqlite3CreateWindowFunction(\n                pDb,\n                funcName,\n                nArg,\n                eTextRep,\n                pApp,\n                xStep,\n                xFinal,\n                xValue,\n                xInverse,\n                xDestroy,\n              );\n              if (\n                0 === rc &&\n                (xStep instanceof Function ||\n                  xFinal instanceof Function ||\n                  xValue instanceof Function ||\n                  xInverse instanceof Function ||\n                  xDestroy instanceof Function)\n              ) {\n                __dbCleanupMap.addWindowFunc(pDb, funcName, nArg);\n              }\n              return rc;\n            } catch (e) {\n              console.error('sqlite3_create_window_function() setup threw:', e);\n              return util.sqlite3_wasm_db_error(\n                pDb,\n                e,\n                'Creation of UDF threw: ' + e,\n              );\n            }\n          };\n\n          capi.sqlite3_create_function_v2.udfSetResult =\n            capi.sqlite3_create_function.udfSetResult =\n            capi.sqlite3_create_window_function.udfSetResult =\n              capi.sqlite3_result_js;\n\n          capi.sqlite3_create_function_v2.udfConvertArgs =\n            capi.sqlite3_create_function.udfConvertArgs =\n            capi.sqlite3_create_window_function.udfConvertArgs =\n              capi.sqlite3_values_to_js;\n\n          capi.sqlite3_create_function_v2.udfSetError =\n            capi.sqlite3_create_function.udfSetError =\n            capi.sqlite3_create_window_function.udfSetError =\n              capi.sqlite3_result_error_js;\n        }\n\n        {\n          const __flexiString = (v, n) => {\n            if ('string' === typeof v) {\n              n = -1;\n            } else if (util.isSQLableTypedArray(v)) {\n              n = v.byteLength;\n              v = util.typedArrayToString(\n                v instanceof ArrayBuffer ? new Uint8Array(v) : v,\n              );\n            } else if (Array.isArray(v)) {\n              v = v.join('');\n              n = -1;\n            }\n            return [v, n];\n          };\n\n          const __prepare = {\n            basic: wasm.xWrap('sqlite3_prepare_v3', 'int', [\n              'sqlite3*',\n              'string',\n              'int',\n              'int',\n              '**',\n              '**',\n            ]),\n\n            full: wasm.xWrap('sqlite3_prepare_v3', 'int', [\n              'sqlite3*',\n              '*',\n              'int',\n              'int',\n              '**',\n              '**',\n            ]),\n          };\n\n          capi.sqlite3_prepare_v3 = function f(\n            pDb,\n            sql,\n            sqlLen,\n            prepFlags,\n            ppStmt,\n            pzTail,\n          ) {\n            if (f.length !== arguments.length) {\n              return __dbArgcMismatch(pDb, 'sqlite3_prepare_v3', f.length);\n            }\n            const [xSql, xSqlLen] = __flexiString(sql, sqlLen);\n            switch (typeof xSql) {\n              case 'string':\n                return __prepare.basic(\n                  pDb,\n                  xSql,\n                  xSqlLen,\n                  prepFlags,\n                  ppStmt,\n                  null,\n                );\n              case 'number':\n                return __prepare.full(\n                  pDb,\n                  xSql,\n                  xSqlLen,\n                  prepFlags,\n                  ppStmt,\n                  pzTail,\n                );\n              default:\n                return util.sqlite3_wasm_db_error(\n                  pDb,\n                  capi.SQLITE_MISUSE,\n                  'Invalid SQL argument type for sqlite3_prepare_v2/v3().',\n                );\n            }\n          };\n\n          capi.sqlite3_prepare_v2 = function f(\n            pDb,\n            sql,\n            sqlLen,\n            ppStmt,\n            pzTail,\n          ) {\n            return f.length === arguments.length\n              ? capi.sqlite3_prepare_v3(pDb, sql, sqlLen, 0, ppStmt, pzTail)\n              : __dbArgcMismatch(pDb, 'sqlite3_prepare_v2', f.length);\n          };\n        }\n\n        {\n          const __bindText = wasm.xWrap('sqlite3_bind_text', 'int', [\n            'sqlite3_stmt*',\n            'int',\n            'string',\n            'int',\n            '*',\n          ]);\n          const __bindBlob = wasm.xWrap('sqlite3_bind_blob', 'int', [\n            'sqlite3_stmt*',\n            'int',\n            '*',\n            'int',\n            '*',\n          ]);\n\n          capi.sqlite3_bind_text = function f(\n            pStmt,\n            iCol,\n            text,\n            nText,\n            xDestroy,\n          ) {\n            if (f.length !== arguments.length) {\n              return __dbArgcMismatch(\n                capi.sqlite3_db_handle(pStmt),\n                'sqlite3_bind_text',\n                f.length,\n              );\n            } else if (wasm.isPtr(text) || null === text) {\n              return __bindText(pStmt, iCol, text, nText, xDestroy);\n            } else if (text instanceof ArrayBuffer) {\n              text = new Uint8Array(text);\n            } else if (Array.isArray(pMem)) {\n              text = pMem.join('');\n            }\n            let p, n;\n            try {\n              if (util.isSQLableTypedArray(text)) {\n                p = wasm.allocFromTypedArray(text);\n                n = text.byteLength;\n              } else if ('string' === typeof text) {\n                [p, n] = wasm.allocCString(text);\n              } else {\n                return util.sqlite3_wasm_db_error(\n                  capi.sqlite3_db_handle(pStmt),\n                  capi.SQLITE_MISUSE,\n                  'Invalid 3rd argument type for sqlite3_bind_text().',\n                );\n              }\n              return __bindText(pStmt, iCol, p, n, capi.SQLITE_WASM_DEALLOC);\n            } catch (e) {\n              wasm.dealloc(p);\n              return util.sqlite3_wasm_db_error(\n                capi.sqlite3_db_handle(pStmt),\n                e,\n              );\n            }\n          };\n\n          capi.sqlite3_bind_blob = function f(\n            pStmt,\n            iCol,\n            pMem,\n            nMem,\n            xDestroy,\n          ) {\n            if (f.length !== arguments.length) {\n              return __dbArgcMismatch(\n                capi.sqlite3_db_handle(pStmt),\n                'sqlite3_bind_blob',\n                f.length,\n              );\n            } else if (wasm.isPtr(pMem) || null === pMem) {\n              return __bindBlob(pStmt, iCol, pMem, nMem, xDestroy);\n            } else if (pMem instanceof ArrayBuffer) {\n              pMem = new Uint8Array(pMem);\n            } else if (Array.isArray(pMem)) {\n              pMem = pMem.join('');\n            }\n            let p, n;\n            try {\n              if (util.isBindableTypedArray(pMem)) {\n                p = wasm.allocFromTypedArray(pMem);\n                n = nMem >= 0 ? nMem : pMem.byteLength;\n              } else if ('string' === typeof pMem) {\n                [p, n] = wasm.allocCString(pMem);\n              } else {\n                return util.sqlite3_wasm_db_error(\n                  capi.sqlite3_db_handle(pStmt),\n                  capi.SQLITE_MISUSE,\n                  'Invalid 3rd argument type for sqlite3_bind_blob().',\n                );\n              }\n              return __bindBlob(pStmt, iCol, p, n, capi.SQLITE_WASM_DEALLOC);\n            } catch (e) {\n              wasm.dealloc(p);\n              return util.sqlite3_wasm_db_error(\n                capi.sqlite3_db_handle(pStmt),\n                e,\n              );\n            }\n          };\n        }\n\n        {\n          capi.sqlite3_config = function (op, ...args) {\n            if (arguments.length < 2) return capi.SQLITE_MISUSE;\n            switch (op) {\n              case capi.SQLITE_CONFIG_COVERING_INDEX_SCAN:\n              case capi.SQLITE_CONFIG_MEMSTATUS:\n              case capi.SQLITE_CONFIG_SMALL_MALLOC:\n              case capi.SQLITE_CONFIG_SORTERREF_SIZE:\n              case capi.SQLITE_CONFIG_STMTJRNL_SPILL:\n              case capi.SQLITE_CONFIG_URI:\n                return wasm.exports.sqlite3_wasm_config_i(op, args[0]);\n              case capi.SQLITE_CONFIG_LOOKASIDE:\n                return wasm.exports.sqlite3_wasm_config_ii(\n                  op,\n                  args[0],\n                  args[1],\n                );\n              case capi.SQLITE_CONFIG_MEMDB_MAXSIZE:\n                return wasm.exports.sqlite3_wasm_config_j(op, args[0]);\n              case capi.SQLITE_CONFIG_GETMALLOC:\n              case capi.SQLITE_CONFIG_GETMUTEX:\n              case capi.SQLITE_CONFIG_GETPCACHE2:\n              case capi.SQLITE_CONFIG_GETPCACHE:\n              case capi.SQLITE_CONFIG_HEAP:\n              case capi.SQLITE_CONFIG_LOG:\n              case capi.SQLITE_CONFIG_MALLOC:\n              case capi.SQLITE_CONFIG_MMAP_SIZE:\n              case capi.SQLITE_CONFIG_MULTITHREAD:\n              case capi.SQLITE_CONFIG_MUTEX:\n              case capi.SQLITE_CONFIG_PAGECACHE:\n              case capi.SQLITE_CONFIG_PCACHE2:\n              case capi.SQLITE_CONFIG_PCACHE:\n              case capi.SQLITE_CONFIG_PCACHE_HDRSZ:\n              case capi.SQLITE_CONFIG_PMASZ:\n              case capi.SQLITE_CONFIG_SERIALIZED:\n              case capi.SQLITE_CONFIG_SINGLETHREAD:\n              case capi.SQLITE_CONFIG_SQLLOG:\n              case capi.SQLITE_CONFIG_WIN32_HEAPSIZE:\n              default:\n                return capi.SQLITE_NOTFOUND;\n            }\n          };\n        }\n\n        {\n          const __autoExtFptr = new Set();\n\n          capi.sqlite3_auto_extension = function (fPtr) {\n            if (fPtr instanceof Function) {\n              fPtr = wasm.installFunction('i(ppp)', fPtr);\n            } else if (1 !== arguments.length || !wasm.isPtr(fPtr)) {\n              return capi.SQLITE_MISUSE;\n            }\n            const rc = wasm.exports.sqlite3_auto_extension(fPtr);\n            if (fPtr !== arguments[0]) {\n              if (0 === rc) __autoExtFptr.add(fPtr);\n              else wasm.uninstallFunction(fPtr);\n            }\n            return rc;\n          };\n\n          capi.sqlite3_cancel_auto_extension = function (fPtr) {\n            if (!fPtr || 1 !== arguments.length || !wasm.isPtr(fPtr)) return 0;\n            return wasm.exports.sqlite3_cancel_auto_extension(fPtr);\n          };\n\n          capi.sqlite3_reset_auto_extension = function () {\n            wasm.exports.sqlite3_reset_auto_extension();\n            for (const fp of __autoExtFptr) wasm.uninstallFunction(fp);\n            __autoExtFptr.clear();\n          };\n        }\n\n        const pKvvfs = capi.sqlite3_vfs_find('kvvfs');\n        if (pKvvfs) {\n          if (util.isUIThread()) {\n            const kvvfsMethods = new capi.sqlite3_kvvfs_methods(\n              wasm.exports.sqlite3_wasm_kvvfs_methods(),\n            );\n            delete capi.sqlite3_kvvfs_methods;\n\n            const kvvfsMakeKey = wasm.exports.sqlite3_wasm_kvvfsMakeKeyOnPstack,\n              pstack = wasm.pstack;\n\n            const kvvfsStorage = (zClass) =>\n              115 === wasm.peek(zClass) ? sessionStorage : localStorage;\n\n            const kvvfsImpls = {\n              xRead: (zClass, zKey, zBuf, nBuf) => {\n                const stack = pstack.pointer,\n                  astack = wasm.scopedAllocPush();\n                try {\n                  const zXKey = kvvfsMakeKey(zClass, zKey);\n                  if (!zXKey) return -3;\n                  const jKey = wasm.cstrToJs(zXKey);\n                  const jV = kvvfsStorage(zClass).getItem(jKey);\n                  if (!jV) return -1;\n                  const nV = jV.length;\n                  if (nBuf <= 0) return nV;\n                  else if (1 === nBuf) {\n                    wasm.poke(zBuf, 0);\n                    return nV;\n                  }\n                  const zV = wasm.scopedAllocCString(jV);\n                  if (nBuf > nV + 1) nBuf = nV + 1;\n                  wasm.heap8u().copyWithin(zBuf, zV, zV + nBuf - 1);\n                  wasm.poke(zBuf + nBuf - 1, 0);\n                  return nBuf - 1;\n                } catch (e) {\n                  console.error('kvstorageRead()', e);\n                  return -2;\n                } finally {\n                  pstack.restore(stack);\n                  wasm.scopedAllocPop(astack);\n                }\n              },\n              xWrite: (zClass, zKey, zData) => {\n                const stack = pstack.pointer;\n                try {\n                  const zXKey = kvvfsMakeKey(zClass, zKey);\n                  if (!zXKey) return 1;\n                  const jKey = wasm.cstrToJs(zXKey);\n                  kvvfsStorage(zClass).setItem(jKey, wasm.cstrToJs(zData));\n                  return 0;\n                } catch (e) {\n                  console.error('kvstorageWrite()', e);\n                  return capi.SQLITE_IOERR;\n                } finally {\n                  pstack.restore(stack);\n                }\n              },\n              xDelete: (zClass, zKey) => {\n                const stack = pstack.pointer;\n                try {\n                  const zXKey = kvvfsMakeKey(zClass, zKey);\n                  if (!zXKey) return 1;\n                  kvvfsStorage(zClass).removeItem(wasm.cstrToJs(zXKey));\n                  return 0;\n                } catch (e) {\n                  console.error('kvstorageDelete()', e);\n                  return capi.SQLITE_IOERR;\n                } finally {\n                  pstack.restore(stack);\n                }\n              },\n            };\n            for (const k of Object.keys(kvvfsImpls)) {\n              kvvfsMethods[kvvfsMethods.memberKey(k)] = wasm.installFunction(\n                kvvfsMethods.memberSignature(k),\n                kvvfsImpls[k],\n              );\n            }\n          } else {\n            capi.sqlite3_vfs_unregister(pKvvfs);\n          }\n        }\n\n        wasm.xWrap.FuncPtrAdapter.warnOnUse = true;\n      });\n\n      self.sqlite3ApiBootstrap.initializers.push(function (sqlite3) {\n        sqlite3.version = {\n          libVersion: '3.41.2',\n          libVersionNumber: 3041002,\n          sourceId:\n            '2023-03-22 11:56:21 0d1fc92f94cb6b76bffe3ec34d69cffde2924203304e8ffc4155597af0c191da',\n          downloadVersion: 3410200,\n        };\n      });\n\n      self.sqlite3ApiBootstrap.initializers.push(function (sqlite3) {\n        const toss = (...args) => {\n          throw new Error(args.join(' '));\n        };\n        const toss3 = (...args) => {\n          throw new sqlite3.SQLite3Error(...args);\n        };\n\n        const capi = sqlite3.capi,\n          wasm = sqlite3.wasm,\n          util = sqlite3.util;\n\n        const __ptrMap = new WeakMap();\n\n        const __stmtMap = new WeakMap();\n\n        const getOwnOption = (opts, p, dflt) => {\n          const d = Object.getOwnPropertyDescriptor(opts, p);\n          return d ? d.value : dflt;\n        };\n\n        const checkSqlite3Rc = function (dbPtr, sqliteResultCode) {\n          if (sqliteResultCode) {\n            if (dbPtr instanceof DB) dbPtr = dbPtr.pointer;\n            toss3(\n              'sqlite3 result code',\n              sqliteResultCode + ':',\n              dbPtr\n                ? capi.sqlite3_errmsg(dbPtr)\n                : capi.sqlite3_errstr(sqliteResultCode),\n            );\n          }\n          return arguments[0];\n        };\n\n        const __dbTraceToConsole = wasm.installFunction(\n          'i(ippp)',\n          function (t, c, p, x) {\n            if (capi.SQLITE_TRACE_STMT === t) {\n              console.log(\n                'SQL TRACE #' + ++this.counter + ' via sqlite3@' + c + ':',\n                wasm.cstrToJs(x),\n              );\n            }\n          }.bind({ counter: 0 }),\n        );\n\n        const __vfsPostOpenSql = Object.create(null);\n\n        const dbCtorHelper = function ctor(...args) {\n          if (!ctor._name2vfs) {\n            ctor._name2vfs = Object.create(null);\n            const isWorkerThread =\n              'function' === typeof importScripts\n                ? (n) =>\n                    toss3(\n                      'The VFS for',\n                      n,\n                      'is only available in the main window thread.',\n                    )\n                : false;\n            ctor._name2vfs[':localStorage:'] = {\n              vfs: 'kvvfs',\n              filename: isWorkerThread || (() => 'local'),\n            };\n            ctor._name2vfs[':sessionStorage:'] = {\n              vfs: 'kvvfs',\n              filename: isWorkerThread || (() => 'session'),\n            };\n          }\n          const opt = ctor.normalizeArgs(...args);\n          let fn = opt.filename,\n            vfsName = opt.vfs,\n            flagsStr = opt.flags;\n          if (\n            ('string' !== typeof fn && 'number' !== typeof fn) ||\n            'string' !== typeof flagsStr ||\n            (vfsName &&\n              'string' !== typeof vfsName &&\n              'number' !== typeof vfsName)\n          ) {\n            sqlite3.config.error('Invalid DB ctor args', opt, arguments);\n            toss3('Invalid arguments for DB constructor.');\n          }\n          let fnJs = 'number' === typeof fn ? wasm.cstrToJs(fn) : fn;\n          const vfsCheck = ctor._name2vfs[fnJs];\n          if (vfsCheck) {\n            vfsName = vfsCheck.vfs;\n            fn = fnJs = vfsCheck.filename(fnJs);\n          }\n          let pDb,\n            oflags = 0;\n          if (flagsStr.indexOf('c') >= 0) {\n            oflags |= capi.SQLITE_OPEN_CREATE | capi.SQLITE_OPEN_READWRITE;\n          }\n          if (flagsStr.indexOf('w') >= 0) oflags |= capi.SQLITE_OPEN_READWRITE;\n          if (0 === oflags) oflags |= capi.SQLITE_OPEN_READONLY;\n          oflags |= capi.SQLITE_OPEN_EXRESCODE;\n          const stack = wasm.pstack.pointer;\n          try {\n            const pPtr = wasm.pstack.allocPtr();\n            let rc = capi.sqlite3_open_v2(fn, pPtr, oflags, vfsName || 0);\n            pDb = wasm.peekPtr(pPtr);\n            checkSqlite3Rc(pDb, rc);\n            capi.sqlite3_extended_result_codes(pDb, 1);\n            if (flagsStr.indexOf('t') >= 0) {\n              capi.sqlite3_trace_v2(\n                pDb,\n                capi.SQLITE_TRACE_STMT,\n                __dbTraceToConsole,\n                pDb,\n              );\n            }\n          } catch (e) {\n            if (pDb) capi.sqlite3_close_v2(pDb);\n            throw e;\n          } finally {\n            wasm.pstack.restore(stack);\n          }\n          this.filename = fnJs;\n          __ptrMap.set(this, pDb);\n          __stmtMap.set(this, Object.create(null));\n          try {\n            const pVfs = capi.sqlite3_js_db_vfs(pDb);\n            if (!pVfs)\n              toss3('Internal error: cannot get VFS for new db handle.');\n            const postInitSql = __vfsPostOpenSql[pVfs];\n            if (postInitSql instanceof Function) {\n              postInitSql(this, sqlite3);\n            } else if (postInitSql) {\n              checkSqlite3Rc(pDb, capi.sqlite3_exec(pDb, postInitSql, 0, 0, 0));\n            }\n          } catch (e) {\n            this.close();\n            throw e;\n          }\n        };\n\n        dbCtorHelper.setVfsPostOpenSql = function (pVfs, sql) {\n          __vfsPostOpenSql[pVfs] = sql;\n        };\n\n        dbCtorHelper.normalizeArgs = function (\n          filename = ':memory:',\n          flags = 'c',\n          vfs = null,\n        ) {\n          const arg = {};\n          if (\n            1 === arguments.length &&\n            arguments[0] &&\n            'object' === typeof arguments[0]\n          ) {\n            Object.assign(arg, arguments[0]);\n            if (undefined === arg.flags) arg.flags = 'c';\n            if (undefined === arg.vfs) arg.vfs = null;\n            if (undefined === arg.filename) arg.filename = ':memory:';\n          } else {\n            arg.filename = filename;\n            arg.flags = flags;\n            arg.vfs = vfs;\n          }\n          return arg;\n        };\n\n        const DB = function (...args) {\n          dbCtorHelper.apply(this, args);\n        };\n        DB.dbCtorHelper = dbCtorHelper;\n\n        const BindTypes = {\n          null: 1,\n          number: 2,\n          string: 3,\n          boolean: 4,\n          blob: 5,\n        };\n        BindTypes['undefined'] == BindTypes.null;\n        if (wasm.bigIntEnabled) {\n          BindTypes.bigint = BindTypes.number;\n        }\n\n        const Stmt = function () {\n          if (BindTypes !== arguments[2]) {\n            toss3(\n              capi.SQLITE_MISUSE,\n              'Do not call the Stmt constructor directly. Use DB.prepare().',\n            );\n          }\n          this.db = arguments[0];\n          __ptrMap.set(this, arguments[1]);\n          this.columnCount = capi.sqlite3_column_count(this.pointer);\n          this.parameterCount = capi.sqlite3_bind_parameter_count(this.pointer);\n        };\n\n        const affirmDbOpen = function (db) {\n          if (!db.pointer) toss3('DB has been closed.');\n          return db;\n        };\n\n        const affirmColIndex = function (stmt, ndx) {\n          if (ndx !== (ndx | 0) || ndx < 0 || ndx >= stmt.columnCount) {\n            toss3('Column index', ndx, 'is out of range.');\n          }\n          return stmt;\n        };\n\n        const parseExecArgs = function (db, args) {\n          const out = Object.create(null);\n          out.opt = Object.create(null);\n          switch (args.length) {\n            case 1:\n              if (\n                'string' === typeof args[0] ||\n                util.isSQLableTypedArray(args[0])\n              ) {\n                out.sql = args[0];\n              } else if (Array.isArray(args[0])) {\n                out.sql = args[0];\n              } else if (args[0] && 'object' === typeof args[0]) {\n                out.opt = args[0];\n                out.sql = out.opt.sql;\n              }\n              break;\n            case 2:\n              out.sql = args[0];\n              out.opt = args[1];\n              break;\n            default:\n              toss3('Invalid argument count for exec().');\n          }\n          out.sql = util.flexibleString(out.sql);\n          if ('string' !== typeof out.sql) {\n            toss3('Missing SQL argument or unsupported SQL value type.');\n          }\n          const opt = out.opt;\n          switch (opt.returnValue) {\n            case 'resultRows':\n              if (!opt.resultRows) opt.resultRows = [];\n              out.returnVal = () => opt.resultRows;\n              break;\n            case 'saveSql':\n              if (!opt.saveSql) opt.saveSql = [];\n              out.returnVal = () => opt.saveSql;\n              break;\n            case undefined:\n            case 'this':\n              out.returnVal = () => db;\n              break;\n            default:\n              toss3('Invalid returnValue value:', opt.returnValue);\n          }\n          if (!opt.callback && !opt.returnValue && undefined !== opt.rowMode) {\n            if (!opt.resultRows) opt.resultRows = [];\n            out.returnVal = () => opt.resultRows;\n          }\n          if (opt.callback || opt.resultRows) {\n            switch (undefined === opt.rowMode ? 'array' : opt.rowMode) {\n              case 'object':\n                out.cbArg = (stmt) => stmt.get(Object.create(null));\n                break;\n              case 'array':\n                out.cbArg = (stmt) => stmt.get([]);\n                break;\n              case 'stmt':\n                if (Array.isArray(opt.resultRows)) {\n                  toss3(\n                    'exec(): invalid rowMode for a resultRows array: must',\n                    \"be one of 'array', 'object',\",\n                    'a result column number, or column name reference.',\n                  );\n                }\n                out.cbArg = (stmt) => stmt;\n                break;\n              default:\n                if (util.isInt32(opt.rowMode)) {\n                  out.cbArg = (stmt) => stmt.get(opt.rowMode);\n                  break;\n                } else if (\n                  'string' === typeof opt.rowMode &&\n                  opt.rowMode.length > 1 &&\n                  '$' === opt.rowMode[0]\n                ) {\n                  const $colName = opt.rowMode.substr(1);\n                  out.cbArg = (stmt) => {\n                    const rc = stmt.get(Object.create(null))[$colName];\n                    return undefined === rc\n                      ? toss3(\n                          capi.SQLITE_NOTFOUND,\n                          'exec(): unknown result column:',\n                          $colName,\n                        )\n                      : rc;\n                  };\n                  break;\n                }\n                toss3('Invalid rowMode:', opt.rowMode);\n            }\n          }\n          return out;\n        };\n\n        const __selectFirstRow = (db, sql, bind, ...getArgs) => {\n          const stmt = db.prepare(sql);\n          try {\n            return stmt.bind(bind).step() ? stmt.get(...getArgs) : undefined;\n          } finally {\n            stmt.finalize();\n          }\n        };\n\n        const __selectAll = (db, sql, bind, rowMode) =>\n          db.exec({\n            sql,\n            bind,\n            rowMode,\n            returnValue: 'resultRows',\n          });\n\n        DB.checkRc = (db, resultCode) => checkSqlite3Rc(db, resultCode);\n\n        DB.prototype = {\n          isOpen: function () {\n            return !!this.pointer;\n          },\n\n          affirmOpen: function () {\n            return affirmDbOpen(this);\n          },\n\n          close: function () {\n            if (this.pointer) {\n              if (this.onclose && this.onclose.before instanceof Function) {\n                try {\n                  this.onclose.before(this);\n                } catch (e) {}\n              }\n              const pDb = this.pointer;\n              Object.keys(__stmtMap.get(this)).forEach((k, s) => {\n                if (s && s.pointer) s.finalize();\n              });\n              __ptrMap.delete(this);\n              __stmtMap.delete(this);\n              capi.sqlite3_close_v2(pDb);\n              if (this.onclose && this.onclose.after instanceof Function) {\n                try {\n                  this.onclose.after(this);\n                } catch (e) {}\n              }\n              delete this.filename;\n            }\n          },\n\n          changes: function (total = false, sixtyFour = false) {\n            const p = affirmDbOpen(this).pointer;\n            if (total) {\n              return sixtyFour\n                ? capi.sqlite3_total_changes64(p)\n                : capi.sqlite3_total_changes(p);\n            } else {\n              return sixtyFour\n                ? capi.sqlite3_changes64(p)\n                : capi.sqlite3_changes(p);\n            }\n          },\n\n          dbFilename: function (dbName = 'main') {\n            return capi.sqlite3_db_filename(affirmDbOpen(this).pointer, dbName);\n          },\n\n          dbName: function (dbNumber = 0) {\n            return capi.sqlite3_db_name(affirmDbOpen(this).pointer, dbNumber);\n          },\n\n          dbVfsName: function (dbName = 0) {\n            let rc;\n            const pVfs = capi.sqlite3_js_db_vfs(\n              affirmDbOpen(this).pointer,\n              dbName,\n            );\n            if (pVfs) {\n              const v = new capi.sqlite3_vfs(pVfs);\n              try {\n                rc = wasm.cstrToJs(v.$zName);\n              } finally {\n                v.dispose();\n              }\n            }\n            return rc;\n          },\n\n          prepare: function (sql) {\n            affirmDbOpen(this);\n            const stack = wasm.pstack.pointer;\n            let ppStmt, pStmt;\n            try {\n              ppStmt = wasm.pstack.alloc(8);\n              DB.checkRc(\n                this,\n                capi.sqlite3_prepare_v2(this.pointer, sql, -1, ppStmt, null),\n              );\n              pStmt = wasm.peekPtr(ppStmt);\n            } finally {\n              wasm.pstack.restore(stack);\n            }\n            if (!pStmt) toss3('Cannot prepare empty SQL.');\n            const stmt = new Stmt(this, pStmt, BindTypes);\n            __stmtMap.get(this)[pStmt] = stmt;\n            return stmt;\n          },\n\n          exec: function () {\n            affirmDbOpen(this);\n            const arg = parseExecArgs(this, arguments);\n            if (!arg.sql) {\n              return toss3('exec() requires an SQL string.');\n            }\n            const opt = arg.opt;\n            const callback = opt.callback;\n            const resultRows = Array.isArray(opt.resultRows)\n              ? opt.resultRows\n              : undefined;\n            let stmt;\n            let bind = opt.bind;\n            let evalFirstResult = !!(\n              arg.cbArg ||\n              opt.columnNames ||\n              resultRows\n            );\n            const stack = wasm.scopedAllocPush();\n            const saveSql = Array.isArray(opt.saveSql)\n              ? opt.saveSql\n              : undefined;\n            try {\n              const isTA = util.isSQLableTypedArray(arg.sql);\n              let sqlByteLen = isTA\n                ? arg.sql.byteLength\n                : wasm.jstrlen(arg.sql);\n              const ppStmt = wasm.scopedAlloc(\n                2 * wasm.ptrSizeof + (sqlByteLen + 1),\n              );\n              const pzTail = ppStmt + wasm.ptrSizeof;\n              let pSql = pzTail + wasm.ptrSizeof;\n              const pSqlEnd = pSql + sqlByteLen;\n              if (isTA) wasm.heap8().set(arg.sql, pSql);\n              else wasm.jstrcpy(arg.sql, wasm.heap8(), pSql, sqlByteLen, false);\n              wasm.poke(pSql + sqlByteLen, 0);\n              while (pSql && wasm.peek(pSql, 'i8')) {\n                wasm.pokePtr([ppStmt, pzTail], 0);\n                DB.checkRc(\n                  this,\n                  capi.sqlite3_prepare_v3(\n                    this.pointer,\n                    pSql,\n                    sqlByteLen,\n                    0,\n                    ppStmt,\n                    pzTail,\n                  ),\n                );\n                const pStmt = wasm.peekPtr(ppStmt);\n                pSql = wasm.peekPtr(pzTail);\n                sqlByteLen = pSqlEnd - pSql;\n                if (!pStmt) continue;\n                if (saveSql) saveSql.push(capi.sqlite3_sql(pStmt).trim());\n                stmt = new Stmt(this, pStmt, BindTypes);\n                if (bind && stmt.parameterCount) {\n                  stmt.bind(bind);\n                  bind = null;\n                }\n                if (evalFirstResult && stmt.columnCount) {\n                  evalFirstResult = false;\n                  if (Array.isArray(opt.columnNames)) {\n                    stmt.getColumnNames(opt.columnNames);\n                  }\n                  if (arg.cbArg || resultRows) {\n                    for (; stmt.step(); stmt._isLocked = false) {\n                      stmt._isLocked = true;\n                      const row = arg.cbArg(stmt);\n                      if (resultRows) resultRows.push(row);\n                      if (callback && false === callback.call(opt, row, stmt)) {\n                        break;\n                      }\n                    }\n                    stmt._isLocked = false;\n                  }\n                } else {\n                  stmt.step();\n                }\n                stmt.finalize();\n                stmt = null;\n              }\n            } finally {\n              if (stmt) {\n                delete stmt._isLocked;\n                stmt.finalize();\n              }\n              wasm.scopedAllocPop(stack);\n            }\n            return arg.returnVal();\n          },\n\n          createFunction: function f(name, xFunc, opt) {\n            const isFunc = (f) => f instanceof Function;\n            switch (arguments.length) {\n              case 1:\n                opt = name;\n                name = opt.name;\n                xFunc = opt.xFunc || 0;\n                break;\n              case 2:\n                if (!isFunc(xFunc)) {\n                  opt = xFunc;\n                  xFunc = opt.xFunc || 0;\n                }\n                break;\n              case 3:\n                break;\n              default:\n                break;\n            }\n            if (!opt) opt = {};\n            if ('string' !== typeof name) {\n              toss3('Invalid arguments: missing function name.');\n            }\n            let xStep = opt.xStep || 0;\n            let xFinal = opt.xFinal || 0;\n            const xValue = opt.xValue || 0;\n            const xInverse = opt.xInverse || 0;\n            let isWindow = undefined;\n            if (isFunc(xFunc)) {\n              isWindow = false;\n              if (isFunc(xStep) || isFunc(xFinal)) {\n                toss3('Ambiguous arguments: scalar or aggregate?');\n              }\n              xStep = xFinal = null;\n            } else if (isFunc(xStep)) {\n              if (!isFunc(xFinal)) {\n                toss3('Missing xFinal() callback for aggregate or window UDF.');\n              }\n              xFunc = null;\n            } else if (isFunc(xFinal)) {\n              toss3('Missing xStep() callback for aggregate or window UDF.');\n            } else {\n              toss3('Missing function-type properties.');\n            }\n            if (false === isWindow) {\n              if (isFunc(xValue) || isFunc(xInverse)) {\n                toss3(\n                  'xValue and xInverse are not permitted for non-window UDFs.',\n                );\n              }\n            } else if (isFunc(xValue)) {\n              if (!isFunc(xInverse)) {\n                toss3('xInverse must be provided if xValue is.');\n              }\n              isWindow = true;\n            } else if (isFunc(xInverse)) {\n              toss3('xValue must be provided if xInverse is.');\n            }\n            const pApp = opt.pApp;\n            if (\n              undefined !== pApp &&\n              null !== pApp &&\n              ('number' !== typeof pApp || !util.isInt32(pApp))\n            ) {\n              toss3(\n                'Invalid value for pApp property. Must be a legal WASM pointer value.',\n              );\n            }\n            const xDestroy = opt.xDestroy || 0;\n            if (xDestroy && !isFunc(xDestroy)) {\n              toss3('xDestroy property must be a function.');\n            }\n            let fFlags = 0;\n            if (getOwnOption(opt, 'deterministic'))\n              fFlags |= capi.SQLITE_DETERMINISTIC;\n            if (getOwnOption(opt, 'directOnly'))\n              fFlags |= capi.SQLITE_DIRECTONLY;\n            if (getOwnOption(opt, 'innocuous')) fFlags |= capi.SQLITE_INNOCUOUS;\n            name = name.toLowerCase();\n            const xArity = xFunc || xStep;\n            const arity = getOwnOption(opt, 'arity');\n            const arityArg =\n              'number' === typeof arity\n                ? arity\n                : xArity.length\n                ? xArity.length - 1\n                : 0;\n            let rc;\n            if (isWindow) {\n              rc = capi.sqlite3_create_window_function(\n                this.pointer,\n                name,\n                arityArg,\n                capi.SQLITE_UTF8 | fFlags,\n                pApp || 0,\n                xStep,\n                xFinal,\n                xValue,\n                xInverse,\n                xDestroy,\n              );\n            } else {\n              rc = capi.sqlite3_create_function_v2(\n                this.pointer,\n                name,\n                arityArg,\n                capi.SQLITE_UTF8 | fFlags,\n                pApp || 0,\n                xFunc,\n                xStep,\n                xFinal,\n                xDestroy,\n              );\n            }\n            DB.checkRc(this, rc);\n            return this;\n          },\n\n          selectValue: function (sql, bind, asType) {\n            return __selectFirstRow(this, sql, bind, 0, asType);\n          },\n\n          selectValues: function (sql, bind, asType) {\n            const stmt = this.prepare(sql),\n              rc = [];\n            try {\n              stmt.bind(bind);\n              while (stmt.step()) rc.push(stmt.get(0, asType));\n            } finally {\n              stmt.finalize();\n            }\n            return rc;\n          },\n\n          selectArray: function (sql, bind) {\n            return __selectFirstRow(this, sql, bind, []);\n          },\n\n          selectObject: function (sql, bind) {\n            return __selectFirstRow(this, sql, bind, {});\n          },\n\n          selectArrays: function (sql, bind) {\n            return __selectAll(this, sql, bind, 'array');\n          },\n\n          selectObjects: function (sql, bind) {\n            return __selectAll(this, sql, bind, 'object');\n          },\n\n          openStatementCount: function () {\n            return this.pointer ? Object.keys(__stmtMap.get(this)).length : 0;\n          },\n\n          transaction: function (callback) {\n            let opener = 'BEGIN';\n            if (arguments.length > 1) {\n              if (/[^a-zA-Z]/.test(arguments[0])) {\n                toss3(\n                  capi.SQLITE_MISUSE,\n                  'Invalid argument for BEGIN qualifier.',\n                );\n              }\n              opener += ' ' + arguments[0];\n              callback = arguments[1];\n            }\n            affirmDbOpen(this).exec(opener);\n            try {\n              const rc = callback(this);\n              this.exec('COMMIT');\n              return rc;\n            } catch (e) {\n              this.exec('ROLLBACK');\n              throw e;\n            }\n          },\n\n          savepoint: function (callback) {\n            affirmDbOpen(this).exec('SAVEPOINT oo1');\n            try {\n              const rc = callback(this);\n              this.exec('RELEASE oo1');\n              return rc;\n            } catch (e) {\n              this.exec('ROLLBACK to SAVEPOINT oo1; RELEASE SAVEPOINT oo1');\n              throw e;\n            }\n          },\n\n          checkRc: function (resultCode) {\n            return DB.checkRc(this, resultCode);\n          },\n        };\n\n        const affirmStmtOpen = function (stmt) {\n          if (!stmt.pointer) toss3('Stmt has been closed.');\n          return stmt;\n        };\n\n        const isSupportedBindType = function (v) {\n          let t = BindTypes[null === v || undefined === v ? 'null' : typeof v];\n          switch (t) {\n            case BindTypes.boolean:\n            case BindTypes.null:\n            case BindTypes.number:\n            case BindTypes.string:\n              return t;\n            case BindTypes.bigint:\n              if (wasm.bigIntEnabled) return t;\n\n            default:\n              return util.isBindableTypedArray(v) ? BindTypes.blob : undefined;\n          }\n        };\n\n        const affirmSupportedBindType = function (v) {\n          return (\n            isSupportedBindType(v) ||\n            toss3('Unsupported bind() argument type:', typeof v)\n          );\n        };\n\n        const affirmParamIndex = function (stmt, key) {\n          const n =\n            'number' === typeof key\n              ? key\n              : capi.sqlite3_bind_parameter_index(stmt.pointer, key);\n          if (0 === n || !util.isInt32(n)) {\n            toss3('Invalid bind() parameter name: ' + key);\n          } else if (n < 1 || n > stmt.parameterCount)\n            toss3('Bind index', key, 'is out of range.');\n          return n;\n        };\n\n        const affirmUnlocked = function (stmt, currentOpName) {\n          if (stmt._isLocked) {\n            toss3(\n              'Operation is illegal when statement is locked:',\n              currentOpName,\n            );\n          }\n          return stmt;\n        };\n\n        const bindOne = function f(stmt, ndx, bindType, val) {\n          affirmUnlocked(affirmStmtOpen(stmt), 'bind()');\n          if (!f._) {\n            f._tooBigInt = (v) =>\n              toss3(\n                'BigInt value is too big to store without precision loss:',\n                v,\n              );\n\n            f._ = {\n              string: function (stmt, ndx, val, asBlob) {\n                const [pStr, n] = wasm.allocCString(val, true);\n                const f = asBlob\n                  ? capi.sqlite3_bind_blob\n                  : capi.sqlite3_bind_text;\n                return f(stmt.pointer, ndx, pStr, n, capi.SQLITE_WASM_DEALLOC);\n              },\n            };\n          }\n          affirmSupportedBindType(val);\n          ndx = affirmParamIndex(stmt, ndx);\n          let rc = 0;\n          switch (\n            null === val || undefined === val ? BindTypes.null : bindType\n          ) {\n            case BindTypes.null:\n              rc = capi.sqlite3_bind_null(stmt.pointer, ndx);\n              break;\n            case BindTypes.string:\n              rc = f._.string(stmt, ndx, val, false);\n              break;\n            case BindTypes.number: {\n              let m;\n              if (util.isInt32(val)) m = capi.sqlite3_bind_int;\n              else if ('bigint' === typeof val) {\n                if (!util.bigIntFits64(val)) {\n                  f._tooBigInt(val);\n                } else if (wasm.bigIntEnabled) {\n                  m = capi.sqlite3_bind_int64;\n                } else if (util.bigIntFitsDouble(val)) {\n                  val = Number(val);\n                  m = capi.sqlite3_bind_double;\n                } else {\n                  f._tooBigInt(val);\n                }\n              } else {\n                val = Number(val);\n                if (wasm.bigIntEnabled && Number.isInteger(val)) {\n                  m = capi.sqlite3_bind_int64;\n                } else {\n                  m = capi.sqlite3_bind_double;\n                }\n              }\n              rc = m(stmt.pointer, ndx, val);\n              break;\n            }\n            case BindTypes.boolean:\n              rc = capi.sqlite3_bind_int(stmt.pointer, ndx, val ? 1 : 0);\n              break;\n            case BindTypes.blob: {\n              if ('string' === typeof val) {\n                rc = f._.string(stmt, ndx, val, true);\n                break;\n              } else if (val instanceof ArrayBuffer) {\n                val = new Uint8Array(val);\n              } else if (!util.isBindableTypedArray(val)) {\n                toss3(\n                  'Binding a value as a blob requires',\n                  'that it be a string, Uint8Array, Int8Array, or ArrayBuffer.',\n                );\n              }\n              const pBlob = wasm.alloc(val.byteLength || 1);\n              wasm.heap8().set(val.byteLength ? val : [0], pBlob);\n              rc = capi.sqlite3_bind_blob(\n                stmt.pointer,\n                ndx,\n                pBlob,\n                val.byteLength,\n                capi.SQLITE_WASM_DEALLOC,\n              );\n              break;\n            }\n            default:\n              sqlite3.config.warn('Unsupported bind() argument type:', val);\n              toss3('Unsupported bind() argument type: ' + typeof val);\n          }\n          if (rc) DB.checkRc(stmt.db.pointer, rc);\n          stmt._mayGet = false;\n          return stmt;\n        };\n\n        Stmt.prototype = {\n          finalize: function () {\n            if (this.pointer) {\n              affirmUnlocked(this, 'finalize()');\n              delete __stmtMap.get(this.db)[this.pointer];\n              capi.sqlite3_finalize(this.pointer);\n              __ptrMap.delete(this);\n              delete this._mayGet;\n              delete this.columnCount;\n              delete this.parameterCount;\n              delete this.db;\n              delete this._isLocked;\n            }\n          },\n\n          clearBindings: function () {\n            affirmUnlocked(affirmStmtOpen(this), 'clearBindings()');\n            capi.sqlite3_clear_bindings(this.pointer);\n            this._mayGet = false;\n            return this;\n          },\n\n          reset: function (alsoClearBinds) {\n            affirmUnlocked(this, 'reset()');\n            if (alsoClearBinds) this.clearBindings();\n            capi.sqlite3_reset(affirmStmtOpen(this).pointer);\n            this._mayGet = false;\n            return this;\n          },\n\n          bind: function () {\n            affirmStmtOpen(this);\n            let ndx, arg;\n            switch (arguments.length) {\n              case 1:\n                ndx = 1;\n                arg = arguments[0];\n                break;\n              case 2:\n                ndx = arguments[0];\n                arg = arguments[1];\n                break;\n              default:\n                toss3('Invalid bind() arguments.');\n            }\n            if (undefined === arg) {\n              return this;\n            } else if (!this.parameterCount) {\n              toss3('This statement has no bindable parameters.');\n            }\n            this._mayGet = false;\n            if (null === arg) {\n              return bindOne(this, ndx, BindTypes.null, arg);\n            } else if (Array.isArray(arg)) {\n              if (1 !== arguments.length) {\n                toss3(\n                  'When binding an array, an index argument is not permitted.',\n                );\n              }\n              arg.forEach((v, i) =>\n                bindOne(this, i + 1, affirmSupportedBindType(v), v),\n              );\n              return this;\n            } else if (arg instanceof ArrayBuffer) {\n              arg = new Uint8Array(arg);\n            }\n            if ('object' === typeof arg && !util.isBindableTypedArray(arg)) {\n              if (1 !== arguments.length) {\n                toss3(\n                  'When binding an object, an index argument is not permitted.',\n                );\n              }\n              Object.keys(arg).forEach((k) =>\n                bindOne(this, k, affirmSupportedBindType(arg[k]), arg[k]),\n              );\n              return this;\n            } else {\n              return bindOne(this, ndx, affirmSupportedBindType(arg), arg);\n            }\n            toss3('Should not reach this point.');\n          },\n\n          bindAsBlob: function (ndx, arg) {\n            affirmStmtOpen(this);\n            if (1 === arguments.length) {\n              arg = ndx;\n              ndx = 1;\n            }\n            const t = affirmSupportedBindType(arg);\n            if (\n              BindTypes.string !== t &&\n              BindTypes.blob !== t &&\n              BindTypes.null !== t\n            ) {\n              toss3('Invalid value type for bindAsBlob()');\n            }\n            return bindOne(this, ndx, BindTypes.blob, arg);\n          },\n\n          step: function () {\n            affirmUnlocked(this, 'step()');\n            const rc = capi.sqlite3_step(affirmStmtOpen(this).pointer);\n            switch (rc) {\n              case capi.SQLITE_DONE:\n                return (this._mayGet = false);\n              case capi.SQLITE_ROW:\n                return (this._mayGet = true);\n              default:\n                this._mayGet = false;\n                sqlite3.config.warn(\n                  'sqlite3_step() rc=',\n                  rc,\n                  capi.sqlite3_js_rc_str(rc),\n                  'SQL =',\n                  capi.sqlite3_sql(this.pointer),\n                );\n                DB.checkRc(this.db.pointer, rc);\n            }\n          },\n\n          stepReset: function () {\n            this.step();\n            return this.reset();\n          },\n\n          stepFinalize: function () {\n            const rc = this.step();\n            this.finalize();\n            return rc;\n          },\n\n          get: function (ndx, asType) {\n            if (!affirmStmtOpen(this)._mayGet) {\n              toss3('Stmt.step() has not (recently) returned true.');\n            }\n            if (Array.isArray(ndx)) {\n              let i = 0;\n              while (i < this.columnCount) {\n                ndx[i] = this.get(i++);\n              }\n              return ndx;\n            } else if (ndx && 'object' === typeof ndx) {\n              let i = 0;\n              while (i < this.columnCount) {\n                ndx[capi.sqlite3_column_name(this.pointer, i)] = this.get(i++);\n              }\n              return ndx;\n            }\n            affirmColIndex(this, ndx);\n            switch (\n              undefined === asType\n                ? capi.sqlite3_column_type(this.pointer, ndx)\n                : asType\n            ) {\n              case capi.SQLITE_NULL:\n                return null;\n              case capi.SQLITE_INTEGER: {\n                if (wasm.bigIntEnabled) {\n                  const rc = capi.sqlite3_column_int64(this.pointer, ndx);\n                  if (\n                    rc >= Number.MIN_SAFE_INTEGER &&\n                    rc <= Number.MAX_SAFE_INTEGER\n                  ) {\n                    return Number(rc).valueOf();\n                  }\n                  return rc;\n                } else {\n                  const rc = capi.sqlite3_column_double(this.pointer, ndx);\n                  if (\n                    rc > Number.MAX_SAFE_INTEGER ||\n                    rc < Number.MIN_SAFE_INTEGER\n                  ) {\n                    toss3(\n                      'Integer is out of range for JS integer range: ' + rc,\n                    );\n                  }\n\n                  return util.isInt32(rc) ? rc | 0 : rc;\n                }\n              }\n              case capi.SQLITE_FLOAT:\n                return capi.sqlite3_column_double(this.pointer, ndx);\n              case capi.SQLITE_TEXT:\n                return capi.sqlite3_column_text(this.pointer, ndx);\n              case capi.SQLITE_BLOB: {\n                const n = capi.sqlite3_column_bytes(this.pointer, ndx),\n                  ptr = capi.sqlite3_column_blob(this.pointer, ndx),\n                  rc = new Uint8Array(n);\n\n                if (n) rc.set(wasm.heap8u().slice(ptr, ptr + n), 0);\n\n                if (n && this.db._blobXfer instanceof Array) {\n                  this.db._blobXfer.push(rc.buffer);\n                }\n                return rc;\n              }\n              default:\n                toss3(\n                  \"Don't know how to translate\",\n                  'type of result column #' + ndx + '.',\n                );\n            }\n            toss3('Not reached.');\n          },\n\n          getInt: function (ndx) {\n            return this.get(ndx, capi.SQLITE_INTEGER);\n          },\n\n          getFloat: function (ndx) {\n            return this.get(ndx, capi.SQLITE_FLOAT);\n          },\n\n          getString: function (ndx) {\n            return this.get(ndx, capi.SQLITE_TEXT);\n          },\n\n          getBlob: function (ndx) {\n            return this.get(ndx, capi.SQLITE_BLOB);\n          },\n\n          getJSON: function (ndx) {\n            const s = this.get(ndx, capi.SQLITE_STRING);\n            return null === s ? s : JSON.parse(s);\n          },\n\n          getColumnName: function (ndx) {\n            return capi.sqlite3_column_name(\n              affirmColIndex(affirmStmtOpen(this), ndx).pointer,\n              ndx,\n            );\n          },\n\n          getColumnNames: function (tgt = []) {\n            affirmColIndex(affirmStmtOpen(this), 0);\n            for (let i = 0; i < this.columnCount; ++i) {\n              tgt.push(capi.sqlite3_column_name(this.pointer, i));\n            }\n            return tgt;\n          },\n\n          getParamIndex: function (name) {\n            return affirmStmtOpen(this).parameterCount\n              ? capi.sqlite3_bind_parameter_index(this.pointer, name)\n              : undefined;\n          },\n        };\n\n        {\n          const prop = {\n            enumerable: true,\n            get: function () {\n              return __ptrMap.get(this);\n            },\n            set: () => toss3('The pointer property is read-only.'),\n          };\n          Object.defineProperty(Stmt.prototype, 'pointer', prop);\n          Object.defineProperty(DB.prototype, 'pointer', prop);\n        }\n\n        sqlite3.oo1 = {\n          DB,\n          Stmt,\n        };\n\n        if (util.isUIThread()) {\n          sqlite3.oo1.JsStorageDb = function (storageName = 'session') {\n            if ('session' !== storageName && 'local' !== storageName) {\n              toss3(\"JsStorageDb db name must be one of 'session' or 'local'.\");\n            }\n            dbCtorHelper.call(this, {\n              filename: storageName,\n              flags: 'c',\n              vfs: 'kvvfs',\n            });\n          };\n          const jdb = sqlite3.oo1.JsStorageDb;\n          jdb.prototype = Object.create(DB.prototype);\n\n          jdb.clearStorage = capi.sqlite3_js_kvvfs_clear;\n\n          jdb.prototype.clearStorage = function () {\n            return jdb.clearStorage(affirmDbOpen(this).filename);\n          };\n\n          jdb.storageSize = capi.sqlite3_js_kvvfs_size;\n\n          jdb.prototype.storageSize = function () {\n            return jdb.storageSize(affirmDbOpen(this).filename);\n          };\n        }\n      });\n\n      self.sqlite3ApiBootstrap.initializers.push(function (sqlite3) {\n        sqlite3.initWorker1API = function () {\n          'use strict';\n          const toss = (...args) => {\n            throw new Error(args.join(' '));\n          };\n          if ('function' !== typeof importScripts) {\n            toss('initWorker1API() must be run from a Worker thread.');\n          }\n          const self = this.self;\n          const sqlite3 = this.sqlite3 || toss('Missing this.sqlite3 object.');\n          const DB = sqlite3.oo1.DB;\n\n          const getDbId = function (db) {\n            let id = wState.idMap.get(db);\n            if (id) return id;\n            id = 'db#' + ++wState.idSeq + '@' + db.pointer;\n\n            wState.idMap.set(db, id);\n            return id;\n          };\n\n          const wState = {\n            dbList: [],\n\n            idSeq: 0,\n\n            idMap: new WeakMap(),\n\n            xfer: [],\n            open: function (opt) {\n              const db = new DB(opt);\n              this.dbs[getDbId(db)] = db;\n              if (this.dbList.indexOf(db) < 0) this.dbList.push(db);\n              return db;\n            },\n            close: function (db, alsoUnlink) {\n              if (db) {\n                delete this.dbs[getDbId(db)];\n                const filename = db.filename;\n                const pVfs = sqlite3.wasm.sqlite3_wasm_db_vfs(db.pointer, 0);\n                db.close();\n                const ddNdx = this.dbList.indexOf(db);\n                if (ddNdx >= 0) this.dbList.splice(ddNdx, 1);\n                if (alsoUnlink && filename && pVfs) {\n                  sqlite3.wasm.sqlite3_wasm_vfs_unlink(pVfs, filename);\n                }\n              }\n            },\n\n            post: function (msg, xferList) {\n              if (xferList && xferList.length) {\n                self.postMessage(msg, Array.from(xferList));\n                xferList.length = 0;\n              } else {\n                self.postMessage(msg);\n              }\n            },\n\n            dbs: Object.create(null),\n\n            getDb: function (id, require = true) {\n              return (\n                this.dbs[id] ||\n                (require ? toss('Unknown (or closed) DB ID:', id) : undefined)\n              );\n            },\n          };\n\n          const affirmDbOpen = function (db = wState.dbList[0]) {\n            return db && db.pointer ? db : toss('DB is not opened.');\n          };\n\n          const getMsgDb = function (msgData, affirmExists = true) {\n            const db = wState.getDb(msgData.dbId, false) || wState.dbList[0];\n            return affirmExists ? affirmDbOpen(db) : db;\n          };\n\n          const getDefaultDbId = function () {\n            return wState.dbList[0] && getDbId(wState.dbList[0]);\n          };\n\n          const guessVfs = function (filename) {\n            const m = /^file:.+(vfs=(\\w+))/.exec(filename);\n            return sqlite3.capi.sqlite3_vfs_find(m ? m[2] : 0);\n          };\n\n          const isSpecialDbFilename = (n) => {\n            return '' === n || ':' === n[0];\n          };\n\n          const wMsgHandler = {\n            open: function (ev) {\n              const oargs = Object.create(null),\n                args = ev.args || Object.create(null);\n              if (args.simulateError) {\n                toss('Throwing because of simulateError flag.');\n              }\n              const rc = Object.create(null);\n              let byteArray, pVfs;\n              oargs.vfs = args.vfs;\n              if (isSpecialDbFilename(args.filename)) {\n                oargs.filename = args.filename || '';\n              } else {\n                oargs.filename = args.filename;\n                byteArray = args.byteArray;\n                if (byteArray) pVfs = guessVfs(args.filename);\n              }\n              if (pVfs) {\n                let pMem;\n                try {\n                  pMem = sqlite3.wasm.allocFromTypedArray(byteArray);\n                  const rc = sqlite3.wasm.sqlite3_wasm_vfs_create_file(\n                    pVfs,\n                    oargs.filename,\n                    pMem,\n                    byteArray.byteLength,\n                  );\n                  if (rc) sqlite3.SQLite3Error.toss(rc);\n                } catch (e) {\n                  throw new sqlite3.SQLite3Error(\n                    e.name + ' creating ' + args.filename + ': ' + e.message,\n                    {\n                      cause: e,\n                    },\n                  );\n                } finally {\n                  if (pMem) sqlite3.wasm.dealloc(pMem);\n                }\n              }\n              const db = wState.open(oargs);\n              rc.filename = db.filename;\n              rc.persistent = !!sqlite3.capi.sqlite3_js_db_uses_vfs(\n                db.pointer,\n                'opfs',\n              );\n              rc.dbId = getDbId(db);\n              rc.vfs = db.dbVfsName();\n              return rc;\n            },\n\n            close: function (ev) {\n              const db = getMsgDb(ev, false);\n              const response = {\n                filename: db && db.filename,\n              };\n              if (db) {\n                const doUnlink =\n                  ev.args && 'object' === typeof ev.args\n                    ? !!ev.args.unlink\n                    : false;\n                wState.close(db, doUnlink);\n              }\n              return response;\n            },\n\n            exec: function (ev) {\n              const rc =\n                'string' === typeof ev.args\n                  ? { sql: ev.args }\n                  : ev.args || Object.create(null);\n              if ('stmt' === rc.rowMode) {\n                toss(\n                  \"Invalid rowMode for 'exec': stmt mode\",\n                  'does not work in the Worker API.',\n                );\n              } else if (!rc.sql) {\n                toss(\"'exec' requires input SQL.\");\n              }\n              const db = getMsgDb(ev);\n              if (rc.callback || Array.isArray(rc.resultRows)) {\n                db._blobXfer = wState.xfer;\n              }\n              const theCallback = rc.callback;\n              let rowNumber = 0;\n              const hadColNames = !!rc.columnNames;\n              if ('string' === typeof theCallback) {\n                if (!hadColNames) rc.columnNames = [];\n\n                rc.callback = function (row, stmt) {\n                  wState.post(\n                    {\n                      type: theCallback,\n                      columnNames: rc.columnNames,\n                      rowNumber: ++rowNumber,\n                      row: row,\n                    },\n                    wState.xfer,\n                  );\n                };\n              }\n              try {\n                db.exec(rc);\n                if (rc.callback instanceof Function) {\n                  rc.callback = theCallback;\n\n                  wState.post({\n                    type: theCallback,\n                    columnNames: rc.columnNames,\n                    rowNumber: null,\n                    row: undefined,\n                  });\n                }\n              } finally {\n                delete db._blobXfer;\n                if (rc.callback) rc.callback = theCallback;\n              }\n              return rc;\n            },\n\n            'config-get': function () {\n              const rc = Object.create(null),\n                src = sqlite3.config;\n              ['bigIntEnabled'].forEach(function (k) {\n                if (Object.getOwnPropertyDescriptor(src, k)) rc[k] = src[k];\n              });\n              rc.version = sqlite3.version;\n              rc.vfsList = sqlite3.capi.sqlite3_js_vfs_list();\n              rc.opfsEnabled = !!sqlite3.opfs;\n              return rc;\n            },\n\n            export: function (ev) {\n              const db = getMsgDb(ev);\n              const response = {\n                byteArray: sqlite3.capi.sqlite3_js_db_export(db.pointer),\n                filename: db.filename,\n                mimetype: 'application/x-sqlite3',\n              };\n              wState.xfer.push(response.byteArray.buffer);\n              return response;\n            },\n\n            toss: function (ev) {\n              toss('Testing worker exception');\n            },\n\n            'opfs-tree': async function (ev) {\n              if (!sqlite3.opfs) toss('OPFS support is unavailable.');\n              const response = await sqlite3.opfs.treeList();\n              return response;\n            },\n          };\n\n          self.onmessage = async function (ev) {\n            ev = ev.data;\n            let result,\n              dbId = ev.dbId,\n              evType = ev.type;\n            const arrivalTime = performance.now();\n            try {\n              if (\n                wMsgHandler.hasOwnProperty(evType) &&\n                wMsgHandler[evType] instanceof Function\n              ) {\n                result = await wMsgHandler[evType](ev);\n              } else {\n                toss('Unknown db worker message type:', ev.type);\n              }\n            } catch (err) {\n              evType = 'error';\n              result = {\n                operation: ev.type,\n                message: err.message,\n                errorClass: err.name,\n                input: ev,\n              };\n              if (err.stack) {\n                result.stack =\n                  'string' === typeof err.stack\n                    ? err.stack.split(/\\n\\s*/)\n                    : err.stack;\n              }\n              if (0)\n                sqlite3.config.warn(\n                  'Worker is propagating an exception to main thread.',\n                  'Reporting it _here_ for the stack trace:',\n                  err,\n                  result,\n                );\n            }\n            if (!dbId) {\n              dbId = result.dbId || getDefaultDbId();\n            }\n\n            wState.post(\n              {\n                type: evType,\n                dbId: dbId,\n                messageId: ev.messageId,\n                workerReceivedTime: arrivalTime,\n                workerRespondTime: performance.now(),\n                departureTime: ev.departureTime,\n\n                result: result,\n              },\n              wState.xfer,\n            );\n          };\n          self.postMessage({ type: 'sqlite3-api', result: 'worker1-ready' });\n        }.bind({ self, sqlite3 });\n      });\n\n      ('use strict');\n      self.sqlite3ApiBootstrap.initializers.push(function (sqlite3) {\n        const wasm = sqlite3.wasm,\n          capi = sqlite3.capi,\n          toss = sqlite3.util.toss3;\n        const vfs = Object.create(null),\n          vtab = Object.create(null);\n\n        sqlite3.vfs = vfs;\n        sqlite3.vtab = vtab;\n\n        const sii = capi.sqlite3_index_info;\n\n        sii.prototype.nthConstraint = function (n, asPtr = false) {\n          if (n < 0 || n >= this.$nConstraint) return false;\n          const ptr =\n            this.$aConstraint +\n            sii.sqlite3_index_constraint.structInfo.sizeof * n;\n          return asPtr ? ptr : new sii.sqlite3_index_constraint(ptr);\n        };\n\n        sii.prototype.nthConstraintUsage = function (n, asPtr = false) {\n          if (n < 0 || n >= this.$nConstraint) return false;\n          const ptr =\n            this.$aConstraintUsage +\n            sii.sqlite3_index_constraint_usage.structInfo.sizeof * n;\n          return asPtr ? ptr : new sii.sqlite3_index_constraint_usage(ptr);\n        };\n\n        sii.prototype.nthOrderBy = function (n, asPtr = false) {\n          if (n < 0 || n >= this.$nOrderBy) return false;\n          const ptr =\n            this.$aOrderBy + sii.sqlite3_index_orderby.structInfo.sizeof * n;\n          return asPtr ? ptr : new sii.sqlite3_index_orderby(ptr);\n        };\n\n        const installMethod = function callee(\n          tgt,\n          name,\n          func,\n          applyArgcCheck = callee.installMethodArgcCheck,\n        ) {\n          if (!(tgt instanceof sqlite3.StructBinder.StructType)) {\n            toss('Usage error: target object is-not-a StructType.');\n          } else if (!(func instanceof Function) && !wasm.isPtr(func)) {\n            toss('Usage errror: expecting a Function or WASM pointer to one.');\n          }\n          if (1 === arguments.length) {\n            return (n, f) => callee(tgt, n, f, applyArgcCheck);\n          }\n          if (!callee.argcProxy) {\n            callee.argcProxy = function (tgt, funcName, func, sig) {\n              return function (...args) {\n                if (func.length !== arguments.length) {\n                  toss(\n                    'Argument mismatch for',\n                    tgt.structInfo.name +\n                      '::' +\n                      funcName +\n                      ': Native signature is:',\n                    sig,\n                  );\n                }\n                return func.apply(this, args);\n              };\n            };\n\n            callee.removeFuncList = function () {\n              if (this.ondispose.__removeFuncList) {\n                this.ondispose.__removeFuncList.forEach((v, ndx) => {\n                  if ('number' === typeof v) {\n                    try {\n                      wasm.uninstallFunction(v);\n                    } catch (e) {}\n                  }\n                });\n                delete this.ondispose.__removeFuncList;\n              }\n            };\n          }\n          const sigN = tgt.memberSignature(name);\n          if (sigN.length < 2) {\n            toss(\n              'Member',\n              name,\n              'does not have a function pointer signature:',\n              sigN,\n            );\n          }\n          const memKey = tgt.memberKey(name);\n          const fProxy =\n            applyArgcCheck && !wasm.isPtr(func)\n              ? callee.argcProxy(tgt, memKey, func, sigN)\n              : func;\n          if (wasm.isPtr(fProxy)) {\n            if (fProxy && !wasm.functionEntry(fProxy)) {\n              toss('Pointer', fProxy, 'is not a WASM function table entry.');\n            }\n            tgt[memKey] = fProxy;\n          } else {\n            const pFunc = wasm.installFunction(\n              fProxy,\n              tgt.memberSignature(name, true),\n            );\n            tgt[memKey] = pFunc;\n            if (!tgt.ondispose || !tgt.ondispose.__removeFuncList) {\n              tgt.addOnDispose(\n                'ondispose.__removeFuncList handler',\n                callee.removeFuncList,\n              );\n              tgt.ondispose.__removeFuncList = [];\n            }\n            tgt.ondispose.__removeFuncList.push(memKey, pFunc);\n          }\n          return (n, f) => callee(tgt, n, f, applyArgcCheck);\n        };\n        installMethod.installMethodArgcCheck = false;\n\n        const installMethods = function (\n          structInstance,\n          methods,\n          applyArgcCheck = installMethod.installMethodArgcCheck,\n        ) {\n          const seen = new Map();\n          for (const k of Object.keys(methods)) {\n            const m = methods[k];\n            const prior = seen.get(m);\n            if (prior) {\n              const mkey = structInstance.memberKey(k);\n              structInstance[mkey] =\n                structInstance[structInstance.memberKey(prior)];\n            } else {\n              installMethod(structInstance, k, m, applyArgcCheck);\n              seen.set(m, k);\n            }\n          }\n          return structInstance;\n        };\n\n        sqlite3.StructBinder.StructType.prototype.installMethod =\n          function callee(\n            name,\n            func,\n            applyArgcCheck = installMethod.installMethodArgcCheck,\n          ) {\n            return arguments.length < 3 && name && 'object' === typeof name\n              ? installMethods(this, ...arguments)\n              : installMethod(this, ...arguments);\n          };\n\n        sqlite3.StructBinder.StructType.prototype.installMethods = function (\n          methods,\n          applyArgcCheck = installMethod.installMethodArgcCheck,\n        ) {\n          return installMethods(this, methods, applyArgcCheck);\n        };\n\n        capi.sqlite3_vfs.prototype.registerVfs = function (asDefault = false) {\n          if (!(this instanceof sqlite3.capi.sqlite3_vfs)) {\n            toss('Expecting a sqlite3_vfs-type argument.');\n          }\n          const rc = capi.sqlite3_vfs_register(this, asDefault ? 1 : 0);\n          if (rc) {\n            toss('sqlite3_vfs_register(', this, ') failed with rc', rc);\n          }\n          if (this.pointer !== capi.sqlite3_vfs_find(this.$zName)) {\n            toss(\n              'BUG: sqlite3_vfs_find(vfs.$zName) failed for just-installed VFS',\n              this,\n            );\n          }\n          return this;\n        };\n\n        vfs.installVfs = function (opt) {\n          let count = 0;\n          const propList = ['io', 'vfs'];\n          for (const key of propList) {\n            const o = opt[key];\n            if (o) {\n              ++count;\n              installMethods(o.struct, o.methods, !!o.applyArgcCheck);\n              if ('vfs' === key) {\n                if (!o.struct.$zName && 'string' === typeof o.name) {\n                  o.struct.addOnDispose(\n                    (o.struct.$zName = wasm.allocCString(o.name)),\n                  );\n                }\n                o.struct.registerVfs(!!o.asDefault);\n              }\n            }\n          }\n          if (!count)\n            toss(\n              'Misuse: installVfs() options object requires at least',\n              'one of:',\n              propList,\n            );\n          return this;\n        };\n\n        const __xWrapFactory = function (methodName, StructType) {\n          return function (ptr, removeMapping = false) {\n            if (0 === arguments.length) ptr = new StructType();\n            if (ptr instanceof StructType) {\n              this.set(ptr.pointer, ptr);\n              return ptr;\n            } else if (!wasm.isPtr(ptr)) {\n              sqlite3.SQLite3Error.toss(\n                'Invalid argument to',\n                methodName + '()',\n              );\n            }\n            let rc = this.get(ptr);\n            if (removeMapping) this.delete(ptr);\n            return rc;\n          }.bind(new Map());\n        };\n\n        const StructPtrMapper = function (name, StructType) {\n          const __xWrap = __xWrapFactory(name, StructType);\n\n          return Object.assign(Object.create(null), {\n            StructType,\n\n            create: (ppOut) => {\n              const rc = __xWrap();\n              wasm.pokePtr(ppOut, rc.pointer);\n              return rc;\n            },\n\n            get: (pCObj) => __xWrap(pCObj),\n\n            unget: (pCObj) => __xWrap(pCObj, true),\n\n            dispose: (pCObj) => {\n              const o = __xWrap(pCObj, true);\n              if (o) o.dispose();\n            },\n          });\n        };\n\n        vtab.xVtab = StructPtrMapper('xVtab', capi.sqlite3_vtab);\n\n        vtab.xCursor = StructPtrMapper('xCursor', capi.sqlite3_vtab_cursor);\n\n        vtab.xIndexInfo = (pIdxInfo) => new capi.sqlite3_index_info(pIdxInfo);\n\n        vtab.xError = function f(methodName, err, defaultRc) {\n          if (f.errorReporter instanceof Function) {\n            try {\n              f.errorReporter(\n                'sqlite3_module::' + methodName + '(): ' + err.message,\n              );\n            } catch (e) {}\n          }\n          let rc;\n          if (err instanceof sqlite3.WasmAllocError) rc = capi.SQLITE_NOMEM;\n          else if (arguments.length > 2) rc = defaultRc;\n          else if (err instanceof sqlite3.SQLite3Error) rc = err.resultCode;\n          return rc || capi.SQLITE_ERROR;\n        };\n        vtab.xError.errorReporter = 1 ? console.error.bind(console) : false;\n\n        vtab.xRowid = (ppRowid64, value) => wasm.poke(ppRowid64, value, 'i64');\n\n        vtab.setupModule = function (opt) {\n          let createdMod = false;\n          const mod =\n            this instanceof capi.sqlite3_module\n              ? this\n              : opt.struct || (createdMod = new capi.sqlite3_module());\n          try {\n            const methods = opt.methods || toss(\"Missing 'methods' object.\");\n            for (const e of Object.entries({\n              xConnect: 'xCreate',\n              xDisconnect: 'xDestroy',\n            })) {\n              const k = e[0],\n                v = e[1];\n              if (true === methods[k]) methods[k] = methods[v];\n              else if (true === methods[v]) methods[v] = methods[k];\n            }\n            if (opt.catchExceptions) {\n              const fwrap = function (methodName, func) {\n                if (['xConnect', 'xCreate'].indexOf(methodName) >= 0) {\n                  return function (pDb, pAux, argc, argv, ppVtab, pzErr) {\n                    try {\n                      return func(...arguments) || 0;\n                    } catch (e) {\n                      if (!(e instanceof sqlite3.WasmAllocError)) {\n                        wasm.dealloc(wasm.peekPtr(pzErr));\n                        wasm.pokePtr(pzErr, wasm.allocCString(e.message));\n                      }\n                      return vtab.xError(methodName, e);\n                    }\n                  };\n                } else {\n                  return function (...args) {\n                    try {\n                      return func(...args) || 0;\n                    } catch (e) {\n                      return vtab.xError(methodName, e);\n                    }\n                  };\n                }\n              };\n              const mnames = [\n                'xCreate',\n                'xConnect',\n                'xBestIndex',\n                'xDisconnect',\n                'xDestroy',\n                'xOpen',\n                'xClose',\n                'xFilter',\n                'xNext',\n                'xEof',\n                'xColumn',\n                'xRowid',\n                'xUpdate',\n                'xBegin',\n                'xSync',\n                'xCommit',\n                'xRollback',\n                'xFindFunction',\n                'xRename',\n                'xSavepoint',\n                'xRelease',\n                'xRollbackTo',\n                'xShadowName',\n              ];\n              const remethods = Object.create(null);\n              for (const k of mnames) {\n                const m = methods[k];\n                if (!(m instanceof Function)) continue;\n                else if ('xConnect' === k && methods.xCreate === m) {\n                  remethods[k] = methods.xCreate;\n                } else if ('xCreate' === k && methods.xConnect === m) {\n                  remethods[k] = methods.xConnect;\n                } else {\n                  remethods[k] = fwrap(k, m);\n                }\n              }\n              installMethods(mod, remethods, false);\n            } else {\n              installMethods(mod, methods, !!opt.applyArgcCheck);\n            }\n            if (0 === mod.$iVersion) {\n              let v;\n              if ('number' === typeof opt.iVersion) v = opt.iVersion;\n              else if (mod.$xShadowName) v = 3;\n              else if (mod.$xSavePoint || mod.$xRelease || mod.$xRollbackTo)\n                v = 2;\n              else v = 1;\n              mod.$iVersion = v;\n            }\n          } catch (e) {\n            if (createdMod) createdMod.dispose();\n            throw e;\n          }\n          return mod;\n        };\n\n        capi.sqlite3_module.prototype.setupModule = function (opt) {\n          return vtab.setupModule.call(this, opt);\n        };\n      });\n\n      ('use strict');\n      self.sqlite3ApiBootstrap.initializers.push(function (sqlite3) {\n        const installOpfsVfs = function callee(options) {\n          if (!self.SharedArrayBuffer || !self.Atomics) {\n            return Promise.reject(\n              new Error(\n                'Cannot install OPFS: Missing SharedArrayBuffer and/or Atomics. ' +\n                  'The server must emit the COOP/COEP response headers to enable those. ' +\n                  'See https://sqlite.org/wasm/doc/trunk/persistence.md#coop-coep',\n              ),\n            );\n          } else if (self.window === self && self.document) {\n            return Promise.reject(\n              new Error(\n                'The OPFS sqlite3_vfs cannot run in the main thread ' +\n                  'because it requires Atomics.wait().',\n              ),\n            );\n          } else if (\n            !self.FileSystemHandle ||\n            !self.FileSystemDirectoryHandle ||\n            !self.FileSystemFileHandle ||\n            !self.FileSystemFileHandle.prototype.createSyncAccessHandle ||\n            !navigator.storage.getDirectory\n          ) {\n            return Promise.reject(new Error('Missing required OPFS APIs.'));\n          }\n          if (!options || 'object' !== typeof options) {\n            options = Object.create(null);\n          }\n          const urlParams = new URL(self.location.href).searchParams;\n          if (undefined === options.verbose) {\n            options.verbose = urlParams.has('opfs-verbose')\n              ? +urlParams.get('opfs-verbose') || 2\n              : 1;\n          }\n          if (undefined === options.sanityChecks) {\n            options.sanityChecks = urlParams.has('opfs-sanity-check');\n          }\n          if (undefined === options.proxyUri) {\n            options.proxyUri = callee.defaultProxyUri;\n          }\n\n          if ('function' === typeof options.proxyUri) {\n            options.proxyUri = options.proxyUri();\n          }\n          const thePromise = new Promise(function (\n            promiseResolve,\n            promiseReject_,\n          ) {\n            const loggers = {\n              0: sqlite3.config.error.bind(console),\n              1: sqlite3.config.warn.bind(console),\n              2: sqlite3.config.log.bind(console),\n            };\n            const logImpl = (level, ...args) => {\n              if (options.verbose > level)\n                loggers[level]('OPFS syncer:', ...args);\n            };\n            const log = (...args) => logImpl(2, ...args);\n            const warn = (...args) => logImpl(1, ...args);\n            const error = (...args) => logImpl(0, ...args);\n            const toss = sqlite3.util.toss;\n            const capi = sqlite3.capi;\n            const wasm = sqlite3.wasm;\n            const sqlite3_vfs = capi.sqlite3_vfs;\n            const sqlite3_file = capi.sqlite3_file;\n            const sqlite3_io_methods = capi.sqlite3_io_methods;\n\n            const opfsUtil = Object.create(null);\n\n            const thisThreadHasOPFS = () => {\n              return (\n                self.FileSystemHandle &&\n                self.FileSystemDirectoryHandle &&\n                self.FileSystemFileHandle &&\n                self.FileSystemFileHandle.prototype.createSyncAccessHandle &&\n                navigator.storage.getDirectory\n              );\n            };\n\n            opfsUtil.metrics = {\n              dump: function () {\n                let k,\n                  n = 0,\n                  t = 0,\n                  w = 0;\n                for (k in state.opIds) {\n                  const m = metrics[k];\n                  n += m.count;\n                  t += m.time;\n                  w += m.wait;\n                  m.avgTime = m.count && m.time ? m.time / m.count : 0;\n                  m.avgWait = m.count && m.wait ? m.wait / m.count : 0;\n                }\n                sqlite3.config.log(\n                  self.location.href,\n                  'metrics for',\n                  self.location.href,\n                  ':',\n                  metrics,\n                  '\\nTotal of',\n                  n,\n                  'op(s) for',\n                  t,\n                  'ms (incl. ' + w + ' ms of waiting on the async side)',\n                );\n                sqlite3.config.log('Serialization metrics:', metrics.s11n);\n                W.postMessage({ type: 'opfs-async-metrics' });\n              },\n              reset: function () {\n                let k;\n                const r = (m) => (m.count = m.time = m.wait = 0);\n                for (k in state.opIds) {\n                  r((metrics[k] = Object.create(null)));\n                }\n                let s = (metrics.s11n = Object.create(null));\n                s = s.serialize = Object.create(null);\n                s.count = s.time = 0;\n                s = metrics.s11n.deserialize = Object.create(null);\n                s.count = s.time = 0;\n              },\n            };\n            const opfsVfs = new sqlite3_vfs();\n            const opfsIoMethods = new sqlite3_io_methods();\n            const promiseReject = function (err) {\n              opfsVfs.dispose();\n              return promiseReject_(err);\n            };\n            const W = new Worker(\n              new URL('sqlite3-opfs-async-proxy.js', import.meta.url),\n            );\n            W._originalOnError = W.onerror;\n            W.onerror = function (err) {\n              error('Error initializing OPFS asyncer:', err);\n              promiseReject(\n                new Error(\n                  'Loading OPFS async Worker failed for unknown reasons.',\n                ),\n              );\n            };\n            const pDVfs = capi.sqlite3_vfs_find(null);\n            const dVfs = pDVfs ? new sqlite3_vfs(pDVfs) : null;\n            opfsVfs.$iVersion = 2;\n            opfsVfs.$szOsFile = capi.sqlite3_file.structInfo.sizeof;\n            opfsVfs.$mxPathname = 1024;\n            opfsVfs.$zName = wasm.allocCString('opfs');\n\n            opfsVfs.$xDlOpen =\n              opfsVfs.$xDlError =\n              opfsVfs.$xDlSym =\n              opfsVfs.$xDlClose =\n                null;\n            opfsVfs.ondispose = [\n              '$zName',\n              opfsVfs.$zName,\n              'cleanup default VFS wrapper',\n              () => (dVfs ? dVfs.dispose() : null),\n              'cleanup opfsIoMethods',\n              () => opfsIoMethods.dispose(),\n            ];\n\n            const state = Object.create(null);\n            state.verbose = options.verbose;\n            state.littleEndian = (() => {\n              const buffer = new ArrayBuffer(2);\n              new DataView(buffer).setInt16(0, 256, true);\n\n              return new Int16Array(buffer)[0] === 256;\n            })();\n\n            state.asyncIdleWaitTime = 150;\n\n            state.asyncS11nExceptions = 1;\n\n            state.fileBufferSize = 1024 * 64;\n            state.sabS11nOffset = state.fileBufferSize;\n\n            state.sabS11nSize = opfsVfs.$mxPathname * 2;\n\n            state.sabIO = new SharedArrayBuffer(\n              state.fileBufferSize + state.sabS11nSize,\n            );\n            state.opIds = Object.create(null);\n            const metrics = Object.create(null);\n            {\n              let i = 0;\n\n              state.opIds.whichOp = i++;\n\n              state.opIds.rc = i++;\n\n              state.opIds.xAccess = i++;\n              state.opIds.xClose = i++;\n              state.opIds.xDelete = i++;\n              state.opIds.xDeleteNoWait = i++;\n              state.opIds.xFileControl = i++;\n              state.opIds.xFileSize = i++;\n              state.opIds.xLock = i++;\n              state.opIds.xOpen = i++;\n              state.opIds.xRead = i++;\n              state.opIds.xSleep = i++;\n              state.opIds.xSync = i++;\n              state.opIds.xTruncate = i++;\n              state.opIds.xUnlock = i++;\n              state.opIds.xWrite = i++;\n              state.opIds.mkdir = i++;\n              state.opIds['opfs-async-metrics'] = i++;\n              state.opIds['opfs-async-shutdown'] = i++;\n\n              state.opIds.retry = i++;\n              state.sabOP = new SharedArrayBuffer(i * 4);\n              opfsUtil.metrics.reset();\n            }\n\n            state.sq3Codes = Object.create(null);\n            [\n              'SQLITE_ACCESS_EXISTS',\n              'SQLITE_ACCESS_READWRITE',\n              'SQLITE_BUSY',\n              'SQLITE_ERROR',\n              'SQLITE_IOERR',\n              'SQLITE_IOERR_ACCESS',\n              'SQLITE_IOERR_CLOSE',\n              'SQLITE_IOERR_DELETE',\n              'SQLITE_IOERR_FSYNC',\n              'SQLITE_IOERR_LOCK',\n              'SQLITE_IOERR_READ',\n              'SQLITE_IOERR_SHORT_READ',\n              'SQLITE_IOERR_TRUNCATE',\n              'SQLITE_IOERR_UNLOCK',\n              'SQLITE_IOERR_WRITE',\n              'SQLITE_LOCK_EXCLUSIVE',\n              'SQLITE_LOCK_NONE',\n              'SQLITE_LOCK_PENDING',\n              'SQLITE_LOCK_RESERVED',\n              'SQLITE_LOCK_SHARED',\n              'SQLITE_LOCKED',\n              'SQLITE_MISUSE',\n              'SQLITE_NOTFOUND',\n              'SQLITE_OPEN_CREATE',\n              'SQLITE_OPEN_DELETEONCLOSE',\n              'SQLITE_OPEN_MAIN_DB',\n              'SQLITE_OPEN_READONLY',\n            ].forEach((k) => {\n              if (undefined === (state.sq3Codes[k] = capi[k])) {\n                toss('Maintenance required: not found:', k);\n              }\n            });\n            state.opfsFlags = Object.assign(Object.create(null), {\n              OPFS_UNLOCK_ASAP: 0x01,\n\n              defaultUnlockAsap: false,\n            });\n\n            const opRun = (op, ...args) => {\n              const opNdx = state.opIds[op] || toss('Invalid op ID:', op);\n              state.s11n.serialize(...args);\n              Atomics.store(state.sabOPView, state.opIds.rc, -1);\n              Atomics.store(state.sabOPView, state.opIds.whichOp, opNdx);\n              Atomics.notify(state.sabOPView, state.opIds.whichOp);\n              const t = performance.now();\n              Atomics.wait(state.sabOPView, state.opIds.rc, -1);\n              const rc = Atomics.load(state.sabOPView, state.opIds.rc);\n              metrics[op].wait += performance.now() - t;\n              if (rc && state.asyncS11nExceptions) {\n                const err = state.s11n.deserialize();\n                if (err) error(op + '() async error:', ...err);\n              }\n              return rc;\n            };\n\n            opfsUtil.debug = {\n              asyncShutdown: () => {\n                warn(\n                  'Shutting down OPFS async listener. The OPFS VFS will no longer work.',\n                );\n                opRun('opfs-async-shutdown');\n              },\n              asyncRestart: () => {\n                warn(\n                  'Attempting to restart OPFS VFS async listener. Might work, might not.',\n                );\n                W.postMessage({ type: 'opfs-async-restart' });\n              },\n            };\n\n            const initS11n = () => {\n              if (state.s11n) return state.s11n;\n              const textDecoder = new TextDecoder(),\n                textEncoder = new TextEncoder('utf-8'),\n                viewU8 = new Uint8Array(\n                  state.sabIO,\n                  state.sabS11nOffset,\n                  state.sabS11nSize,\n                ),\n                viewDV = new DataView(\n                  state.sabIO,\n                  state.sabS11nOffset,\n                  state.sabS11nSize,\n                );\n              state.s11n = Object.create(null);\n\n              const TypeIds = Object.create(null);\n              TypeIds.number = {\n                id: 1,\n                size: 8,\n                getter: 'getFloat64',\n                setter: 'setFloat64',\n              };\n              TypeIds.bigint = {\n                id: 2,\n                size: 8,\n                getter: 'getBigInt64',\n                setter: 'setBigInt64',\n              };\n              TypeIds.boolean = {\n                id: 3,\n                size: 4,\n                getter: 'getInt32',\n                setter: 'setInt32',\n              };\n              TypeIds.string = { id: 4 };\n\n              const getTypeId = (v) =>\n                TypeIds[typeof v] ||\n                toss(\n                  'Maintenance required: this value type cannot be serialized.',\n                  v,\n                );\n              const getTypeIdById = (tid) => {\n                switch (tid) {\n                  case TypeIds.number.id:\n                    return TypeIds.number;\n                  case TypeIds.bigint.id:\n                    return TypeIds.bigint;\n                  case TypeIds.boolean.id:\n                    return TypeIds.boolean;\n                  case TypeIds.string.id:\n                    return TypeIds.string;\n                  default:\n                    toss('Invalid type ID:', tid);\n                }\n              };\n\n              state.s11n.deserialize = function (clear = false) {\n                ++metrics.s11n.deserialize.count;\n                const t = performance.now();\n                const argc = viewU8[0];\n                const rc = argc ? [] : null;\n                if (argc) {\n                  const typeIds = [];\n                  let offset = 1,\n                    i,\n                    n,\n                    v;\n                  for (i = 0; i < argc; ++i, ++offset) {\n                    typeIds.push(getTypeIdById(viewU8[offset]));\n                  }\n                  for (i = 0; i < argc; ++i) {\n                    const t = typeIds[i];\n                    if (t.getter) {\n                      v = viewDV[t.getter](offset, state.littleEndian);\n                      offset += t.size;\n                    } else {\n                      n = viewDV.getInt32(offset, state.littleEndian);\n                      offset += 4;\n                      v = textDecoder.decode(viewU8.slice(offset, offset + n));\n                      offset += n;\n                    }\n                    rc.push(v);\n                  }\n                }\n                if (clear) viewU8[0] = 0;\n\n                metrics.s11n.deserialize.time += performance.now() - t;\n                return rc;\n              };\n\n              state.s11n.serialize = function (...args) {\n                const t = performance.now();\n                ++metrics.s11n.serialize.count;\n                if (args.length) {\n                  const typeIds = [];\n                  let i = 0,\n                    offset = 1;\n                  viewU8[0] = args.length & 0xff;\n                  for (; i < args.length; ++i, ++offset) {\n                    typeIds.push(getTypeId(args[i]));\n                    viewU8[offset] = typeIds[i].id;\n                  }\n                  for (i = 0; i < args.length; ++i) {\n                    const t = typeIds[i];\n                    if (t.setter) {\n                      viewDV[t.setter](offset, args[i], state.littleEndian);\n                      offset += t.size;\n                    } else {\n                      const s = textEncoder.encode(args[i]);\n                      viewDV.setInt32(offset, s.byteLength, state.littleEndian);\n                      offset += 4;\n                      viewU8.set(s, offset);\n                      offset += s.byteLength;\n                    }\n                  }\n                } else {\n                  viewU8[0] = 0;\n                }\n                metrics.s11n.serialize.time += performance.now() - t;\n              };\n              return state.s11n;\n            };\n\n            const randomFilename = function f(len = 16) {\n              if (!f._chars) {\n                f._chars =\n                  'abcdefghijklmnopqrstuvwxyz' +\n                  'ABCDEFGHIJKLMNOPQRSTUVWXYZ' +\n                  '012346789';\n                f._n = f._chars.length;\n              }\n              const a = [];\n              let i = 0;\n              for (; i < len; ++i) {\n                const ndx = (Math.random() * (f._n * 64)) % f._n | 0;\n                a[i] = f._chars[ndx];\n              }\n              return a.join('');\n            };\n\n            const __openFiles = Object.create(null);\n\n            const opTimer = Object.create(null);\n            opTimer.op = undefined;\n            opTimer.start = undefined;\n            const mTimeStart = (op) => {\n              opTimer.start = performance.now();\n              opTimer.op = op;\n              ++metrics[op].count;\n            };\n            const mTimeEnd = () =>\n              (metrics[opTimer.op].time += performance.now() - opTimer.start);\n\n            const ioSyncWrappers = {\n              xCheckReservedLock: function (pFile, pOut) {\n                const f = __openFiles[pFile];\n                wasm.poke(pOut, f.lockType ? 1 : 0, 'i32');\n                return 0;\n              },\n              xClose: function (pFile) {\n                mTimeStart('xClose');\n                let rc = 0;\n                const f = __openFiles[pFile];\n                if (f) {\n                  delete __openFiles[pFile];\n                  rc = opRun('xClose', pFile);\n                  if (f.sq3File) f.sq3File.dispose();\n                }\n                mTimeEnd();\n                return rc;\n              },\n              xDeviceCharacteristics: function (pFile) {\n                return capi.SQLITE_IOCAP_UNDELETABLE_WHEN_OPEN;\n              },\n              xFileControl: function (pFile, opId, pArg) {\n                mTimeStart('xFileControl');\n                const rc =\n                  capi.SQLITE_FCNTL_SYNC === opId\n                    ? opRun('xSync', pFile, 0)\n                    : capi.SQLITE_NOTFOUND;\n                mTimeEnd();\n                return rc;\n              },\n              xFileSize: function (pFile, pSz64) {\n                mTimeStart('xFileSize');\n                let rc = opRun('xFileSize', pFile);\n                if (0 == rc) {\n                  try {\n                    const sz = state.s11n.deserialize()[0];\n                    wasm.poke(pSz64, sz, 'i64');\n                  } catch (e) {\n                    error('Unexpected error reading xFileSize() result:', e);\n                    rc = state.sq3Codes.SQLITE_IOERR;\n                  }\n                }\n                mTimeEnd();\n                return rc;\n              },\n              xLock: function (pFile, lockType) {\n                mTimeStart('xLock');\n                const f = __openFiles[pFile];\n                let rc = 0;\n\n                if (!f.lockType) {\n                  rc = opRun('xLock', pFile, lockType);\n                  if (0 === rc) f.lockType = lockType;\n                } else {\n                  f.lockType = lockType;\n                }\n                mTimeEnd();\n                return rc;\n              },\n              xRead: function (pFile, pDest, n, offset64) {\n                mTimeStart('xRead');\n                const f = __openFiles[pFile];\n                let rc;\n                try {\n                  rc = opRun('xRead', pFile, n, Number(offset64));\n                  if (0 === rc || capi.SQLITE_IOERR_SHORT_READ === rc) {\n                    wasm.heap8u().set(f.sabView.subarray(0, n), pDest);\n                  }\n                } catch (e) {\n                  error('xRead(', arguments, ') failed:', e, f);\n                  rc = capi.SQLITE_IOERR_READ;\n                }\n                mTimeEnd();\n                return rc;\n              },\n              xSync: function (pFile, flags) {\n                ++metrics.xSync.count;\n                return 0;\n              },\n              xTruncate: function (pFile, sz64) {\n                mTimeStart('xTruncate');\n                const rc = opRun('xTruncate', pFile, Number(sz64));\n                mTimeEnd();\n                return rc;\n              },\n              xUnlock: function (pFile, lockType) {\n                mTimeStart('xUnlock');\n                const f = __openFiles[pFile];\n                let rc = 0;\n                if (capi.SQLITE_LOCK_NONE === lockType && f.lockType) {\n                  rc = opRun('xUnlock', pFile, lockType);\n                }\n                if (0 === rc) f.lockType = lockType;\n                mTimeEnd();\n                return rc;\n              },\n              xWrite: function (pFile, pSrc, n, offset64) {\n                mTimeStart('xWrite');\n                const f = __openFiles[pFile];\n                let rc;\n                try {\n                  f.sabView.set(wasm.heap8u().subarray(pSrc, pSrc + n));\n                  rc = opRun('xWrite', pFile, n, Number(offset64));\n                } catch (e) {\n                  error('xWrite(', arguments, ') failed:', e, f);\n                  rc = capi.SQLITE_IOERR_WRITE;\n                }\n                mTimeEnd();\n                return rc;\n              },\n            };\n\n            const vfsSyncWrappers = {\n              xAccess: function (pVfs, zName, flags, pOut) {\n                mTimeStart('xAccess');\n                const rc = opRun('xAccess', wasm.cstrToJs(zName));\n                wasm.poke(pOut, rc ? 0 : 1, 'i32');\n                mTimeEnd();\n                return 0;\n              },\n              xCurrentTime: function (pVfs, pOut) {\n                wasm.poke(\n                  pOut,\n                  2440587.5 + new Date().getTime() / 86400000,\n                  'double',\n                );\n                return 0;\n              },\n              xCurrentTimeInt64: function (pVfs, pOut) {\n                wasm.poke(\n                  pOut,\n                  2440587.5 * 86400000 + new Date().getTime(),\n                  'i64',\n                );\n                return 0;\n              },\n              xDelete: function (pVfs, zName, doSyncDir) {\n                mTimeStart('xDelete');\n                opRun('xDelete', wasm.cstrToJs(zName), doSyncDir, false);\n\n                mTimeEnd();\n                return 0;\n              },\n              xFullPathname: function (pVfs, zName, nOut, pOut) {\n                const i = wasm.cstrncpy(pOut, zName, nOut);\n                return i < nOut ? 0 : capi.SQLITE_CANTOPEN;\n              },\n              xGetLastError: function (pVfs, nOut, pOut) {\n                warn('OPFS xGetLastError() has nothing sensible to return.');\n                return 0;\n              },\n\n              xOpen: function f(pVfs, zName, pFile, flags, pOutFlags) {\n                mTimeStart('xOpen');\n                let opfsFlags = 0;\n                if (0 === zName) {\n                  zName = randomFilename();\n                } else if ('number' === typeof zName) {\n                  if (capi.sqlite3_uri_boolean(zName, 'opfs-unlock-asap', 0)) {\n                    opfsFlags |= state.opfsFlags.OPFS_UNLOCK_ASAP;\n                  }\n                  zName = wasm.cstrToJs(zName);\n                }\n                const fh = Object.create(null);\n                fh.fid = pFile;\n                fh.filename = zName;\n                fh.sab = new SharedArrayBuffer(state.fileBufferSize);\n                fh.flags = flags;\n                const rc = opRun('xOpen', pFile, zName, flags, opfsFlags);\n                if (!rc) {\n                  if (fh.readOnly) {\n                    wasm.poke(pOutFlags, capi.SQLITE_OPEN_READONLY, 'i32');\n                  }\n                  __openFiles[pFile] = fh;\n                  fh.sabView = state.sabFileBufView;\n                  fh.sq3File = new sqlite3_file(pFile);\n                  fh.sq3File.$pMethods = opfsIoMethods.pointer;\n                  fh.lockType = capi.SQLITE_LOCK_NONE;\n                }\n                mTimeEnd();\n                return rc;\n              },\n            };\n\n            if (dVfs) {\n              opfsVfs.$xRandomness = dVfs.$xRandomness;\n              opfsVfs.$xSleep = dVfs.$xSleep;\n            }\n            if (!opfsVfs.$xRandomness) {\n              vfsSyncWrappers.xRandomness = function (pVfs, nOut, pOut) {\n                const heap = wasm.heap8u();\n                let i = 0;\n                for (; i < nOut; ++i)\n                  heap[pOut + i] = (Math.random() * 255000) & 0xff;\n                return i;\n              };\n            }\n            if (!opfsVfs.$xSleep) {\n              vfsSyncWrappers.xSleep = function (pVfs, ms) {\n                Atomics.wait(state.sabOPView, state.opIds.xSleep, 0, ms);\n                return 0;\n              };\n            }\n\n            opfsUtil.getResolvedPath = function (filename, splitIt) {\n              const p = new URL(filename, 'file://irrelevant').pathname;\n              return splitIt ? p.split('/').filter((v) => !!v) : p;\n            };\n\n            opfsUtil.getDirForFilename = async function f(\n              absFilename,\n              createDirs = false,\n            ) {\n              const path = opfsUtil.getResolvedPath(absFilename, true);\n              const filename = path.pop();\n              let dh = opfsUtil.rootDirectory;\n              for (const dirName of path) {\n                if (dirName) {\n                  dh = await dh.getDirectoryHandle(dirName, {\n                    create: !!createDirs,\n                  });\n                }\n              }\n              return [dh, filename];\n            };\n\n            opfsUtil.mkdir = async function (absDirName) {\n              try {\n                await opfsUtil.getDirForFilename(\n                  absDirName + '/filepart',\n                  true,\n                );\n                return true;\n              } catch (e) {\n                return false;\n              }\n            };\n\n            opfsUtil.entryExists = async function (fsEntryName) {\n              try {\n                const [dh, fn] = await opfsUtil.getDirForFilename(fsEntryName);\n                await dh.getFileHandle(fn);\n                return true;\n              } catch (e) {\n                return false;\n              }\n            };\n\n            opfsUtil.randomFilename = randomFilename;\n\n            opfsUtil.registerVfs = (asDefault = false) => {\n              return wasm.exports.sqlite3_vfs_register(\n                opfsVfs.pointer,\n                asDefault ? 1 : 0,\n              );\n            };\n\n            opfsUtil.treeList = async function () {\n              const doDir = async function callee(dirHandle, tgt) {\n                tgt.name = dirHandle.name;\n                tgt.dirs = [];\n                tgt.files = [];\n                for await (const handle of dirHandle.values()) {\n                  if ('directory' === handle.kind) {\n                    const subDir = Object.create(null);\n                    tgt.dirs.push(subDir);\n                    await callee(handle, subDir);\n                  } else {\n                    tgt.files.push(handle.name);\n                  }\n                }\n              };\n              const root = Object.create(null);\n              await doDir(opfsUtil.rootDirectory, root);\n              return root;\n            };\n\n            opfsUtil.rmfr = async function () {\n              const dir = opfsUtil.rootDirectory,\n                opt = { recurse: true };\n              for await (const handle of dir.values()) {\n                dir.removeEntry(handle.name, opt);\n              }\n            };\n\n            opfsUtil.unlink = async function (\n              fsEntryName,\n              recursive = false,\n              throwOnError = false,\n            ) {\n              try {\n                const [hDir, filenamePart] = await opfsUtil.getDirForFilename(\n                  fsEntryName,\n                  false,\n                );\n                await hDir.removeEntry(filenamePart, { recursive });\n                return true;\n              } catch (e) {\n                if (throwOnError) {\n                  throw new Error(\n                    'unlink(',\n                    arguments[0],\n                    ') failed: ' + e.message,\n                    {\n                      cause: e,\n                    },\n                  );\n                }\n                return false;\n              }\n            };\n\n            opfsUtil.traverse = async function (opt) {\n              const defaultOpt = {\n                recursive: true,\n                directory: opfsUtil.rootDirectory,\n              };\n              if ('function' === typeof opt) {\n                opt = { callback: opt };\n              }\n              opt = Object.assign(defaultOpt, opt || {});\n              const doDir = async function callee(dirHandle, depth) {\n                for await (const handle of dirHandle.values()) {\n                  if (false === opt.callback(handle, dirHandle, depth))\n                    return false;\n                  else if (opt.recursive && 'directory' === handle.kind) {\n                    if (false === (await callee(handle, depth + 1))) break;\n                  }\n                }\n              };\n              doDir(opt.directory, 0);\n            };\n\n            if (sqlite3.oo1) {\n              const OpfsDb = function (...args) {\n                const opt = sqlite3.oo1.DB.dbCtorHelper.normalizeArgs(...args);\n                opt.vfs = opfsVfs.$zName;\n                sqlite3.oo1.DB.dbCtorHelper.call(this, opt);\n              };\n              OpfsDb.prototype = Object.create(sqlite3.oo1.DB.prototype);\n              sqlite3.oo1.OpfsDb = OpfsDb;\n              sqlite3.oo1.DB.dbCtorHelper.setVfsPostOpenSql(\n                opfsVfs.pointer,\n                function (oo1Db, sqlite3) {\n                  sqlite3.capi.sqlite3_busy_timeout(oo1Db, 10000);\n                  sqlite3.capi.sqlite3_exec(\n                    oo1Db,\n                    [\n                      'pragma journal_mode=persist;',\n\n                      'pragma cache_size=-16384;',\n                    ],\n                    0,\n                    0,\n                    0,\n                  );\n                },\n              );\n            }\n\n            const sanityCheck = function () {\n              const scope = wasm.scopedAllocPush();\n              const sq3File = new sqlite3_file();\n              try {\n                const fid = sq3File.pointer;\n                const openFlags =\n                  capi.SQLITE_OPEN_CREATE |\n                  capi.SQLITE_OPEN_READWRITE |\n                  capi.SQLITE_OPEN_MAIN_DB;\n                const pOut = wasm.scopedAlloc(8);\n                const dbFile = '/sanity/check/file' + randomFilename(8);\n                const zDbFile = wasm.scopedAllocCString(dbFile);\n                let rc;\n                state.s11n.serialize('This is ä string.');\n                rc = state.s11n.deserialize();\n                log('deserialize() says:', rc);\n                if ('This is ä string.' !== rc[0]) toss('String d13n error.');\n                vfsSyncWrappers.xAccess(opfsVfs.pointer, zDbFile, 0, pOut);\n                rc = wasm.peek(pOut, 'i32');\n                log('xAccess(', dbFile, ') exists ?=', rc);\n                rc = vfsSyncWrappers.xOpen(\n                  opfsVfs.pointer,\n                  zDbFile,\n                  fid,\n                  openFlags,\n                  pOut,\n                );\n                log(\n                  'open rc =',\n                  rc,\n                  'state.sabOPView[xOpen] =',\n                  state.sabOPView[state.opIds.xOpen],\n                );\n                if (0 !== rc) {\n                  error('open failed with code', rc);\n                  return;\n                }\n                vfsSyncWrappers.xAccess(opfsVfs.pointer, zDbFile, 0, pOut);\n                rc = wasm.peek(pOut, 'i32');\n                if (!rc) toss('xAccess() failed to detect file.');\n                rc = ioSyncWrappers.xSync(sq3File.pointer, 0);\n                if (rc) toss('sync failed w/ rc', rc);\n                rc = ioSyncWrappers.xTruncate(sq3File.pointer, 1024);\n                if (rc) toss('truncate failed w/ rc', rc);\n                wasm.poke(pOut, 0, 'i64');\n                rc = ioSyncWrappers.xFileSize(sq3File.pointer, pOut);\n                if (rc) toss('xFileSize failed w/ rc', rc);\n                log('xFileSize says:', wasm.peek(pOut, 'i64'));\n                rc = ioSyncWrappers.xWrite(sq3File.pointer, zDbFile, 10, 1);\n                if (rc) toss('xWrite() failed!');\n                const readBuf = wasm.scopedAlloc(16);\n                rc = ioSyncWrappers.xRead(sq3File.pointer, readBuf, 6, 2);\n                wasm.poke(readBuf + 6, 0);\n                let jRead = wasm.cstrToJs(readBuf);\n                log('xRead() got:', jRead);\n                if ('sanity' !== jRead) toss('Unexpected xRead() value.');\n                if (vfsSyncWrappers.xSleep) {\n                  log('xSleep()ing before close()ing...');\n                  vfsSyncWrappers.xSleep(opfsVfs.pointer, 2000);\n                  log('waking up from xSleep()');\n                }\n                rc = ioSyncWrappers.xClose(fid);\n                log('xClose rc =', rc, 'sabOPView =', state.sabOPView);\n                log('Deleting file:', dbFile);\n                vfsSyncWrappers.xDelete(opfsVfs.pointer, zDbFile, 0x1234);\n                vfsSyncWrappers.xAccess(opfsVfs.pointer, zDbFile, 0, pOut);\n                rc = wasm.peek(pOut, 'i32');\n                if (rc)\n                  toss(\n                    'Expecting 0 from xAccess(',\n                    dbFile,\n                    ') after xDelete().',\n                  );\n                warn('End of OPFS sanity checks.');\n              } finally {\n                sq3File.dispose();\n                wasm.scopedAllocPop(scope);\n              }\n            };\n\n            W.onmessage = function ({ data }) {\n              switch (data.type) {\n                case 'opfs-unavailable':\n                  promiseReject(new Error(data.payload.join(' ')));\n                  break;\n                case 'opfs-async-loaded':\n                  W.postMessage({ type: 'opfs-async-init', args: state });\n                  break;\n                case 'opfs-async-inited': {\n                  try {\n                    sqlite3.vfs.installVfs({\n                      io: { struct: opfsIoMethods, methods: ioSyncWrappers },\n                      vfs: { struct: opfsVfs, methods: vfsSyncWrappers },\n                    });\n                    state.sabOPView = new Int32Array(state.sabOP);\n                    state.sabFileBufView = new Uint8Array(\n                      state.sabIO,\n                      0,\n                      state.fileBufferSize,\n                    );\n                    state.sabS11nView = new Uint8Array(\n                      state.sabIO,\n                      state.sabS11nOffset,\n                      state.sabS11nSize,\n                    );\n                    initS11n();\n                    if (options.sanityChecks) {\n                      warn(\n                        'Running sanity checks because of opfs-sanity-check URL arg...',\n                      );\n                      sanityCheck();\n                    }\n                    if (thisThreadHasOPFS()) {\n                      navigator.storage\n                        .getDirectory()\n                        .then((d) => {\n                          W.onerror = W._originalOnError;\n                          delete W._originalOnError;\n                          sqlite3.opfs = opfsUtil;\n                          opfsUtil.rootDirectory = d;\n                          log('End of OPFS sqlite3_vfs setup.', opfsVfs);\n                          promiseResolve(sqlite3);\n                        })\n                        .catch(promiseReject);\n                    } else {\n                      promiseResolve(sqlite3);\n                    }\n                  } catch (e) {\n                    error(e);\n                    promiseReject(e);\n                  }\n                  break;\n                }\n                default:\n                  promiseReject(e);\n                  error('Unexpected message from the async worker:', data);\n                  break;\n              }\n            };\n          });\n          return thePromise;\n        };\n        installOpfsVfs.defaultProxyUri = 'sqlite3-opfs-async-proxy.js';\n        self.sqlite3ApiBootstrap.initializersAsync.push(async (sqlite3) => {\n          try {\n            let proxyJs = installOpfsVfs.defaultProxyUri;\n            if (sqlite3.scriptInfo.sqlite3Dir) {\n              installOpfsVfs.defaultProxyUri =\n                sqlite3.scriptInfo.sqlite3Dir + proxyJs;\n            }\n            return installOpfsVfs().catch((e) => {\n              sqlite3.config.warn(\n                'Ignoring inability to install OPFS sqlite3_vfs:',\n                e.message,\n              );\n            });\n          } catch (e) {\n            sqlite3.config.error('installOpfsVfs() exception:', e);\n            throw e;\n          }\n        });\n      });\n\n      ('use strict');\n      if ('undefined' !== typeof Module) {\n        const SABC = Object.assign(\n          Object.create(null),\n          {\n            exports: Module['asm'],\n            memory: Module.wasmMemory,\n          },\n          self.sqlite3ApiConfig || {},\n        );\n\n        self.sqlite3ApiConfig = SABC;\n        let sqlite3;\n        try {\n          sqlite3 = self.sqlite3ApiBootstrap();\n        } catch (e) {\n          console.error('sqlite3ApiBootstrap() error:', e);\n          throw e;\n        } finally {\n          delete self.sqlite3ApiBootstrap;\n          delete self.sqlite3ApiConfig;\n        }\n\n        Module.sqlite3 = sqlite3;\n      } else {\n        console.warn(\n          'This is not running in an Emscripten module context, so',\n          'self.sqlite3ApiBootstrap() is _not_ being called due to lack',\n          'of config info for the WASM environment.',\n          'It must be called manually.',\n        );\n      }\n    });\n\n    return sqlite3InitModule.ready;\n  };\n})();\n\nconst toExportForESM = (function () {\n  const originalInit = sqlite3InitModule;\n  if (!originalInit) {\n    throw new Error(\n      'Expecting self.sqlite3InitModule to be defined by the Emscripten build.',\n    );\n  }\n\n  const initModuleState = (self.sqlite3InitModuleState = Object.assign(\n    Object.create(null),\n    {\n      moduleScript: self?.document?.currentScript,\n      isWorker: 'undefined' !== typeof WorkerGlobalScope,\n      location: self.location,\n      urlParams: new URL(self.location.href).searchParams,\n    },\n  ));\n  initModuleState.debugModule = initModuleState.urlParams.has(\n    'sqlite3.debugModule',\n  )\n    ? (...args) => console.warn('sqlite3.debugModule:', ...args)\n    : () => {};\n\n  if (initModuleState.urlParams.has('sqlite3.dir')) {\n    initModuleState.sqlite3Dir =\n      initModuleState.urlParams.get('sqlite3.dir') + '/';\n  } else if (initModuleState.moduleScript) {\n    const li = initModuleState.moduleScript.src.split('/');\n    li.pop();\n    initModuleState.sqlite3Dir = li.join('/') + '/';\n  }\n\n  self.sqlite3InitModule = function ff(...args) {\n    return originalInit(...args)\n      .then((EmscriptenModule) => {\n        if (\n          self.window !== self &&\n          (EmscriptenModule['ENVIRONMENT_IS_PTHREAD'] ||\n            EmscriptenModule['_pthread_self'] ||\n            'function' === typeof threadAlert ||\n            self.location.pathname.endsWith('.worker.js'))\n        ) {\n          return EmscriptenModule;\n        }\n        const s = EmscriptenModule.sqlite3;\n        s.scriptInfo = initModuleState;\n\n        if (ff.__isUnderTest) s.__isUnderTest = true;\n        const f = s.asyncPostInit;\n        delete s.asyncPostInit;\n        return f();\n      })\n      .catch((e) => {\n        console.error('Exception loading sqlite3 module:', e);\n        throw e;\n      });\n  };\n  self.sqlite3InitModule.ready = originalInit.ready;\n\n  if (self.sqlite3InitModuleState.moduleScript) {\n    const sim = self.sqlite3InitModuleState;\n    let src = sim.moduleScript.src.split('/');\n    src.pop();\n    sim.scriptDir = src.join('/') + '/';\n  }\n  initModuleState.debugModule('sqlite3InitModuleState =', initModuleState);\n  if (0) {\n    console.warn('Replaced sqlite3InitModule()');\n    console.warn('self.location.href =', self.location.href);\n    if ('undefined' !== typeof document) {\n      console.warn(\n        'document.currentScript.src =',\n        document?.currentScript?.src,\n      );\n    }\n  }\n  return self.sqlite3InitModule;\n})();\nexport default toExportForESM;\n","import { default as sqlite3InitModule } from './sqlite-wasm/jswasm/sqlite3-bundler-friendly.mjs';\n\nexport default sqlite3InitModule;\n"],"names":["asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined","_regeneratorRuntime","exports","Op","Object","prototype","hasOwn","hasOwnProperty","defineProperty","obj","desc","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","wrap","innerFn","outerFn","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","type","call","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","_invoke","AsyncIterator","PromiseImpl","invoke","record","result","__await","unwrapped","previousPromise","callInvokeWithMethodAndArg","state","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","methodName","TypeError","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","displayName","isGeneratorFunction","genFun","ctor","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","iter","keys","val","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","thrown","delegateYield","_typeof","_arrayLikeToArray","arr","len","arr2","Array","_unsupportedIterableToArray","o","minLen","n","toString","from","test","_toConsumableArray","isArray","_toPropertyKey","input","hint","prim","toPrimitive","res","String","Number","_defineProperty","ownKeys","enumerableOnly","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","_objectSpread2","target","source","getOwnPropertyDescriptors","defineProperties","_createForOfIteratorHelper","allowArrayLike","it","F","s","e","_e","f","normalCompletion","didErr","step","_e2","_slicedToArray","_i","_s","_x","_r","_arr","_n","_d","_setPrototypeOf","p","bind","_isNativeReflectConstruct","Reflect","construct","sham","Proxy","Boolean","valueOf","_construct","Parent","Class","a","instance","Function","_defineProperties","props","descriptor","_createClass","Constructor","protoProps","staticProps","_classCallCheck","_possibleConstructorReturn","ReferenceError","_inherits","subClass","superClass","_getPrototypeOf","_createSuper","Derived","hasNativeReflectConstruct","Super","NewTarget","_wrapNativeSuper","_cache","Map","indexOf","has","get","set","Wrapper","_asyncIterator","sync","retry","AsyncFromSyncIterator","AsyncFromSyncIteratorContinuation","r","ret","thr","sqlite3InitModule","_scriptDir","import","config","readyPromiseResolve","readyPromiseReject","Module","sqlite3InitModuleState","assign","debugModule","location","xNameOfInstantiateWasm","callee","imports","onSuccess","env","foo","uri","locateFile","scriptDirectory","wfetch","fetch","credentials","WebAssembly","instantiateStreaming","_callee","_context","module","_callee2","_context2","response","arrayBuffer","bytes","instantiate","read_","readAsync","readBinary","moduleOverrides","arguments_","thisProgram","ENVIRONMENT_IS_WEB","window","ENVIRONMENT_IS_WORKER","importScripts","process","versions","node","href","document","currentScript","src","substr","replace","lastIndexOf","url","xhr","XMLHttpRequest","open","send","responseText","responseType","Uint8Array","onload","onerror","status","out","console","log","warn","wasmBinary","wasmMemory","abort","ABORT","assert","condition","text","HEAP8","HEAPU8","HEAP16","HEAP32","HEAPU32","UTF8Decoder","TextDecoder","UTF8ArrayToString","heapOrArray","idx","maxBytesToRead","endIdx","endPtr","buffer","decode","subarray","str","u0","u1","u2","fromCharCode","ch","stringToUTF8Array","heap","outIdx","maxBytesToWrite","startIdx","u","charCodeAt","stringToUTF8","outPtr","lengthBytesUTF8","c","updateMemoryViews","b","Int8Array","Int16Array","Int32Array","Uint16Array","Uint32Array","Float32Array","Float64Array","BigInt64Array","BigUint64Array","INITIAL_MEMORY","Memory","initial","maximum","byteLength","__ATPRERUN__","__ATINIT__","__ATPOSTRUN__","runDependencies","runDependencyWatcher","dependenciesFulfilled","addRunDependency","id","removeRunDependency","clearInterval","callback","what","RuntimeError","wasmBinaryFile","path","tempDouble","tempI64","dataURIPrefix","isDataURI","filename","startsWith","getBinary","file","callRuntimeCallbacks","callbacks","shift","URL","PATH","isAbs","splitPath","exec","normalizeArray","parts","allowAboveRoot","up","last","splice","unshift","normalize","isAbsolute","trailingSlash","split","join","dirname","root","dir","basename","lastSlash","paths","join2","l","PATH_FS","resolvedPath","resolvedAbsolute","FS","cwd","relative","to","trim","start","end","fromParts","toParts","Math","min","samePartsLength","outputParts","concat","intArrayFromString","stringy","dontAddNull","u8array","numBytesWritten","TTY","ttys","init","shutdown","register","dev","ops","output","registerDevice","stream_ops","stream","tty","rdev","ErrnoError","seekable","close","fsync","read","offset","pos","get_char","bytesRead","timestamp","Date","now","write","put_char","default_tty_ops","prompt","readline","default_tty1_ops","mmapAlloc","size","MEMFS","ops_table","mount","createNode","parent","mode","isBlkdev","isFIFO","getattr","node_ops","setattr","lookup","mknod","rename","unlink","rmdir","readdir","symlink","llseek","allocate","mmap","msync","link","readlink","chrdev","chrdev_stream_ops","isDir","contents","isFile","usedBytes","isLink","isChrdev","getFileDataAsTypedArray","expandFileStorage","newCapacity","prevCapacity","max","oldContents","resizeFileStorage","newSize","attr","ino","nlink","uid","gid","atime","mtime","ctime","blksize","blocks","ceil","genericErrors","old_node","new_dir","new_name","new_node","lookupNode","entries","newname","oldpath","position","canOwn","whence","prot","flags","ptr","allocated","byteOffset","mmapFlags","mounts","devices","streams","nextInode","nameTable","currentPath","initialized","ignorePermissions","filesystems","syncFSRequests","lookupPath","opts","follow_mount","recurse_count","current","current_path","islast","isMountpoint","mounted","follow","count","getPath","isRoot","mountpoint","hashName","parentid","hash","hashAddNode","name_next","hashRemoveNode","errCode","mayLookup","nodeName","FSNode","destroyNode","isSocket","flagModes","w","modeStringToFlags","flagsToPermissionString","flag","perms","nodePermissions","includes","mayCreate","mayDelete","isdir","errno","mayOpen","MAX_OPEN_FDS","nextfd","fd_start","fd_end","fd","getStream","createStream","FSStream","shared","isRead","isWrite","isAppend","closeStream","device","getDevice","major","minor","makedev","ma","mi","getMounts","check","m","syncfs","populate","completed","doCallback","errored","pseudo","mountRoot","unmount","mkdir","mkdirTree","dirs","d","mkdev","newpath","old_path","new_path","old_dir","old_dirname","new_dirname","old_name","stat","dontFollow","lstat","chmod","lchmod","fchmod","chown","lchown","fchown","truncate","ftruncate","utime","created","ungotten","readFiles","isClosed","getdents","seeking","bytesWritten","munmap","ioctl","cmd","readFile","encoding","buf","writeFile","data","actualNumBytes","ArrayBuffer","isView","chdir","createDefaultDirectories","createDefaultDevices","random_device","crypto","randomBuffer","getRandomValues","getRandomDevice","createDevice","createSpecialDirectories","proc_self","createStandardStreams","ensureErrnoError","setErrno","message","code","stack","staticInit","quit","getMode","canRead","canWrite","findObject","dontResolveLastLink","analyzePath","exists","parentExists","parentPath","parentObject","createPath","part","createFile","properties","createDataFile","forceLoadFile","isDevice","isFolder","createLazyFile","LazyUint8Array","lengthKnown","chunks","chunkOffset","chunkSize","chunkNum","getter","setDataGetter","cacheLength","header","datalength","getResponseHeader","hasByteServing","usesGzip","lazyArray","setRequestHeader","overrideMimeType","doXHR","_length","_chunkSize","writeChunks","createPreloadedFile","dontCreateFile","preFinish","fullname","processData","byteArray","Browser","handledByPreloadPlugin","noRunDep","dep","event","asyncLoad","indexedDB","mozIndexedDB","webkitIndexedDB","msIndexedDB","DB_NAME","pathname","DB_VERSION","DB_STORE_NAME","saveFilesToDB","openRequest","onupgradeneeded","createObjectStore","onsuccess","transaction","files","objectStore","ok","fail","total","putRequest","put","loadFilesFromDB","db","getRequest","SYSCALLS","DEFAULT_POLLMASK","calculateAt","dirfd","allowEmpty","getStreamFromFD","doStat","func","abs","floor","getTime","doMsync","addr","varargs","getStr","UTF8ToString","MAX_INT53","MIN_INT53","bigintToI53Checked","num","NaN","readI53FromI64","_emscripten_get_now","__MONTH_DAYS_LEAP_CUMULATIVE","__MONTH_DAYS_REGULAR_CUMULATIVE","allocateUTF8","_malloc","emscripten_realloc_buffer","grow","performance","ENV","getEnvStrings","strings","USER","LOGNAME","PWD","HOME","LANG","navigator","languages","_","x","readMode","writeMode","calledRun","asmLibraryArg","__syscall_chmod","__syscall_faccessat","amode","__syscall_fchmod","__syscall_fchown32","owner","group","__syscall_fcntl64","___errno_location","__syscall_fstat64","__syscall_ftruncate64","__syscall_getcwd","cwdLengthInBytes","__syscall_ioctl","op","argp","__syscall_lstat64","__syscall_mkdirat","__syscall_newfstatat","nofollow","__syscall_openat","__syscall_readlinkat","bufsize","endChar","__syscall_rmdir","__syscall_stat64","__syscall_unlinkat","__syscall_utimensat","times","seconds","nanoseconds","_emscripten_get_now_is_monotonic","_localtime_js","time","tmPtr","date","getSeconds","getMinutes","getHours","getDate","getMonth","getFullYear","getDay","yday","year","__yday_from_date","getTimezoneOffset","summerOffset","winterOffset","dst","_tzset_js","timezone","daylight","tzname","currentYear","winter","summer","stdTimezoneOffset","extractZone","match","toTimeString","winterName","summerName","winterNamePtr","summerNamePtr","emscripten_date_now","emscripten_get_now","emscripten_resize_heap","requestedSize","oldSize","maxHeapSize","multiple","cutDown","overGrownHeapSize","environ_get","__environ","environ_buf","bufSize","string","writeAsciiToMemory","environ_sizes_get","penviron_count","penviron_buf_size","fd_close","fd_fdstat_get","pbuf","fd_read","iov","iovcnt","pnum","curr","doReadv","fd_seek","newOffset","fd_sync","fd_write","doWritev","memory","wasi_snapshot_preview1","receiveInstance","cb","receiveInstantiationResult","instantiateArrayBuffer","receiver","catch","binary","reason","createWasm","run","doRun","postRun","preRun","setTimeout","runCaller","sqlite3ApiBootstrap","apiConfig","sqlite3ApiConfig","defaultConfig","sqlite3","bigIntEnabled","HEAPU64","debug","wasmfsOpfsDir","useStdAlloc","allocExportName","deallocExportName","reallocExportName","k","wasmOpfsDir","capi","wasm","__rcStr","rc","sqlite3_js_rc_str","SQLite3Error","_Error","_super","_this","_len","_key","rcStr","resultCode","SQLITE_ERROR","toss","_len2","_key2","toss3","isInt32","__SAB","SharedArrayBuffer","isSharedTypedArray","aTypedArray","typedArrayPart","begin","isBindableTypedArray","v","isSQLableTypedArray","affirmBindableTypedArray","utf8Decoder","typedArrayToString","typedArray","WasmAllocError","_Error2","_super2","_this2","_len3","_key3","SQLITE_NOMEM","_len4","_key4","sqlite3_bind_blob","sqlite3_bind_text","sqlite3_create_function_v2","pDb","funcName","nArg","eTextRep","pApp","xFunc","xStep","xFinal","xDestroy","sqlite3_create_function","sqlite3_create_window_function","xValue","xInverse","sqlite3_prepare_v3","dbPtr","sql","sqlByteLen","prepFlags","stmtPtrPtr","strPtrPtr","sqlite3_prepare_v2","sqlite3_exec","pVoid","pErrMsg","sqlite3_randomness","util","flexibleString","isPtr","cstrToJs","bigIntFits32","bigIntFits64","_max","BigInt","_min","bigIntFitsDouble","MIN_SAFE_INTEGER","MAX_SAFE_INTEGER","isTypedArray","BYTES_PER_ELEMENT","isUIThread","_len5","_key5","ptrSizeof","wasmPtrSizeof","ptrIR","wasmPtrIR","alloc","realloc","dealloc","allocFromTypedArray","srcTypedArray","pRet","heapForSize","keyAlloc","keyDealloc","keyRealloc","impl","m2","compileOptionUsed","optName","_result","_opt","_rx","_rxInt","opt","rv","ov","sqlite3_compileoption_get","sqlite3_compileoption_used","pstack","restore","sqlite3_wasm_pstack_restore","sizeofIR","sqlite3_wasm_pstack_alloc","allocChunks","sz","mem","allocPtr","safePtrSize","pointer","writeable","sqlite3_wasm_pstack_ptr","quota","sqlite3_wasm_pstack_quota","remaining","sqlite3_wasm_pstack_remaining","_wasm$exports","_len6","_key6","ta","heap8u","nAlloc","j","__wasmfsOpfsDir","sqlite3_wasmfs_opfs_dir","pdir","FileSystemHandle","FileSystemDirectoryHandle","FileSystemFileHandle","xCallWrapped","sqlite3_wasmfs_filename_is_persistent","sqlite3_js_db_uses_vfs","vfsName","dbName","pK","sqlite3_vfs_find","sqlite3_js_db_vfs","sqlite3_js_vfs_list","pVfs","oVfs","sqlite3_vfs","$zName","$pNext","dispose","sqlite3_js_db_export","schema","xWrap","testConvertArg","pOut","scope","scopedAllocPush","pSize","scopedAlloc","ppOut","zSchema","scopedAllocCString","sqlite3_wasm_db_serialize","peekPtr","nOut","peek","sqlite3_free","scopedAllocPop","dbPointer","sqlite3_wasm_db_vfs","sqlite3_js_aggregate_context","pCtx","sqlite3_aggregate_context","sqlite3_js_vfs_create_file","vfs","dataLen","pData","sqlite3_wasm_vfs_create_file","__kvvfsInfo","which","prefix","stores","sessionStorage","localStorage","sqlite3_js_kvvfs_clear","kvinfo","toRm","kk","removeItem","sqlite3_js_kvvfs_size","getItem","sqlite3_db_config","pii","ip","SQLITE_DBCONFIG_ENABLE_FKEY","SQLITE_DBCONFIG_ENABLE_TRIGGER","SQLITE_DBCONFIG_ENABLE_FTS3_TOKENIZER","SQLITE_DBCONFIG_ENABLE_LOAD_EXTENSION","SQLITE_DBCONFIG_NO_CKPT_ON_CLOSE","SQLITE_DBCONFIG_ENABLE_QPSG","SQLITE_DBCONFIG_TRIGGER_EQP","SQLITE_DBCONFIG_RESET_DATABASE","SQLITE_DBCONFIG_DEFENSIVE","SQLITE_DBCONFIG_WRITABLE_SCHEMA","SQLITE_DBCONFIG_LEGACY_ALTER_TABLE","SQLITE_DBCONFIG_DQS_DML","SQLITE_DBCONFIG_DQS_DDL","SQLITE_DBCONFIG_ENABLE_VIEW","SQLITE_DBCONFIG_LEGACY_FILE_FORMAT","SQLITE_DBCONFIG_TRUSTED_SCHEMA","SQLITE_DBCONFIG_LOOKASIDE","SQLITE_DBCONFIG_MAINDBNAME","SQLITE_MISUSE","sqlite3_value_to_js","pVal","throwIfCannotConvert","valType","sqlite3_value_type","SQLITE_INTEGER","sqlite3_value_int64","sqlite3_value_double","SQLITE_FLOAT","SQLITE_TEXT","sqlite3_value_text","SQLITE_BLOB","sqlite3_value_bytes","pBlob","sqlite3_value_blob","SQLITE_NULL","SQLITE_MISMATCH","sqlite3_values_to_js","argc","pArgv","tgt","sqlite3_result_error_js","sqlite3_result_error_nomem","sqlite3_result_error","sqlite3_result_js","sqlite3_result_int","sqlite3_result_double","sqlite3_result_int64","isInteger","_wasm$allocCString2","allocCString","sqlite3_result_text","SQLITE_WASM_DEALLOC","sqlite3_result_null","sqlite3_result_blob","sqlite3_column_js","pStmt","iCol","sqlite3_column_value","__newOldValue","pObj","pokePtr","pv","sqlite3_preupdate_new_js","sqlite3_preupdate_old_js","sqlite3changeset_new_js","pChangesetIter","sqlite3changeset_old_js","version","client","asyncPostInit","_asyncPostInit","_callee3","lip","postInit","_context3","initializersAsync","map","__isUnderTest","StructBinder","all","scriptInfo","initializers","WhWasmUtilInstaller","_class","_len7","_key7","pointerIR","cache","heapSize","freeFuncIndexes","utf8Encoder","TextEncoder","endsWith","heapWrappers","HEAP8U","HEAP16U","HEAP32U","HEAP64","HEAP64U","HEAP32F","HEAP64F","heap8","heap16","heap16u","heap32","heap32u","unsigned","functionTable","__indirect_function_table","functionEntry","fptr","ft","jsFuncToWasm","sig","sigTypes","P","typeCodes","f64","f32","i64","i32","uleb128Encode","rxJSig","sigParams","letterType","pushSigType","dest","letter","wasmCode","_step4","_iterator4","Instance","__installFunction","scoped","oldLen","installFunction","scopedInstallFunction","uninstallFunction","fi","list","poke","_step5","_iterator5","_len8","_key8","peek8","_len9","_key9","poke8","peek16","_len10","_key10","poke16","peek32","_len11","_key11","poke32","peek64","_len12","_key12","poke64","peek32f","_len13","_key13","poke32f","peek64f","_len14","_key14","poke64f","getMemValue","getPtrValue","setMemValue","setPtrValue","isPtr32","cstrlen","h","jstrlen","jstrcpy","jstr","maxBytes","addNul","cstrncpy","tgtPtr","srcPtr","strPtr","jstrToUintArray","encode","__affirmAlloc","__allocCStr","returnWithLength","allocator","__allocMainArgv","isScoped","pList","scopedAllocMainArgv","allocMainArgv","cArgvToJs","scopedAllocCall","__allocPtr","howMany","pIr","scopedAllocPtr","xGet","__argcMismatch","xCall","fname","_len15","_key15","convert","xArg","xResult","__xArgPtr","copyToResult","adaptPtr","_i2","_copyToResult","t","__xArgString","JSON","parse","AbstractArgAdapter","argv","argIndex","FuncPtrAdapter","_AbstractArgAdapter","_super3","_this3","warnOnUse","signature","contextKey","bindScope","bindScopes","bindMod","isTransient","isContext","isPermanent","singleton","callProxy","cm","__cmap","pair","contextMap","fp","debugFuncInstall","debugOut","__xArgAdapterCheck","__xResultAdapterCheck","convertArg","_len16","_key16","convertArgNoCheck","_len17","_key17","convertResult","convertResultNoCheck","fArg","resultType","_len18","argTypes","_key18","fIsFunc","xf","_step6","_iterator6","_loop","cxw","_len19","_key19","__xAdapter","typeName","adapter","modeName","xcvPart","resultAdapter","argAdapter","_len20","_key20","testConvertResult","yawl","wui","finalThen","wasmUtilTarget","_len21","_key21","malloc","free","Jaccwabyt","StructBinderFactory","_len22","_key22","SBF","memberPrefix","memberSuffix","debugFlags","__makeDebugFlags","deriveFrom","__flags","setter","_flags","isLittleEndian","DataView","setInt16","sigLetter","isFuncSig","sigIR","affirmBigIntArray","sPropName","__instancePointerMap","WeakMap","xPtrPropName","__freeStruct","delete","ondispose","StructType","structName","structInfo","sizeof","rop","__allocStruct","fill","__memberKeyProp","__lookupMember","memberName","tossIfNotFound","members","_i3","_Object$values","__memberSignature","emscriptenFormat","__ptrPropDescriptor","__structMemberKeys","_i4","_Object$keys","memberKey","__utf8Decoder","__utf8Encoder","__affirmCStringSignature","member","stringify","__memberToJsString","__addOnDispose","_obj$ondispose","_len23","_key23","__allocCString","lookupMember","memberToJsString","memberIsString","__memberIsString","memberKeys","memberSignature","memoryDump","setMemberCString","__setMemberCString","addOnDispose","_len24","_key24","isA","hasExternalPointer","isNumericValue","isFinite","makeMemberWrapper","descr","getters","setters","sw","sigDVGetter","sigDVSetter","sigDVSetWrapper","rxSig1","rxSig2","sigCheck","propName","sigGlyph","xPropName","dbg","prop","readOnly","lastMember","StructCtor","externalMemory","methodInfoForKey","mKey","_arguments","_len25","_key25","bindingSignatures","aNames","nCols","pColVals","pColNames","aVals","pV","iCode","s0","s1","s2","s3","int64","zDb","zTbl","iKey1","iKey2","z0","z1","rowid","sqlite3changegroup_add","_wasm$bindingSignatur","__ipsProxy","_objectSpread","__xString","nilType","_sqlite3$oo","oo1","Stmt","_sqlite3$oo2","DB","sqlite3_index_info","sqlite3_module","SQLITE_NOTFOUND","__xRcPtr","_step7","_iterator7","_step8","_iterator8","_step9","fI64Disabled","_iterator9","sqlite3_wasm_db_error","__db_err","msg","cJson","ctype","defineGroups","_i5","_defineGroups","_i6","_Object$entries","__rcMap","_i7","_arr2","_i8","_Object$entries2","_step10","notThese","WasmTestStruct","sqlite3_kvvfs_methods","sqlite3_index_constraint","sqlite3_index_orderby","sqlite3_index_constraint_usage","_iterator10","structs","_i9","_arr3","sqlite3_vtab_config","__dbArgcMismatch","__errEncoding","SQLITE_FORMAT","__argPDb","__argStr","__dbCleanupMap","dbMap","addCollation","collation","Set","add","toLowerCase","_addUDF","arity","addFunction","udf","addWindowFunc","wudf","cleanup","closeArgs","_i10","_arr4","_step11","_iterator11","sqlite3_create_collation_v2","SQLITE_UTF8","fmap","_step12","_iterator12","arities","fargs","_step13","_iterator13","clear","__sqlite3CloseV2","sqlite3_close_v2","sqlite3session_table_filter","__sqlite3SessionDelete","sqlite3session_delete","pSession","__sqlite3CreateCollationV2","zName","pArg","xCompare","sqlite3_create_collation","__cfProxy","xInverseAndStep","xFinalAndValue","__sqlite3CreateFunction","__sqlite3CreateWindowFunction","udfSetResult","udfConvertArgs","udfSetError","__prepare","basic","full","sqlLen","ppStmt","pzTail","_flexiString2","xSql","xSqlLen","__bindText","__bindBlob","nText","sqlite3_db_handle","pMem","_wasm$allocCString4","nMem","_wasm$allocCString6","sqlite3_config","_len26","_key26","SQLITE_CONFIG_COVERING_INDEX_SCAN","SQLITE_CONFIG_MEMSTATUS","SQLITE_CONFIG_SMALL_MALLOC","SQLITE_CONFIG_SORTERREF_SIZE","SQLITE_CONFIG_STMTJRNL_SPILL","SQLITE_CONFIG_URI","sqlite3_wasm_config_i","SQLITE_CONFIG_LOOKASIDE","sqlite3_wasm_config_ii","SQLITE_CONFIG_MEMDB_MAXSIZE","sqlite3_wasm_config_j","SQLITE_CONFIG_GETMALLOC","SQLITE_CONFIG_GETMUTEX","SQLITE_CONFIG_GETPCACHE2","SQLITE_CONFIG_GETPCACHE","SQLITE_CONFIG_HEAP","SQLITE_CONFIG_LOG","SQLITE_CONFIG_MALLOC","SQLITE_CONFIG_MMAP_SIZE","SQLITE_CONFIG_MULTITHREAD","SQLITE_CONFIG_MUTEX","SQLITE_CONFIG_PAGECACHE","SQLITE_CONFIG_PCACHE2","SQLITE_CONFIG_PCACHE","SQLITE_CONFIG_PCACHE_HDRSZ","SQLITE_CONFIG_PMASZ","SQLITE_CONFIG_SERIALIZED","SQLITE_CONFIG_SINGLETHREAD","SQLITE_CONFIG_SQLLOG","SQLITE_CONFIG_WIN32_HEAPSIZE","__autoExtFptr","sqlite3_auto_extension","fPtr","sqlite3_cancel_auto_extension","sqlite3_reset_auto_extension","_step14","_iterator14","pKvvfs","kvvfsMethods","sqlite3_wasm_kvvfs_methods","kvvfsMakeKey","sqlite3_wasm_kvvfsMakeKeyOnPstack","kvvfsStorage","zClass","kvvfsImpls","xRead","zKey","zBuf","nBuf","astack","zXKey","jKey","jV","nV","zV","copyWithin","xWrite","zData","setItem","SQLITE_IOERR","xDelete","_i11","_Object$keys2","sqlite3_vfs_unregister","libVersion","libVersionNumber","sourceId","downloadVersion","_len28","_key28","__ptrMap","__stmtMap","getOwnOption","dflt","checkSqlite3Rc","sqliteResultCode","sqlite3_errmsg","sqlite3_errstr","__dbTraceToConsole","SQLITE_TRACE_STMT","counter","__vfsPostOpenSql","dbCtorHelper","_len29","_key29","_name2vfs","isWorkerThread","normalizeArgs","flagsStr","fnJs","vfsCheck","oflags","SQLITE_OPEN_CREATE","SQLITE_OPEN_READWRITE","SQLITE_OPEN_READONLY","SQLITE_OPEN_EXRESCODE","pPtr","sqlite3_open_v2","sqlite3_extended_result_codes","sqlite3_trace_v2","postInitSql","setVfsPostOpenSql","_len30","_key30","BindTypes","null","number","boolean","blob","bigint","columnCount","sqlite3_column_count","parameterCount","sqlite3_bind_parameter_count","affirmDbOpen","affirmColIndex","stmt","ndx","__selectFirstRow","prepare","_len31","getArgs","_key31","finalize","__selectAll","rowMode","returnValue","checkRc","isOpen","affirmOpen","onclose","before","after","changes","sixtyFour","sqlite3_total_changes64","sqlite3_total_changes","sqlite3_changes64","sqlite3_changes","dbFilename","sqlite3_db_filename","dbNumber","sqlite3_db_name","dbVfsName","resultRows","returnVal","saveSql","cbArg","$colName","parseExecArgs","evalFirstResult","columnNames","isTA","pSql","pSqlEnd","sqlite3_sql","getColumnNames","_isLocked","row","createFunction","isFunc","isWindow","fFlags","SQLITE_DETERMINISTIC","SQLITE_DIRECTONLY","SQLITE_INNOCUOUS","xArity","arityArg","selectValue","asType","selectValues","selectArray","selectObject","selectArrays","selectObjects","openStatementCount","opener","savepoint","affirmStmtOpen","affirmSupportedBindType","isSupportedBindType","affirmUnlocked","currentOpName","bindOne","bindType","_tooBigInt","asBlob","_wasm$allocCString8","pStr","sqlite3_bind_parameter_index","affirmParamIndex","sqlite3_bind_null","sqlite3_bind_int","sqlite3_bind_int64","sqlite3_bind_double","_mayGet","sqlite3_finalize","clearBindings","sqlite3_clear_bindings","alsoClearBinds","sqlite3_reset","_this4","bindAsBlob","sqlite3_step","SQLITE_DONE","SQLITE_ROW","stepReset","stepFinalize","sqlite3_column_name","sqlite3_column_type","sqlite3_column_int64","sqlite3_column_double","sqlite3_column_text","sqlite3_column_bytes","sqlite3_column_blob","_blobXfer","getInt","getFloat","getString","getBlob","getJSON","SQLITE_STRING","getColumnName","getParamIndex","JsStorageDb","storageName","jdb","clearStorage","storageSize","initWorker1API","_len32","_key32","getDbId","wState","idMap","idSeq","dbList","xfer","dbs","alsoUnlink","ddNdx","sqlite3_wasm_vfs_unlink","post","xferList","postMessage","getDb","require","getMsgDb","msgData","affirmExists","dbId","wMsgHandler","ev","oargs","simulateError","guessVfs","cause","persistent","doUnlink","theCallback","rowNumber","hadColNames","vfsList","opfsEnabled","opfs","export","mimetype","_opfsTree","_callee4","_context4","treeList","_x2","onmessage","_ref3","_callee5","evType","arrivalTime","_context5","t0","operation","errorClass","messageId","workerReceivedTime","workerRespondTime","departureTime","_x3","vtab","sii","nthConstraint","asPtr","$nConstraint","$aConstraint","nthConstraintUsage","$aConstraintUsage","nthOrderBy","$nOrderBy","$aOrderBy","installMethod","applyArgcCheck","installMethodArgcCheck","argcProxy","_len33","_key33","removeFuncList","__removeFuncList","sigN","memKey","fProxy","pFunc","installMethods","structInstance","methods","seen","_i13","_Object$keys3","prior","mkey","registerVfs","asDefault","sqlite3_vfs_register","installVfs","propList","_i14","_propList","struct","StructPtrMapper","__xWrap","removeMapping","__xWrapFactory","pCObj","unget","xVtab","sqlite3_vtab","xCursor","sqlite3_vtab_cursor","xIndexInfo","pIdxInfo","xError","defaultRc","errorReporter","xRowid","ppRowid64","setupModule","createdMod","mod","_i15","_Object$entries3","xConnect","xDisconnect","catchExceptions","fwrap","pAux","ppVtab","pzErr","remethods","_i16","_mnames","xCreate","$iVersion","iVersion","$xShadowName","$xSavePoint","$xRelease","$xRollbackTo","installOpfsVfs","options","Atomics","createSyncAccessHandle","storage","getDirectory","urlParams","searchParams","verbose","sanityChecks","proxyUri","defaultProxyUri","thePromise","promiseResolve","promiseReject_","loggers","logImpl","level","_len34","_key34","_len35","_key35","_len36","_key36","_len37","_key37","sqlite3_file","sqlite3_io_methods","opfsUtil","metrics","dump","opIds","wait","avgTime","avgWait","s11n","W","serialize","deserialize","opfsVfs","opfsIoMethods","promiseReject","Worker","_originalOnError","pDVfs","dVfs","$szOsFile","$mxPathname","$xDlOpen","$xDlError","$xDlSym","$xDlClose","littleEndian","asyncIdleWaitTime","asyncS11nExceptions","fileBufferSize","sabS11nOffset","sabS11nSize","sabIO","whichOp","xAccess","xClose","xDeleteNoWait","xFileControl","xFileSize","xLock","xOpen","xSleep","xSync","xTruncate","xUnlock","sabOP","sq3Codes","opfsFlags","OPFS_UNLOCK_ASAP","defaultUnlockAsap","opRun","_state$s11n","opNdx","_len38","_key38","store","sabOPView","notify","load","asyncShutdown","asyncRestart","randomFilename","_chars","random","__openFiles","opTimer","mTimeStart","mTimeEnd","ioSyncWrappers","xCheckReservedLock","pFile","lockType","sq3File","xDeviceCharacteristics","SQLITE_IOCAP_UNDELETABLE_WHEN_OPEN","opId","SQLITE_FCNTL_SYNC","pSz64","pDest","offset64","SQLITE_IOERR_SHORT_READ","sabView","SQLITE_IOERR_READ","sz64","SQLITE_LOCK_NONE","pSrc","SQLITE_IOERR_WRITE","vfsSyncWrappers","xCurrentTime","xCurrentTimeInt64","doSyncDir","xFullPathname","SQLITE_CANTOPEN","xGetLastError","pOutFlags","sqlite3_uri_boolean","fh","fid","sab","sabFileBufView","$pMethods","$xRandomness","$xSleep","xRandomness","ms","getResolvedPath","splitIt","getDirForFilename","_f2","_callee6","absFilename","createDirs","dh","_iterator15","_step15","dirName","_args6","_context6","rootDirectory","getDirectoryHandle","_x4","_ref4","_callee7","absDirName","_context7","_x5","entryExists","_ref5","_callee8","fsEntryName","_yield$opfsUtil$getDi","_yield$opfsUtil$getDi2","_context8","getFileHandle","_x6","_callee11","doDir","_context10","_callee9","_callee10","dirHandle","_iteratorAbruptCompletion","_didIteratorError","_iteratorError","_iterator","_step","subDir","_context9","kind","return","_x7","_x8","rmfr","_callee12","_iteratorAbruptCompletion2","_didIteratorError2","_iteratorError2","_iterator2","_step2","_context11","recurse","removeEntry","_ref8","_callee13","recursive","throwOnError","_yield$opfsUtil$getDi3","_yield$opfsUtil$getDi4","hDir","filenamePart","_args12","_context12","_x9","traverse","_ref9","_callee16","defaultOpt","_context14","directory","_callee14","_callee15","depth","_iteratorAbruptCompletion3","_didIteratorError3","_iteratorError3","_iterator3","_step3","_context13","t1","_x11","_x12","_x10","OpfsDb","_sqlite3$oo1$DB$dbCto","oo1Db","sqlite3_busy_timeout","_ref10","payload","io","sabS11nView","textDecoder","textEncoder","viewU8","viewDV","TypeIds","getTypeIdById","tid","typeIds","getInt32","_len39","_key39","setInt32","initS11n","openFlags","SQLITE_OPEN_MAIN_DB","dbFile","zDbFile","readBuf","jRead","sanityCheck","_ref11","_callee17","proxyJs","_context15","sqlite3Dir","_x13","SABC","ready","toExportForESM","_self","_self$document","originalInit","initModuleState","moduleScript","isWorker","WorkerGlobalScope","_console","_len40","_key40","li","ff","EmscriptenModule","threadAlert","sim","scriptDir"],"sourceRoot":""}